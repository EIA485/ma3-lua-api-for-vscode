{
  "classes": {
    "0x7FF73FC7E620": {
      "name": "ImportFakeObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCB29D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SourceIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DestinationIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AutoInterface"
        }
      ]
    },
    "0x7FF73FCB29D0": {
      "name": "ImportObjectCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC7E620",
      "parent": "0x7FF73C3C2990",
      "properties": []
    },
    "0x7FF73C3BEBB0": {
      "name": "PSRPatchSheetContentFilter",
      "base": "0x7FF73FD78300",
      "child": "0x7FF73C3292C0",
      "parent": "0x7FF73C3C18A0",
      "properties": []
    },
    "0x7FF73C3C18A0": {
      "name": "PSRPatchSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::PSR::PatchSheetSettings::FilterType>::`vftable'",
          "name": "FilterType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PSRPatchFilterType"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LayerFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "LayerFilterList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ClassFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "ClassFilterList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FixtureTypeFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "FixtureTypeFilterList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StageFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None_only"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned int, struct Container::CollectPolicies<unsigned int>>>::`vftable'",
          "name": "StageFilterList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HideEnvironmental",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::PSR::PatchSheetSettings::*)(void), {public: void DB::PSR::PatchSheetSettings::ResetFilters(void), 0}>::`vftable'",
          "name": "ResetFilters",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD76390": {
      "name": "PSRPatchGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C3C2990": {
      "name": "ConvertTask",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC41490",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ShowFileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Status",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PSR::Operation>::`vftable'",
          "name": "PSRStatus",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PsrOperation"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PSRAllowed",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnRunPreparation(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnRunPreparation",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnRunPreparation(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnOpenPatch(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnOpenPatch",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnOpenPatch(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnRunConversion(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnRunConversion",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnRunConversion(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnOpenImport(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnOpenImport",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnOpenImport(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnRunImport(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnRunImport",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnRunImport(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnCleanup(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCleanup",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCleanup(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::PSR::ConvertTask::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::PSR::ConvertTask::OnClosePSR(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnClosePSR",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClosePSR(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB3D4F0": {
      "name": "PatchFakeObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF2220",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Stage",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Default"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NoneAndDefault"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Default"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NoneAndDefault"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Patch",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Class",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PosX",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PosY",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PosZ",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBF2220": {
      "name": "PatchFakeCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB3D4F0",
      "parent": "0x7FF73C3C2990",
      "properties": []
    },
    "0x7FF73C2FCD40": {
      "name": "MVRFileCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC13CA0",
      "parent": "0x7FF73FC12430",
      "properties": []
    },
    "0x7FF73FC13CA0": {
      "name": "MVRFile",
      "base": "0x7FF73FAED2A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2FCD40",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OnStations",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Size",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "VersionMajor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "VersionMinor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::MVR::UUID>::`vftable'",
          "name": "UUID",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAED2A0": {
      "name": "MVRLocalFile",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Comment",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCD95F0": {
      "name": "MVRServiceCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C2F84D0",
      "parent": "0x7FF73FC12430",
      "properties": []
    },
    "0x7FF73C2F84D0": {
      "name": "MVRService",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C2FBA90",
      "parent": "0x7FF73FCD95F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::MVR::UUID>::`vftable'",
          "name": "UUID",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Joined",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Left",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsActive",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsMyself",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73C2FBA90": {
      "name": "MVRServiceInterface",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2F84D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "IP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Port",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Priority",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Weight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC12430": {
      "name": "TempMVRExchange",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73FD0AB60": {
      "name": "MVRxchange",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAED2A0",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "GroupName",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Interface",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F830380": {
      "name": "PatternChannel",
      "base": "0x7FF73F830D70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB28550",
      "properties": []
    },
    "0x7FF73F831BE0": {
      "name": "PatternChannels",
      "base": "0x7FF73FB8F570",
      "child": "0x7FF73F830380",
      "parent": "0x7FF73FCF8740",
      "properties": []
    },
    "0x7FF73FB28550": {
      "name": "Pattern",
      "base": "0x7FF73FCF8740",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F829D00",
      "properties": []
    },
    "0x7FF73F829D00": {
      "name": "Patterns",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FB28550",
      "parent": "0x7FF73F82F990",
      "properties": []
    },
    "0x7FF73FC84660": {
      "name": "BitmapChannel",
      "base": "0x7FF73F830D70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F82A6F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Intensity",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorSource"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ValueLow",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ValueHigh",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F82A6F0": {
      "name": "BitmapChannels",
      "base": "0x7FF73FB8F570",
      "child": "0x7FF73FC84660",
      "parent": "0x7FF73FC16B30",
      "properties": []
    },
    "0x7FF73F8283F0": {
      "name": "BitmapConfig",
      "base": "0x7FF73F82F400",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F82CA60",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Image>>::`vftable'",
          "name": "Content",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "64",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "64",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Interpolate",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Alpha",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ContentMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ClipMode"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlX",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlY",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlZoom",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "50.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlAspect",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlRotate",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorR",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorG",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorB",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F82CA60": {
      "name": "BitmapConfigs",
      "base": "0x7FF73FD0D2D0",
      "child": "0x7FF73F8283F0",
      "parent": "0x7FF73FC16B30",
      "properties": []
    },
    "0x7FF73FC16B30": {
      "name": "Bitmap",
      "base": "0x7FF73FCF8740",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FADBCA0",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlContent",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ConfigHandle",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlX",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlY",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlZoom",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "50.0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlAspect",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ControlRotate",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorR",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorG",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ColorB",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SpeedMaster",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedMaster"
        },
        {
          "CTypeName": "const DB::Property<class DB::Generator::FixturePropertyValue>::`vftable'",
          "name": "BMC",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AutoFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HasActiveBMC",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::Generator::BitmapObj::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::Generator::BitmapObj::OnActivateBMC(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnActivateBMC",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnActivateBMC(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::Generator::BitmapObj::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::Generator::BitmapObj::OnLuaCommand(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "LuaCommand",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:LuaCommand(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FADBCA0": {
      "name": "Bitmaps",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FC16B30",
      "parent": "0x7FF73F82F990",
      "properties": []
    },
    "0x7FF73FB2C040": {
      "name": "RandomChannel",
      "base": "0x7FF73F830D70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBD65F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SpeedMaster",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedMaster"
        },
        {
          "CTypeName": "const DB::Property<class DB::SpeedPropertyValue>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "60.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SpeedVariance",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Phase",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "PhaseVariance",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Low",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LowVariance",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "High",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "HighVariance",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Attack",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Decay",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Ratio",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "50.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "RatioVariance",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SpeedOnce",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PhaseOnce",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RandomStart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBD65F0": {
      "name": "RandomChannels",
      "base": "0x7FF73FB8F570",
      "child": "0x7FF73FB2C040",
      "parent": "0x7FF73F829770",
      "properties": []
    },
    "0x7FF73F829770": {
      "name": "Random",
      "base": "0x7FF73FCF8740",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCB5B30",
      "properties": []
    },
    "0x7FF73FCB5B30": {
      "name": "Generators",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73F829770",
      "parent": "0x7FF73F82F990",
      "properties": []
    },
    "0x7FF73F830D70": {
      "name": "GeneratorBaseChannel",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB8F570",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::AttributeIndexPropertyValue>::`vftable'",
          "name": "Attribute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Dimmer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VirtualDimmer",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GenVirtualDimmer"
        }
      ]
    },
    "0x7FF73FB8F570": {
      "name": "GeneratorChannels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F830D70",
      "parent": "0x7FF73FCF8740",
      "properties": []
    },
    "0x7FF73F82F400": {
      "name": "GeneratorConfiguration",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD0D2D0",
      "properties": []
    },
    "0x7FF73FD0D2D0": {
      "name": "GeneratorConfigurations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F82F400",
      "parent": "0x7FF73FCF8740",
      "properties": []
    },
    "0x7FF73FCF8740": {
      "name": "GeneratorBaseObject",
      "base": "0x7FF73FC912B0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3861E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::GridSelection>>::`vftable'",
          "name": "GridSelection",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73F82F990": {
      "name": "GeneratorTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3861E0",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73F855950": {
      "name": "StorePreferencesViews",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": []
    },
    "0x7FF73C318C50": {
      "name": "ShowCreatorGridObjectContentFilter",
      "base": "0x7FF73FD78300",
      "child": "0x7FF73C3292C0",
      "parent": "0x7FF73FCE8AE0",
      "properties": []
    },
    "0x7FF73FCE8AE0": {
      "name": "ShowCreatorSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::ShowCreatorSettings>>::`vftable'",
          "name": "ShowCreatorSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShowCreatorSheetSettings::GridType>::`vftable'",
          "name": "GridType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridType"
        }
      ]
    },
    "0x7FF73FD72000": {
      "name": "ShowCreatorSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ShowCreatorObjectType>::`vftable'",
          "name": "ObjectType",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShowCreatorObjectType"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SubPoolSelectorValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SubPoolSelectorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "CreateReferenceObject",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SheetStyle",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "FixtureGrid",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Advanced",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ExpandAtFilter",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SortColorBySaturation",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SortColorBy"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "UseColorBook",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "UseChannelSet",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AutoCreateSource"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointerBase>::`vftable'",
          "name": "DestinationObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ObjectTypeValid",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IncludeDependencies",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GapsImport",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GapsExport",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShowCreatorSettings::LastSelectedTab>::`vftable'",
          "name": "LastSelectedTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "LastSelectedTab"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShowCreatorSettings::FixtureSourceType>::`vftable'",
          "name": "FixtureSourceType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureSourceType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DimmerIncrement",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AmountHue",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AmountSaturation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C375BE0": {
      "name": "SmartViewSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD72E50": {
      "name": "SmartViewSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C375BE0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCA48C0": {
      "name": "RunningPlaybacksGirdContentFilter",
      "base": "0x7FF73FC3E7A0",
      "child": "0x7FF73C385C50",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD37D00": {
      "name": "RunningPlaybacksSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MyPlaybacksOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Show only my playbacks",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SheetStyle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Show pool in sheet-style",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OffMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Turn Selected Items Off",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PlaybacksToShow",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "ShowAllPlaybacks",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Show playbacks of type",
          "Enum": "PlaybacksToShow"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "HoldList",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Lock Listed Items in Place while turning them Off",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::User>>::`vftable'",
          "name": "User",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedDataPool",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C292970": {
      "name": "RunningPlaybacksSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD37D00",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBEE2C0": {
      "name": "RunningPlaybacksSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C32C750": {
      "name": "SoundPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SoundPoolAction"
        }
      ]
    },
    "0x7FF73FD06390": {
      "name": "SoundPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C32C750",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C263D60": {
      "name": "VideoPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VideoPoolAction"
        }
      ]
    },
    "0x7FF73FCDF1D0": {
      "name": "VideoPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C263D60",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C34D870": {
      "name": "TimecodeSlotPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSlotPoolAction"
        }
      ]
    },
    "0x7FF73FC8AB00": {
      "name": "TimecodeSlotPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C34D870",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAEC450": {
      "name": "PresetVideoPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB89B50": {
      "name": "PresetVideoPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAEC450",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCFA120": {
      "name": "PresetShapersPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C2E6490": {
      "name": "PresetShapersPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCFA120",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C24DB80": {
      "name": "PresetControlPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAB7F70": {
      "name": "PresetControlPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C24DB80",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC2ABD0": {
      "name": "PresetFocusPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC43860": {
      "name": "PresetFocusPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC2ABD0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBF81A0": {
      "name": "PresetBeamPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC7F1B0": {
      "name": "PresetBeamPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBF81A0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB39E70": {
      "name": "PresetColorPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3223C0": {
      "name": "PresetColorPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB39E70",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAEA370": {
      "name": "PresetGoboPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3219D0": {
      "name": "PresetGoboPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAEA370",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD7A730": {
      "name": "PresetPositionPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC91CA0": {
      "name": "PresetPositionPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD7A730",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3B47C0": {
      "name": "PresetDimmerPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F871540": {
      "name": "PresetDimmerPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3B47C0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB3EAE0": {
      "name": "PresetAllPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAF51A0": {
      "name": "PresetAllPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB3EAE0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB4FF60": {
      "name": "PresetDynamicPoolSettings",
      "base": "0x7FF73FBC9F20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCFF700": {
      "name": "PresetDynamicPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB4FF60",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBC9F20": {
      "name": "PresetPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::PresetDisplayMode>::`vftable'",
          "name": "DisplayMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetDisplayMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetAction"
        }
      ]
    },
    "0x7FF73FD36120": {
      "name": "PresetPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBC9F20",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C327750": {
      "name": "WorldPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC2E510": {
      "name": "WorldPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C327750",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC7ADA0": {
      "name": "TimerPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimerAction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimerAction"
        }
      ]
    },
    "0x7FF73F835A50": {
      "name": "TimerPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC7ADA0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3D2CC0": {
      "name": "TimecodePoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodePoolAction"
        }
      ]
    },
    "0x7FF73C3446B0": {
      "name": "TimecodePoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3D2CC0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB49A00": {
      "name": "SequencePoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SequenceAction"
        }
      ]
    },
    "0x7FF73FD2A920": {
      "name": "SequencePoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB49A00",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C2F06A0": {
      "name": "QuickeyPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD52FD0": {
      "name": "QuickeyPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C2F06A0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB2E7A0": {
      "name": "PluginPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PluginPoolAction"
        }
      ]
    },
    "0x7FF73F88A690": {
      "name": "PluginPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB2E7A0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C24EF00": {
      "name": "PagePoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD7EBF0": {
      "name": "PagePoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C24EF00",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD661E0": {
      "name": "MatricksPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F820280": {
      "name": "MatricksPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD661E0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C35B080": {
      "name": "MacroPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MacroPoolAction"
        }
      ]
    },
    "0x7FF73C3378A0": {
      "name": "MacroPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C35B080",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBBE6E0": {
      "name": "LayoutPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCF5AB0": {
      "name": "LayoutPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBBE6E0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB23100": {
      "name": "GroupPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C249A40": {
      "name": "GroupPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB23100",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAFB710": {
      "name": "GeneratorPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC78310": {
      "name": "GeneratorPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAFB710",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD1B510": {
      "name": "GelPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DisplayPool",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowName",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowKey",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB81E10": {
      "name": "GelPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD1B510",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C287D10": {
      "name": "FilterPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Action",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FilterAction"
        }
      ]
    },
    "0x7FF73C32C0F0": {
      "name": "FilterPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C287D10",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB0F3A0": {
      "name": "ExecConfigPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C359BD0": {
      "name": "ExecConfigPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB0F3A0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBF6EF0": {
      "name": "BitmapPoolSettings",
      "base": "0x7FF73C308730",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC25130": {
      "name": "BitmapPoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBF6EF0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C308730": {
      "name": "PoolSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEmpty",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "PoolColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "EmptyColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ForNoneColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ForSomeColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ForAllColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowBottomMenu",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RightClickToEdit",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ObjectActionEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PoolColumnsCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Not Defined",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DefinedPoolColumns"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::DataPool>>::`vftable'",
          "name": "DataPool",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PoolType>::`vftable'",
          "name": "PoolType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Sequence",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Pooltype"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DrawActiveMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F87F590": {
      "name": "PoolSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C308730",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC840D0": {
      "name": "ViewButtonScreen",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C2F3680",
      "parent": "0x7FF73F89E800",
      "properties": []
    },
    "0x7FF73F89E800": {
      "name": "ViewButtonScreens",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC840D0",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73C2F3680": {
      "name": "ViewButton",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC840D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "Object",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBA7570": {
      "name": "ScreenContents",
      "base": "0x7FF73F88B080",
      "child": "0x7FF73FCAA3C0",
      "parent": "0x7FF73FC777F0",
      "properties": []
    },
    "0x7FF73FCAA3C0": {
      "name": "ScreenContent",
      "base": "0x7FF73FCEF640",
      "child": "0x7FF73FD46E70",
      "parent": "0x7FF73FBA7570",
      "properties": []
    },
    "0x7FF73FCEF640": {
      "name": "View",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FD46E70",
      "parent": "0x7FF73F88B080",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay1",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay2",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay3",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay4",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay5",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay6",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay7",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentMask",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RequestedW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RequestedSize"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RequestedH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RequestedSize"
        }
      ]
    },
    "0x7FF73F88B080": {
      "name": "Views",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FCEF640",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73FD46E70": {
      "name": "ViewWidget",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCEF640",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Display",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "X",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Y",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "W",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "H",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MinW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MinH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MaxW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MaxH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetPoolType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Dynamic",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DynamicPresetPool"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "MinSizeTranspose",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SnapToBlockSize",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "UIWindow",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C350100": {
      "name": "PresetSheetFilter",
      "base": "0x7FF73FD34870",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Preset>>::`vftable'",
          "name": "Preset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD6DA60": {
      "name": "PresetEditorSettings",
      "base": "0x7FF73FBAD230",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB74010": {
      "name": "LayoutElementDefaults",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB44940",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::AssignType>::`vftable'",
          "name": "ElementType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentButtonFunctions"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Bar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ObjectName",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IndicatorBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SelectionRelevance",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutElementSelectionRelevance"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Border",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "BorderSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "BorderColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::FontSizes>::`vftable'",
          "name": "ObjectTextSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizes"
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "CustomTextColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "CustomTextAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::LayoutElementAlignmentV>::`vftable'",
          "name": "CustomTextAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutElementAlignmentV"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::FontSizes>::`vftable'",
          "name": "CustomTextSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FullResolution",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB44940": {
      "name": "LayoutElementDefaultsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB74010",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3C80B0": {
      "name": "LayoutViewSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Layout>>::`vftable'",
          "name": "Layout",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Tool",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutTool"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "CanvasFitMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Bar",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutStretch"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "VisibleGrid",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "50",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SnapGrid",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "50",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "GridColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PaddingLeft",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PaddingRight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PaddingTop",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PaddingBottom",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "GridStyle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutGridStyle"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SnaptoGrid",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoFit",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Setup",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RightClickToEdit",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowSelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "true",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectionMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "true",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SelectionModeLayout"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FitType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutFitType"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Scale",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Aspect",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ScrollPos>::`vftable'",
          "name": "ScrollH",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ScrollPos>::`vftable'",
          "name": "ScrollV",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::LayoutOutputSelection>::`vftable'",
          "name": "LayoutOutputSelection",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutOutputSelection"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FilterObj>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Filters.LayoutView",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LassoFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutLassoSelectionFilter"
        }
      ]
    },
    "0x7FF73F87CBB0": {
      "name": "LayoutViewSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3C80B0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB0C2B0": {
      "name": "Element",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41A830",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::AssignType>::`vftable'",
          "name": "AssignType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageRotation>::`vftable'",
          "name": "AppearanceRotation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageRotation"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageMirror>::`vftable'",
          "name": "Mirror",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageMirror"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Object",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentButtonFunctions"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Selected",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PosX",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PosY",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityElement",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityObjectName",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityCID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityIndicatorBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "VisibilitySelectionRelevance",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibilityBorder",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutVisibility"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "BorderSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "BorderColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsInWorld",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Scribble>>::`vftable'",
          "name": "Scribble",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::FontSizes>::`vftable'",
          "name": "ObjectTextSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CustomTextVertical",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FullResolution",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "IDType",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C41A830": {
      "name": "Layout",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FB0C2B0",
      "parent": "0x7FF73FC7DEF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PositionX",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PositionY",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DimensionW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DimensionH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "UsedX",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "UsedY",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "UsedW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "UsedH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "CanvasAppearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ViewPosActive",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "ViewPosScale",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Markers",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ValueColors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ActiveStyle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AxisSystem>::`vftable'",
          "name": "AxisSystem",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AxisSystem"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RotationMode>::`vftable'",
          "name": "RotationMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RotationMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AxisSystem>::`vftable'",
          "name": "LayoutType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AxisGroupType>::`vftable'",
          "name": "AxisGroupType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AxisGroupType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderFunction>::`vftable'",
          "name": "EncoderFunction",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFunctionLayoutView"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridDirection>::`vftable'",
          "name": "GridDirection",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridRowOrder>::`vftable'",
          "name": "GridRowOrder",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RowOrder"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridColumnOrder>::`vftable'",
          "name": "GridColumnOrder",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColumnOrder"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Columns",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Rows",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "ColumnsInterval",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RowsInterval",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartX",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthX",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartY",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthY",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartZ",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthZ",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RadiusStart",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RadiusDelta",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "AngleStart",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "AngleRange",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "CameraIndex",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Scale",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Ratio",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "MoveX",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "MoveY",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ArrangeOnChange",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SendChangesWhileEncoderEvent",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC7DEF0": {
      "name": "Layouts",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C41A830",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73FCBE100": {
      "name": "LayoutCameraObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB2D2F0": {
      "name": "DCRemote",
      "base": "0x7FF73FBBAA20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB0A080",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Signal",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB0A080": {
      "name": "DCRemotes",
      "base": "0x7FF73FD04290",
      "child": "0x7FF73FB2D2F0",
      "parent": "0x7FF73FC20EC0",
      "properties": []
    },
    "0x7FF73FBA9480": {
      "name": "MIDIRemote",
      "base": "0x7FF73FBBAA20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3E0BA0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TriggerOn",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TriggerOff",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InFrom",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InTo",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIDIChannel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIDIIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIDIType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RemoteMidiType"
        }
      ]
    },
    "0x7FF73C3E0BA0": {
      "name": "MIDIRemotes",
      "base": "0x7FF73FD04290",
      "child": "0x7FF73FBA9480",
      "parent": "0x7FF73FC20EC0",
      "properties": []
    },
    "0x7FF73C416420": {
      "name": "DmxRemote",
      "base": "0x7FF73FBBAA20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C30B9B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Address",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::RemoteDmx::Resolution>::`vftable'",
          "name": "Resolution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RemoteResolution"
        }
      ]
    },
    "0x7FF73C30B9B0": {
      "name": "DmxRemotes",
      "base": "0x7FF73FD04290",
      "child": "0x7FF73C416420",
      "parent": "0x7FF73FC20EC0",
      "properties": []
    },
    "0x7FF73FBBAA20": {
      "name": "Remote",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD04290",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Fader",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentFaderFunctions"
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Key",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentButtonFunctions"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "TriggerOn",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "TriggerOff",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "InFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "InTo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "OutFrom",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "OutTo",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "In",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Out",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD04290": {
      "name": "RemoteCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBBAA20",
      "parent": "0x7FF73FC20EC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FeedbackInput",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC20EC0": {
      "name": "Remotes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD04290",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73F876F80": {
      "name": "AgendaEvent",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD10420",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Scribble>>::`vftable'",
          "name": "Scribble",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::AgendaMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AgendaMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "StartDate",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "StartTime",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "EndDate",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "EndTime",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "DaylightOffset",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "ValidDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0.1s",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Object",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::StreamToken>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentButtonFunctions"
        },
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "Command",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Repeat",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Countdown",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "PlannedDate",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "PlannedTime",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RepeatCountDays",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RepeatCountTotal",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnMonday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnTuesday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnWednesday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnThursday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnFriday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnSaturday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnSunday",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnFirstWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnSecondWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnThirdWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnFourthWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnFifthWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RepeatOnSixthWeek",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DayRepeat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "WeekRepeat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MonthRepeat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "RepeatEveryYear",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "MinuteInterval",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Agenda::*)(void), {public: void DB::Agenda::ResetPattern(void), 0}>::`vftable'",
          "name": "ResetPattern",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Agenda::*)(void), {public: void DB::Agenda::ResetEnddate(void), 0}>::`vftable'",
          "name": "ResetEnddate",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (DB::Agenda::*)(void), {public: bool DB::Agenda::Fire(void), 0}>::`vftable'",
          "name": "Fire",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD10420": {
      "name": "Agendas",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F876F80",
      "parent": "0x7FF73F821990",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Running",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD166C0": {
      "name": "StorePreferencesTimecode",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "OffsetTCSlot",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LoopMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LoopMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LoopCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "TCSlot",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AutoStart",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AutoStop",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SwitchOff",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Playbacks Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PlaybacksOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Goto",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "as Goto (Status)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RecordGo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AssertPrevEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PlaybackandRecord",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Manual Events",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EventsPlaybackRecord"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordTimedCues",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordCueCommands",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordMacroEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordRemoteEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserBits",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Timedisplayformat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        }
      ]
    },
    "0x7FF73FCFC0F0": {
      "name": "TimecodeGridColumnFilter",
      "base": "0x7FF73FC2CCD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": []
    },
    "0x7FF73C34CC80": {
      "name": "TimecodeWindowSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Timecode>>::`vftable'",
          "name": "Timecode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Timecode>>::`vftable'",
          "name": "TimecodeHandle",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimecodeTool>::`vftable'",
          "name": "Tool",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Select",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeTool"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimeCursorScrollMode>::`vftable'",
          "name": "CursorScrollMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Page",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeCursorScrollMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimecodeViewMode>::`vftable'",
          "name": "ViewMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Timeline",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TCViewMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimecodeTextMode>::`vftable'",
          "name": "TextMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TCTextMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TimelineOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Timecode>>::`vftable'",
          "name": "CurrentTimecode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowTimeline",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowTime",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FollowTimeCursor",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PlaybackToolbar",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EventDiamond",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EventSymbol",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EventCueNumber",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EventCueName",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EventCmdIndicator",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Markerintracks",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectionCount",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        }
      ]
    },
    "0x7FF73C27C0D0": {
      "name": "TimecodeWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C34CC80",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C33A8C0": {
      "name": "TimecodeWindowSharedData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAC3D90",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::TimecodeSelectionTarget>::`vftable'",
          "name": "SelectionTargetType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Events",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSelectionTarget"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Setup",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LastEvent",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSelectLastEventMode"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>> (DB::TimecodeWindowSharedData::*)(void)const, {public: class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>> DB::TimecodeWindowSharedData::GetSelectionForLua(void)const, 0}>::`vftable'",
          "name": "GetSelection",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Gets a collect of currently selected items"
        }
      ]
    },
    "0x7FF73FAC3D90": {
      "name": "TimecodeWindowSharedContainer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C33A8C0",
      "parent": "0x7FF73C34CC80",
      "properties": []
    },
    "0x7FF73C34DE00": {
      "name": "TimecodeGridMainSelection",
      "base": "0x7FF73C31D240",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Selection model for a timecode main grid",
      "properties": []
    },
    "0x7FF73C2DA220": {
      "name": "TimecodeGridSelection",
      "base": "0x7FF73C31D240",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Selection model for a timecode text grid",
      "properties": []
    },
    "0x7FF73F85BBA0": {
      "name": "TimecodeGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Data model for a timecode",
      "properties": []
    },
    "0x7FF73FB13340": {
      "name": "TimecodeGridColumnConfiguration",
      "base": "0x7FF73FD77910",
      "child": "0x7FF73C401090",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAEEF40": {
      "name": "FaderEvent",
      "base": "0x7FF73FC11A40",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBDB840",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Token",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "FaderValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FBFCCC0": {
      "name": "CmdEvent",
      "base": "0x7FF73FC11A40",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3EA210",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Token",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "AssignmentTimecodeFunctions"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "CueDestination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Status",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "On",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "CmdEventStatus"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ExecuteCommand",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC11A40": {
      "name": "Event",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAFE730",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "TrackGroup",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Track",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "Time",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "AbsTime",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "RawTime",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::RealtimeCmd::Type>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::RealtimeCmd>::`vftable'",
          "name": "RealtimeCmd",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "FadeOverride",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (DB::Event::*)(void)const, {public: bool DB::Event::IsUserTriggeredEvent(void)const, 0}>::`vftable'",
          "name": "IsUserTriggeredEvent",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FBDB840": {
      "name": "FaderSubTrack",
      "base": "0x7FF73FAFE730",
      "child": "0x7FF73FAEEF40",
      "parent": "0x7FF73F88ECF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "FaderToken",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "Master",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentFaderFunctionsSubTrack"
        }
      ]
    },
    "0x7FF73C3EA210": {
      "name": "CmdSubTrack",
      "base": "0x7FF73FAFE730",
      "child": "0x7FF73FBFCCC0",
      "parent": "0x7FF73F88ECF0",
      "properties": []
    },
    "0x7FF73FAFE730": {
      "name": "SubTrack",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC11A40",
      "parent": "0x7FF73F88ECF0",
      "properties": []
    },
    "0x7FF73FCE8550": {
      "name": "Marker",
      "base": "0x7FF73F88ECF0",
      "child": "0x7FF73FAFE730",
      "parent": "0x7FF73C307D40",
      "properties": []
    },
    "0x7FF73C307D40": {
      "name": "MarkerTrack",
      "base": "0x7FF73FC37170",
      "child": "0x7FF73FCE8550",
      "parent": "0x7FF73FBC4B90",
      "properties": []
    },
    "0x7FF73F88ECF0": {
      "name": "TimeRange",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FAFE730",
      "parent": "0x7FF73FC37170",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "TrackGroup",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Track",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "Start",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "RawStart",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TCDuration"
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "Offset",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "SpeedFactor",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Play",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECPlay"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Rec",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECRec"
        }
      ]
    },
    "0x7FF73FC37170": {
      "name": "Track",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73F88ECF0",
      "parent": "0x7FF73FBC4B90",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Play",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECPlay"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Rec",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECRec"
        }
      ]
    },
    "0x7FF73FBC4B90": {
      "name": "TrackGroup",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FC37170",
      "parent": "0x7FF73C41BC10",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Play",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECPlay"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Rec",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ECRec"
        }
      ]
    },
    "0x7FF73C41BC10": {
      "name": "Timecode",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FBC4B90",
      "parent": "0x7FF73FB418B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "Cursor",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SignedTimePropertyValue>::`vftable'",
          "name": "OffsetTCSlot",
          "TypeNameStr": "Int64SignedTime",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "RawOffsetTCSlot",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "RawDuration",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LoopMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LoopMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LoopCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Track>>::`vftable'",
          "name": "TimeMarkers",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "TCSlot",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AutoStart",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AutoStop",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SwitchOff",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Playbacks Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PlaybacksOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Goto",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "as Goto (Status)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RecordGo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AssertPrevEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PlaybackandRecord",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Manual Events",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EventsPlaybackRecord"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordTimedCues",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordCueCommands",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordMacroEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RecordRemoteEvents",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserBits",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timecode::*)(class DB::Cmdline *), {public: void DB::Timecode::LoadFromDefault(class DB::Cmdline *), 0}>::`vftable'",
          "name": "LoadFromDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timecode::*)(class DB::Cmdline *)const, {public: void DB::Timecode::SaveToDefault(class DB::Cmdline *)const, 0}>::`vftable'",
          "name": "SaveToDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timecode::*)(union DB::RCUser), {public: void DB::Timecode::StartRecording(union DB::RCUser), 0}>::`vftable'",
          "name": "StartRecording",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timecode::*)(void), {public: void DB::Timecode::StopRecording(void), 0}>::`vftable'",
          "name": "StopRecording",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (DB::Timecode::*)(void)const, {public: bool DB::Timecode::IsRecording(void)const, 0}>::`vftable'",
          "name": "IsRecording",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FB418B0": {
      "name": "Timecodes",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C41BC10",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73FAE83A0": {
      "name": "MacroLine",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBC7820",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "Command",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Wait",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Follow",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MacroLineWait"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AddToCmdline",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Execute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBC7820": {
      "name": "Macro",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FAE83A0",
      "parent": "0x7FF73FD2DAF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CLI",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LineNo",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LineName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LineCommand",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD2DAF0": {
      "name": "Macros",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FBC7820",
      "parent": "0x7FF73C3591E0",
      "description": "A pool of macros.",
      "properties": []
    },
    "0x7FF73C348E50": {
      "name": "FIDGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Data model for Fixture ID list",
      "properties": []
    },
    "0x7FF73FCAD2B0": {
      "name": "ContentSheetSettings",
      "base": "0x7FF73F8275A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ContentSheetCueMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ContentSheetCueMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowTracked",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureSelect",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowParts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowManualCueSelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SheetMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SheetMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowNameField",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowIDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ManualCue",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "CuePartAppearanceContent",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Num+Name",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CuePartAppearanceContent"
        }
      ]
    },
    "0x7FF73C26FF90": {
      "name": "ContentSheetColumnFilter",
      "base": "0x7FF73C3CCA50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": []
    },
    "0x7FF73FD78890": {
      "name": "ContentSheetSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCAD2B0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD34870": {
      "name": "RecipeSheetFilter",
      "base": "0x7FF73FC2CCD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": []
    },
    "0x7FF73FBAD230": {
      "name": "RecipeSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB589D0": {
      "name": "SequenceSheetRowFilter",
      "base": "0x7FF73FD78300",
      "child": "0x7FF73C3292C0",
      "parent": "0x7FF73F8275A0",
      "properties": []
    },
    "0x7FF73C3CCA50": {
      "name": "SequenceSheetColumnFilter",
      "base": "0x7FF73FC2CCD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": []
    },
    "0x7FF73F8275A0": {
      "name": "SequenceSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "FixedTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LinkType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SequenceLinkType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowSteps",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SequencePlaybackStatus",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SequenceSettings",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CueSettings",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CueTiming",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "MIBSettings",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PresetTiming",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CompressedTiming",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Note",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Cmd",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Loops",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TrackSheet",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SelectionOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Step",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::LineHeights>::`vftable'",
          "name": "LineHeight",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LineHeights"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "Readout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpeedReadoutMode>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PresetReadoutMode>::`vftable'",
          "name": "PresetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Preset",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ChannelSetReadoutMode>::`vftable'",
          "name": "ChannelSetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Name",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChannelSetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrackLayerAuto"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FeatureSort",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureSort",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLayerToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFilterToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Object>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Filters.SequenceSheet",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoScroll",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Countdown",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SequenceCountdown"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowRecipes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowNotes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FeatureGraphic",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TestCommand",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CuePartAppearance",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Num+Name",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CuePartAppearance"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorDisplayMode>::`vftable'",
          "name": "ColorMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorDisplayModeAuto"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SplitSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "200",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBC05F0": {
      "name": "SequenceSheetSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F8275A0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB0A610": {
      "name": "EditKeybShortcutGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F9AF860": {
      "name": "PsrFixtureGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FCD3A70": {
      "name": "TimecodeTextGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD4E840": {
      "name": "CueUpdateGridData",
      "base": "0x7FF73FD209E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD209E0": {
      "name": "UpdateGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C38D7A0": {
      "name": "FixtureEditorSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowChannels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SplitSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "400",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAB8DC0": {
      "name": "MvrServicesGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C3E93C0": {
      "name": "PhaserLayerGridDataExpanded",
      "base": "0x7FF73FCD4460",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD7E660": {
      "name": "PhaserLayerGridData",
      "base": "0x7FF73FCD4460",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FCD4460": {
      "name": "PhaserLayerGridDataBase",
      "base": "0x7FF73FD7ACC0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD7ACC0": {
      "name": "PhaserStepGridData",
      "base": "0x7FF73C371E80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FC0AA20": {
      "name": "FixtureSheetGridData",
      "base": "0x7FF73F821FF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F87D5A0": {
      "name": "ContentSheetGridSelection",
      "base": "0x7FF73FB52F80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FC16140": {
      "name": "CuePartGridData",
      "base": "0x7FF73C36DE10",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C36DE10": {
      "name": "PresetGridData",
      "base": "0x7FF73C27A7C0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Preset>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C27A7C0": {
      "name": "ExpandedPresetGridData",
      "base": "0x7FF73F821FF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F821FF0": {
      "name": "FixtureChannelGridData",
      "base": "0x7FF73C371E80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FCE4B50": {
      "name": "FixtureChannelGridColumnConfiguration",
      "base": "0x7FF73FCEB7D0",
      "child": "0x7FF73FB68200",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F88B610": {
      "name": "FixtureSheetRowFilter",
      "base": "0x7FF73C290600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FilterProgOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB15180": {
      "name": "FixtureSheetColumnAttributeFilter",
      "base": "0x7FF73C3C6880",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FilterProgOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FACA900": {
      "name": "FixtureSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Step",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "Readout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpeedReadoutMode>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PresetReadoutMode>::`vftable'",
          "name": "PresetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Preset",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ChannelSetReadoutMode>::`vftable'",
          "name": "ChannelSetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Name",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChannelSetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorDisplayMode>::`vftable'",
          "name": "ColorMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorDisplayModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgLayerAuto"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SheetMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SheetMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ProgOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterSelection",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FeatureSort",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureSort",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLayerToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFilterToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureAppearance",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Simple",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureAppearanceMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureGraphic",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Simple",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureGraphicMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureGraphicSource",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "OutputLayer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixturGraphicSource"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FeatureGraphic",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowNameField",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowIDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "HideSubfixtures",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Object>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Filters.FixtureSheet",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C31FF30": {
      "name": "FixtureSheetSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FACA900",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C371E80": {
      "name": "AttributeGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FB52F80": {
      "name": "TrackSheetGridSelection",
      "base": "0x7FF73C2662C0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C3D4040": {
      "name": "TrackSheetGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Data model for a tracking sheet",
      "properties": []
    },
    "0x7FF73FD48250": {
      "name": "TrackSheetGridColumnConfiguration",
      "base": "0x7FF73FD77910",
      "child": "0x7FF73C401090",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB1CF30": {
      "name": "ProgPart",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FB2E210",
      "parent": "0x7FF73C343BF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Part",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C365810": {
      "name": "RecipeEditor",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C321440",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::RecipeEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::RecipeEditor::RE_OnActionCleanup(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CleanupRecipes",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RecipeEditing",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NeedsRecipeCleanup",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "TargetRecipes",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C343BF0": {
      "name": "Programmer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB1CF30",
      "parent": "0x7FF73C321440",
      "properties": []
    },
    "0x7FF73C290FF0": {
      "name": "TagFakeObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C384870",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Protect",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C384870": {
      "name": "TagFakeCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C290FF0",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::GuidObject>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C2E5570": {
      "name": "TagReference",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAE7E10",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "DataPool",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Class",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "No",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ObjectHandle",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Protect",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FAE7E10": {
      "name": "Tag",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C2E5570",
      "parent": "0x7FF73F886090",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TagType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TagType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ForwardCommands",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DummyAssignable",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73F886090": {
      "name": "Tags",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FAE7E10",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F9ACF10": {
      "name": "ScreenEncoderDirection",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3EDE10",
      "properties": []
    },
    "0x7FF73C3EDE10": {
      "name": "ScreenEncoder",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F9ACF10",
      "parent": "0x7FF73FBCFAD0",
      "properties": []
    },
    "0x7FF73FB8E010": {
      "name": "Color",
      "base": "0x7FF73F88C530",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F891780",
      "description": "Describes a color in RGBA format",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ColorDef>>::`vftable'",
          "name": "ColorDefRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "RGBA",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "default": "FFFFFFFF",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Val32",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F891780": {
      "name": "ColorGroup",
      "base": "0x7FF73F88C530",
      "child": "0x7FF73FB8E010",
      "parent": "0x7FF73FC2D6C0",
      "description": "A container for colors.",
      "properties": []
    },
    "0x7FF73FC2D6C0": {
      "name": "ColorGroups",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F891780",
      "parent": "0x7FF73FBEA6A0",
      "description": "A container color groups.",
      "properties": []
    },
    "0x7FF73C247610": {
      "name": "ColorDef",
      "base": "0x7FF73F88C530",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C316B50",
      "description": "A definition of a RGBA color",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "RGBA",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "default": "FFFFFFFF",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C316B50": {
      "name": "ColorDefGroup",
      "base": "0x7FF73F88C530",
      "child": "0x7FF73C247610",
      "parent": "0x7FF73C3344F0",
      "description": "A group of RGBA color definitions",
      "properties": []
    },
    "0x7FF73C3344F0": {
      "name": "ColorDefCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C316B50",
      "parent": "0x7FF73FBEA6A0",
      "description": "A container for all defined colors in the system",
      "properties": []
    },
    "0x7FF73F88C530": {
      "name": "ColorThemeContent",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Base class for all elements within the ColorTheme",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AutoGenerated",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Unmatched",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBEA6A0": {
      "name": "ColorTheme",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Contains all theme information like colors",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB09AF0": {
      "name": "WebSocketsConnection",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCF9130",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Whitelisted",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "IP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Resolution",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "UserAgent",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "clientMAC",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCF9130": {
      "name": "WebServer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB09AF0",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FD3DB40": {
      "name": "Pult",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F893E80",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::PultType>::`vftable'",
          "name": "PultType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "PultType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "LinkMainCmdline",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Cmdline>>::`vftable'",
          "name": "Cmd",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MainLoopCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F893E80": {
      "name": "PultCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD3DB40",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C4171B0": {
      "name": "MessageGridSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Message::Category>::`vftable'",
          "name": "Category",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Selects the displayed message category",
          "Enum": "MessageCategory"
        },
        {
          "CTypeName": "const DB::Property<enum Message::Priority>::`vftable'",
          "name": "Priority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Selects the displayed message priority",
          "Enum": "MessagePriority"
        }
      ]
    },
    "0x7FF73FC72060": {
      "name": "MessageGridSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C4171B0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC36780": {
      "name": "MessageGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::MessageGridData::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::MessageGridData::OnSelectMessageTypeAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSelectMessageType",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSelectMessageType(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select the current message type"
        }
      ]
    },
    "0x7FF73FC15BB0": {
      "name": "MessageCenter",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3C8F00",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73C3C8F00": {
      "name": "MessageCategory",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBBF0D0",
      "parent": "0x7FF73FC15BB0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CreateNotification",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBBF0D0": {
      "name": "MessagePriority",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3C8F00",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Count",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Shows how many messages are stored for this priority"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CreateNotification",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB88C30": {
      "name": "RdmWindowSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C2657A0": {
      "name": "RdmWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB88C30",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C28D9D0": {
      "name": "CloningWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DependenciesAllowed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GetEnableClone",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GetEnableFillUpLeft",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GetEnableFillUpRight",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GetEnableUnifyLeft",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GetEnableUnifyRight",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasSequenceFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Has Sequence Filter",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasGroupFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Has Group Filter",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasPresetFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Has Preset Filter",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasWorldFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Has World Filter",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasLayoutFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Has Layout Filter",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllSequenceItems",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "All Sequence Items",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllGroupItems",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "All Group Items",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllPresetItems",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "All Preset Items",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllWorldItems",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "All World Items",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllLayoutItems",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "All Layout Items",
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C245AA0": {
      "name": "ExecEditorSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ExecEditorTab>::`vftable'",
          "name": "LastTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ExecEditorTab"
        }
      ]
    },
    "0x7FF73C265140": {
      "name": "WindowAgendaSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::AgendaViewMode>::`vftable'",
          "name": "ViewMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AgendaViewMode"
        },
        {
          "CTypeName": "const DB::Property<enum Time::WeekDay>::`vftable'",
          "name": "StartOfWeek",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Monday",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WeekDay"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Setup",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AgendaTool>::`vftable'",
          "name": "Tool",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AgendaTool"
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "VisibleDate",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ToolAction",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "SelectedAgenda",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "SelectedDay",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AgendaSelected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DaySelected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowAgendaSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowAgendaSettings::JumpToToday(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "JumpToToday",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowAgendaSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowAgendaSettings::JumpToPrevious(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "JumpToPrevious",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowAgendaSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowAgendaSettings::JumpToNext(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "JumpToNext",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowAgendaSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowAgendaSettings::ResetSelectedAgenda(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetSelectedAgenda",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowAgendaSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowAgendaSettings::ResetSelectedDay(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetSelectedDay",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73FADD810": {
      "name": "WindowAgendaSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C265140",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB701A0": {
      "name": "MatricksWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableX",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableY",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableZ",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableGrid",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableShuffle",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "EnableLayers",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD059A0": {
      "name": "CommandWingBarSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowGrandMaster",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowCustomMasters",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayModeCM",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CommandWingBarDisplayMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayModeExec",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CommandWingBarDisplayMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowUserSettings",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderBank",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLayerToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FadeEncoder",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowTimeButtons",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowStepButtons",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderPageSelector",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowToolPopups",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFunctionSelector",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderLabel",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Hardware::WingID>::`vftable'",
          "name": "WingID",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wing1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WingID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Page",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB0E480": {
      "name": "EncoderBarWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowGrandMaster",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FadeEncoder",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFunctionSelector",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderLabel",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowUserSettings",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowToolPopups",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderBank",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLayerToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowScreenEncoder",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowTimeButtons",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowStepButtons",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderPageSelector",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC3AC60": {
      "name": "EncoderBarWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB0E480",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3D0B30": {
      "name": "CustomMasterSectionWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowCustomSection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowMasterSection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowPageSection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowMasterSectionKnobs",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowHardwareButtons",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowGrandMasterSection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FACC3A0": {
      "name": "WindowTrackpadSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::WindowTrackpadSettings::TrackpadMode>::`vftable'",
          "name": "TrackpadMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Mouse",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrackpadMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::DimmerWheelResolution>::`vftable'",
          "name": "Resolution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DimmerWheelResolution"
        },
        {
          "CTypeName": "const DB::Property<enum DB::DimmerWheelResolution>::`vftable'",
          "name": "ResolutionPT",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DimmerWheelResolution"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowTrackpadSettings::TrackpadPTInvertMode>::`vftable'",
          "name": "TrackpadPTInvertMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrackpadPTInvertMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowTrackpadSettings::TrackpadPTMode>::`vftable'",
          "name": "TrackpadPTMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Both",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrackpadPTMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TrackpadTapForClick",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C3D7BF0": {
      "name": "PhaserSheetRowFilter",
      "base": "0x7FF73FC3E7A0",
      "child": "0x7FF73C385C50",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD0E1F0": {
      "name": "WindowPhaserEditorSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::PhaserEditTool>::`vftable'",
          "name": "EditTools",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserEditTool"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowBeams",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Absolute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Relative",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AbsRelMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "AbsRel",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserAbsRelMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Mode1D",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Value",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserMode1D"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LayerSheet",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AttributeSheet",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEmptyLines",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StepBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LayerBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "LineHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserLineHeight"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ViewMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserViewMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "Readout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpeedReadoutMode>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedReadoutModeAuto"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PresetReadoutMode>::`vftable'",
          "name": "PresetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Preset",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Attributes",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "PanTilt",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AttributeMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PhaserBars>::`vftable'",
          "name": "EncoderBar",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserBars"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorDisplayMode>::`vftable'",
          "name": "ColorMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorDisplayModeAuto"
        }
      ]
    },
    "0x7FF73C26BE50": {
      "name": "WindowPhaserEditorSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD0E1F0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC204D0": {
      "name": "SelectionViewSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridLines",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ToolBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MAtricksTransformation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CenterlineX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CenterlineY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AlignBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoScroll",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SelectionViewFontSize>::`vftable'",
          "name": "FontSize",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SelectionViewFontSize"
        }
      ]
    },
    "0x7FF73FBDCBE0": {
      "name": "SelectionViewSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC204D0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C40AD40": {
      "name": "HelpViewerWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZoomFactor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ZoomFactor"
        }
      ]
    },
    "0x7FF73C37F620": {
      "name": "HelperWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C40AD40",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCE50E0": {
      "name": "XkeysWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Labels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Executors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Page",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C330090": {
      "name": "ModularPlaybackWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Hardware::WingID>::`vftable'",
          "name": "WingID",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wing1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WingID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row400",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row300",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row200",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row100",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Labels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Executors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Page",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ModularPlaybackWindowSettings::SectionCount>::`vftable'",
          "name": "#Sections",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SectionCount"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DirectAction",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        }
      ]
    },
    "0x7FF73FD61780": {
      "name": "ModularPlaybackWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C330090",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD413C0": {
      "name": "PlaybackWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Hardware::WingID>::`vftable'",
          "name": "WingID",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wing1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WingID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row400",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row300",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row200",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Row100",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Labels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Executors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Page",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PlaybackWindowSettings::SectionCount>::`vftable'",
          "name": "#Sections",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SectionCount"
        }
      ]
    },
    "0x7FF73FB6EDE0": {
      "name": "PlaybackWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD413C0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCB60C0": {
      "name": "SysteminfoWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::SysteminfoWindowSettings::dispView>::`vftable'",
          "name": "DispView",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DispView"
        }
      ]
    },
    "0x7FF73FB23BC0": {
      "name": "SysteminfoWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCB60C0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F863560": {
      "name": "SysmonWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C355EE0": {
      "name": "SysmonWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F863560",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C26AF90": {
      "name": "CommandlineWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowCommandlineField",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C354700": {
      "name": "CommandlineWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C26AF90",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBD0060": {
      "name": "View3DSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DesiredUiFps",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "MultiBeamBorderSmoothness",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.35",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "TriangleCalibrationFactor",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "30.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PlanarSelectionLines",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Planar Selection Lines",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "MultiBeamBlur",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "DynamicGoboResolution",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "BeamFrustumsRender",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable BeamFrustums Render",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Setup",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable Setup Mode",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SelectionMode3d>::`vftable'",
          "name": "SelectionMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SelectionMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SelectionAllowEnvironmentObjects",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Timing",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable the Timing output",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Statistics",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable the statistics output",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AntiAlias",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Parallel",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RenderGBufferTextures",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DisableCalibration",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DrawRubberbandMATricks",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PrismLines",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "MarkUnpatched",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PointOfOrigin",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowSelection",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "RenderEnvironment",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SubFixtureSupportDuringProjectionSelection",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SelectFixtureBySpotLabel",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AxisLines",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AxisLinesKinematicChain",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BoundingBoxes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShadowMapStatistics",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "UseBeamColorInformation",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DrawMArkerBoundaries",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ModelGroupStatistics",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "PointLightColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "AmbientLightColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "BackgroundColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "LabBackgroundColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "LabTextColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LabelBackgroundTransparency",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "75.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LabelTextTransparency",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ArrangementAlpha",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "50.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Camera>>::`vftable'",
          "name": "Camera",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::RenderQuality>>::`vftable'",
          "name": "RenderQuality",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Stage>>::`vftable'",
          "name": "Stage",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ArrangementMarcType>::`vftable'",
          "name": "ArrangementMarcType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ArrangementMarcType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::InputControl3d>::`vftable'",
          "name": "InputControl3d",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "InputControl3d"
        },
        {
          "CTypeName": "const DB::Property<enum DB::BloomIntensity3d>::`vftable'",
          "name": "BloomIntensity",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BloomIntensity3d"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BeamLinesfadeout",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable linear fade out when rendering beam lines",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Priority",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "3D Framerate has priority. The UI Framerate may suffer from it.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Wireframed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable wireframe mode",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Modelscandisableculling",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable wireframe mode",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Silhouettes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enable the selection silhouettes",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CullShadows",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShadowTransparency",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFPS",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NativeColors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DeferredDevMode",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LensShading",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "SpotIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CameraAnimationSpeedMeterSec",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CameraAnimationSpeedDegreeSec",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "AmbientIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PointLightIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LuminousIntensitySpread",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BackgroundIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "IgnoreNormals",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "StageBorder",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "ProportionalGain",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0.075",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "IntegrationTime",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "10.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "DerivativeTime",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabelBackground",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabel",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabFixtureId",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabPatch",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabName",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabCIE",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowLabOnEnd",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "TimeSlotMS",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LinesOverlay",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LabMaxCount",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LabOnlySelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LabSelectionPrio",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowSpotLabelSubFixtureId",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ArrangementDepth",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ResourceStatistics3D",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MarkFaultyMeshes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::FontSizes>::`vftable'",
          "name": "LabelFontSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizes"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LightBeamOverdrawLimit",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableBVHDebugging",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowPickPoints",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "IgnoreSelectionRenderingOrder",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowToolBar",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowPigtails",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ForceIterativeRendering",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DevFlag1",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DevFlag2",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DevFlag3",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DevFlag4",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Dev1",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Dev2",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Dev3",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Dev4",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCE3440": {
      "name": "View3DSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBD0060",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C319640": {
      "name": "SpecialWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::ColorPickerSettings *>::`vftable'",
          "name": "ColorPickerSettings",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ShaperWindowSettings *>::`vftable'",
          "name": "ShaperWindowSettings",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpecialWindowTab>::`vftable'",
          "name": "RememberedTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialWindowRememberedTab"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowTabs",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LinkToEncoderBank",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD74560": {
      "name": "SpecialWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C319640",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAB97B0": {
      "name": "ColorPickerSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BrightnessOverdriveMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Colors::ColorMixMode>::`vftable'",
          "name": "ColorMixMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Fixture Type",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorMixMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorPickerSettings::ColorPickerWindowMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CIE",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorPickerWindowMode"
        },
        {
          "CTypeName": "const DB::Property<enum Colors::ColorWheelMode>::`vftable'",
          "name": "ColorWheelMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Prefer\nMix Color",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorWheelMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorPickerSettings::ColorEncoderFunction>::`vftable'",
          "name": "LastColorEncoderFunction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorEncoderFunction"
        }
      ]
    },
    "0x7FF73FD79810": {
      "name": "ColorPickerSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAB97B0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB4D480": {
      "name": "ShaperWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ShaperWindowSettings::ShaperViewMode>::`vftable'",
          "name": "ViewMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Graphical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShaperViewMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShaperWindowSettings::ShaperBarMode>::`vftable'",
          "name": "BarMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Blades",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShaperBarMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShaperWindowSettings::ShaperControlMode>::`vftable'",
          "name": "ControlMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "A+B",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShaperControlMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShaperWindowSettings::ShaperEncoderLinkMode>::`vftable'",
          "name": "LinkMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShaperEncoderLinkMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShaperWindowSettings::MiniFadersMode>::`vftable'",
          "name": "MiniFadersMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Full",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MiniFadersMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowPov",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoPov",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowResetBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::ShaperWindowSettings::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool DB::ShaperWindowSettings::ActionResetBlade(class DB::Object *, class DB::SetParam &, unsigned int), 0}>::`vftable'",
          "name": "ResetBlade",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::ShaperWindowSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::ShaperWindowSettings::ActionResetRotation(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetRotation",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::ShaperWindowSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::ShaperWindowSettings::ActionResetPov(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetPov",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::ShaperWindowSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::ShaperWindowSettings::ActionResetShaper(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetShaper",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::ShaperWindowSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::ShaperWindowSettings::ActionResetAllBlades(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetAllBlades",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73C292F00": {
      "name": "ClockWindowSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "PixelColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ClockWindowSettings::ClockSources>::`vftable'",
          "name": "ClockSource",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ClockSources"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TCSlot",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NoName"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayClockFormat"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatClockSource"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Timezone",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TimezoneStr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TitlePrefix",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TimerIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowSecondFractals",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SessionTimeStyle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SessionTimeStyle"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SessionTimeStyleTZ",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SessionTimeStyleTZ"
        }
      ]
    },
    "0x7FF73C3D0140": {
      "name": "ClockWindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C292F00",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCD7420": {
      "name": "Certificate",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB3B8B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Size",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Crypto::SHA256>::`vftable'",
          "name": "Hash",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Date",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Data",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsOverallDeviceCertificate",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PartOfOverallDevCert",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CertificateFullyReceived",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Crypto::VerifyResult>::`vftable'",
          "name": "CertificateIsVerified",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VerifyResult"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CertificateIsDuplicate",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DeviceIsConnected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB3B8B0": {
      "name": "Certificates",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCD7420",
      "parent": "0x7FF73C41B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SerialNumber",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Date",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "WorldserverExpireTime",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C41B220": {
      "name": "Root",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "The mothership of all objects. No object can exist outside the root.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LastReceivedMidi",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RealtimeIteration",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DisableGlobalPresetUpdate",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "NewShowStartDescription",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC90790": {
      "name": "DeviceConfigurations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FB94760": {
      "name": "LocalSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FABF000",
      "description": "Mixed settings which relate only to the local station.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DefaultLanguage",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "en",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RememberedUser",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Guest",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedDrive",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Drive>>::`vftable'",
          "name": "SelectedDriveObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EULAAccepted",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ForceLogin",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowReleaseNotes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Crypto::Guid<128>>::`vftable'",
          "name": "SystemGuid",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ForceSetOnPCSystemTime",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "OnPCSystemTimeOffset",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ResolutionLimit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1080p",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ResolutionLimit"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ConnectionLimit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OnPCMidiOutDeviceName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OnPCMidiInDeviceName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OnPCAudioInDeviceName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AudioOutDeviceName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OnPCMidiFromWing",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OnPCMidiTimecodeSlot",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Slot1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SignalSlot"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "OnPCMidiOffset",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OnPCUseVizKey",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "StartupShowfileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::StartupBrowserFilter>::`vftable'",
          "name": "StartupBrowserFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Shows",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StartupBrowserFilter"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "StartupShowfileFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "15",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBBB870": {
      "name": "ExecutorKeyStatus",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCE620",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::BitMask<433>>::`vftable'",
          "name": "KeyStatus",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Executor key status bitfield.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::BitMask<433>>::`vftable'",
          "name": "FaderStatus",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Executor fader status bitfield.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::BitMask<433>>::`vftable'",
          "name": "FaderError",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Executor fader position error bitfield.",
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBCE620": {
      "name": "HardwareStatus",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73F81EF00": {
      "name": "BatteryStatus",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCE620",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Available",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Ready",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Running",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AcPowerOk",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Charging",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BatteryFault",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BattVoltage",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BattPercentage",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "WarningLevel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F856340": {
      "name": "Sound",
      "base": "0x7FF73FCE6780",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD1E2D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "dB",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoStart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoStop",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "ElapsedTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD1E2D0": {
      "name": "Sounds",
      "base": "0x7FF73FBD4840",
      "child": "0x7FF73F856340",
      "parent": "0x7FF73C245510",
      "properties": []
    },
    "0x7FF73FC106C0": {
      "name": "UsbNotifier",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBB7F30",
      "parent": "0x7FF73C41B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "MotorPredictP",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0.18",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "MotorPredictI",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0.0006",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "MotorPredictD",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0.14",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBB2F30": {
      "name": "MouseDevices",
      "base": "0x7FF73FBB34C0",
      "child": "0x7FF73FBB70D0",
      "parent": "0x7FF73FC106C0",
      "properties": []
    },
    "0x7FF73FBB1C80": {
      "name": "Unknown",
      "base": "0x7FF73FBB7F30",
      "child": "0x7FF73FBB1160",
      "parent": "0x7FF73FC106C0",
      "properties": []
    },
    "0x7FF73FBB5E20": {
      "name": "grandMA3Modules",
      "base": "0x7FF73FBB7F30",
      "child": "0x7FF73FBB4D00",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LastConnectionTime",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBB5290": {
      "name": "Storage",
      "base": "0x7FF73FBB7F30",
      "child": "0x7FF73FCB33C0",
      "parent": "0x7FF73FC106C0",
      "properties": []
    },
    "0x7FF73FBB4310": {
      "name": "TouchDevices",
      "base": "0x7FF73FBB34C0",
      "child": "0x7FF73FBB16F0",
      "parent": "0x7FF73FC106C0",
      "properties": []
    },
    "0x7FF73FBB34C0": {
      "name": "HID",
      "base": "0x7FF73FBB7F30",
      "child": "0x7FF73FBB9640",
      "parent": "0x7FF73FC106C0",
      "properties": []
    },
    "0x7FF73FBB7F30": {
      "name": "USBDeviceContainer",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FC5C5A0",
      "parent": "0x7FF73FC106C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SaveDevices",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NotifyDevices",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NotifyRemote",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Hardware::UsbDeviceFilterRule, struct Container::CollectPolicies<class Hardware::UsbDeviceFilterRule>>>::`vftable'",
          "name": "FilterRules",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBB70D0": {
      "name": "UsbDeviceMouse",
      "base": "0x7FF73FBB9640",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB2F30",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DevNode",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "UsbAddr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBB16F0": {
      "name": "USBDeviceTouch",
      "base": "0x7FF73FBB9640",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB4310",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MonitorId",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DevNode",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "UsbAddr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBB1160": {
      "name": "USBDeviceUnknown",
      "base": "0x7FF73FC5C5A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB1C80",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DeviceTypeID",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DeviceKey",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCB33C0": {
      "name": "USBDeviceStorage",
      "base": "0x7FF73FC5C5A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB5290",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MountPoint",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FBB9640": {
      "name": "USBDeviceHID",
      "base": "0x7FF73FC5C5A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB34C0",
      "properties": []
    },
    "0x7FF73FBB4D00": {
      "name": "UsbDeviceMA3",
      "base": "0x7FF73FC5C5A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB5E20",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DeviceType",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Unknown",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Hardware::WingID>::`vftable'",
          "name": "WingID",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Unmapped",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WingID"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputConfigIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SerialNumber",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Unknown",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DroppedPackets",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsInWholeDevCert",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ConnectionTime",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Extension",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DeviceTime",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC5C5A0": {
      "name": "USBDevice",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBB7F30",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Connected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ConnectedCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Network::IP8>::`vftable'",
          "name": "IP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F860BA0": {
      "name": "OutputStations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C32E3F0",
      "parent": "0x7FF73FC90790",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::OutputStationCollectCollect::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::OutputStationCollectCollect::OnAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:command"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::OutputStation>>::`vftable'",
          "name": "MyOutputStation",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C273750": {
      "name": "OutputStation",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73F8893E0",
      "parent": "0x7FF73C32E3F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostSubType"
        },
        {
          "CTypeName": "const DB::Property<class Network::IP8Full>::`vftable'",
          "name": "IP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Network::MACAddress>::`vftable'",
          "name": "MAC",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Art-NetInterface",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SendArt-NetIfIdleMaster",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "sACNInterface",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SendsACNIfIdleMaster",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OSCInterface",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PSNInterface",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InMySession",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::SharedPtr<class Manet::HostDataExt>>::`vftable'",
          "name": "HostData",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C32E3F0": {
      "name": "OutputStationCollect",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C273750",
      "parent": "0x7FF73F860BA0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DevicesinSession",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F8893E0": {
      "name": "OutputConfiguration",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C273750",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UsbProductID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SMPTEMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "In",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SMPTEMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SMPTETC",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Slot1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SignalSlot"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MIDITCMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "In",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MIDITCMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MIDITC",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Slot1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SignalSlot"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MIDIDataMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "In",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MIDIMode"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "MIDIOffset",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DCStart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SignalOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "XLRPortCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxPortDefaultDirection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "TimecodePortsIn",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "TimecodePortsOut",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DCIoPorts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DigitalIoPorts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MidiCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UsbDeviceIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UsbDeviceType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC59250": {
      "name": "DMXProtocols",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC4FD50",
      "parent": "0x7FF73FC90790",
      "properties": []
    },
    "0x7FF73FC6E9D0": {
      "name": "KlingNet",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": []
    },
    "0x7FF73FC59C40": {
      "name": "KiNet",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": []
    },
    "0x7FF73FC4F7C0": {
      "name": "ShowNet",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": []
    },
    "0x7FF73FC4EDD0": {
      "name": "PathPort",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": []
    },
    "0x7FF73FC58730": {
      "name": "ETC",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": []
    },
    "0x7FF73FC5CB30": {
      "name": "sACNDiscoveryCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC55FD0",
      "parent": "0x7FF73FC53ED0",
      "properties": []
    },
    "0x7FF73FC53080": {
      "name": "sACNDataCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC5AC90",
      "parent": "0x7FF73FC53ED0",
      "properties": []
    },
    "0x7FF73FC53ED0": {
      "name": "sACN",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DataValid",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC555E0": {
      "name": "Page-Nr",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC55FD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "UniverseList",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC55FD0": {
      "name": "sACN-Node",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FC555E0",
      "parent": "0x7FF73FC5CB30",
      "properties": []
    },
    "0x7FF73FC5AC90": {
      "name": "sACNData",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC53080",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SacnDataMode"
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "DestinationIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "LocalUniverse",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Amount",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "sACNUniverse",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Priority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PreviewOnly",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TTL",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "8",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Delay",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MergeMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPriority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "LTP",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxPrio"
        }
      ]
    },
    "0x7FF73FC5B220": {
      "name": "ArtNetNodeCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC51D00",
      "parent": "0x7FF73FC58CC0",
      "properties": []
    },
    "0x7FF73FC56F50": {
      "name": "ArtNetDataCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC5A630",
      "parent": "0x7FF73FC58CC0",
      "properties": []
    },
    "0x7FF73FC58CC0": {
      "name": "ArtNet",
      "base": "0x7FF73FC4FD50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": [
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "BroadcastThreshold",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Threshold for Broadcasts",
          "Enum": "ArtNetBroadcastThreshold"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "ArtPollRate",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "3000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC5A630": {
      "name": "Art-Net-Data",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC56F50",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ArtNetDataMode"
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "DestinationIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SubscribedNodes",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "LocalUniverse",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Amount",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Net",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Art-NetSub-Net",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Universe",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Art-NetAbsolute",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PacketDelay",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MergeMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPriority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "LTP",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxPrio"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimecodeSlot",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSlotOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "EnableRdm",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC51D00": {
      "name": "Art-Net-Node",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FC569C0",
      "parent": "0x7FF73FC5B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "IP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsActive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC569C0": {
      "name": "BindIndex",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC51D00",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Net",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Sub-Net",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputPort1",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPort1",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputPort2",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPort2",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputPort3",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPort3",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputPort4",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InputPort4",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsActive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC4FD50": {
      "name": "DMXProtocol",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC59250",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Out",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "In",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Interface",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "1.1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SetupMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OutputDelay",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OutputDelay"
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "PreferredIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C26ECE0": {
      "name": "Drive",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBE5BE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Path",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CombinedName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::DriveType>::`vftable'",
          "name": "DriveType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Invalid",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "DriveType"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FreeSpace",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TotalSpace",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<unsigned __int64 (DB::Drive::*)(void)const, {public: unsigned __int64 DB::Drive::GetMBTotalSpace(void)const, 0}>::`vftable'",
          "name": "GetMBTotalSpace",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<unsigned __int64 (DB::Drive::*)(void)const, {public: unsigned __int64 DB::Drive::GetMBFreeSpace(void)const, 0}>::`vftable'",
          "name": "GetMBFreeSpace",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FreeSpaceStr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBE5BE0": {
      "name": "DriveCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C26ECE0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC41490": {
      "name": "Temp",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41B220",
      "description": "Container for all temporary data, not saved to showfile and not transported into network.",
      "properties": []
    },
    "0x7FF73F8769F0": {
      "name": "UserImageLibraryFile",
      "base": "0x7FF73FD58BE0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for an image file.",
      "properties": []
    },
    "0x7FF73FBCEBB0": {
      "name": "VideoLibraryFile",
      "base": "0x7FF73FD58BE0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a video file.",
      "properties": []
    },
    "0x7FF73FD525E0": {
      "name": "AudioLibraryFile",
      "base": "0x7FF73FD58BE0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a sound file.",
      "properties": []
    },
    "0x7FF73FD58BE0": {
      "name": "CachedObjLibraryFile",
      "base": "0x7FF73FC88140",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CachedObjFileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TooBig",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C2E41F0": {
      "name": "FixtureTypeLocalModeLibFile",
      "base": "0x7FF73F843660",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C267240",
      "description": "Library cache entry for a local (in the current show) DMX mode.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::DMXMode>>::`vftable'",
          "name": "OriginDMXMode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::FixtureTypeSource>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureTypeSource"
        }
      ]
    },
    "0x7FF73FD60D90": {
      "name": "FixtureTypeShareLibraryFile",
      "base": "0x7FF73F89DD40",
      "child": "0x7FF73F843660",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a remote (Share) fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::FixtureType>>::`vftable'",
          "name": "OriginFixtureType",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Uploader",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "N/A",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Creator",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Rating",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "N/A",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Source",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileSizeString",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileTimeString",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileTime",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C267240": {
      "name": "FixtureTypeLocalLibraryFile",
      "base": "0x7FF73F89DD40",
      "child": "0x7FF73C2E41F0",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a local (in the current show) fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::FixtureType>>::`vftable'",
          "name": "OriginFixtureType",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileTime",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Path",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F843660": {
      "name": "FixtureTypeModeFile",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F89DD40",
      "description": "Library cache entry for a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Lock",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Array<class DB::DMXBreakSize, 8>>::`vftable'",
          "name": "DMXFootprint",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct DB::FTInfo::Channel, struct Container::CollectPolicies<struct DB::FTInfo::Channel>>>::`vftable'",
          "name": "VirtualChannels",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct DB::FTInfo::Channel, struct Container::CollectPolicies<struct DB::FTInfo::Channel>>>::`vftable'",
          "name": "NonVirtualChannels",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F89DD40": {
      "name": "FixtureTypeFile",
      "base": "0x7FF73FC88140",
      "child": "0x7FF73F843660",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry for a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Manufacturer",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RDMManufacturer",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RdmDeviceModel",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Lock",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Stream::Version>::`vftable'",
          "name": "Version",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ActualSource",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Source",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C35A160": {
      "name": "Library",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC88140",
      "parent": "0x7FF73FCEFBD0",
      "description": "Caches a library on a drive, so it can be displayed in a grid.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "Filters",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "LibraryDestination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LibraryPath",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OptionalLibraryPath",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseCache",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::LibraryFileCollect::*)(void), {public: void DB::LibraryFileCollect::DumpContent(void), 0}>::`vftable'",
          "name": "DumpContent",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FC88140": {
      "name": "File",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C35A160",
      "description": "Library cache entry.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Objectname",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Name of the root object in the library file"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DateModified",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Path",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C407000": {
      "name": "NtpMonitor",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "NTP message monitor.",
      "properties": []
    },
    "0x7FF73C35EA40": {
      "name": "TimeLogBuffer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F885B00",
      "properties": []
    },
    "0x7FF73F885B00": {
      "name": "LogInterface",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C35EA40",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73C32D140": {
      "name": "Quickey",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C36C2B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Code",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "UNKNOWN",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        }
      ]
    },
    "0x7FF73C36C2B0": {
      "name": "Quickeys",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C32D140",
      "parent": "0x7FF73C3591E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CLI",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC9C130": {
      "name": "Menu",
      "base": "0x7FF73FC9D200",
      "child": "0x7FF73FC95650",
      "parent": "0x7FF73FC9E060",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayNumber"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayTo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayNumber"
        },
        {
          "CTypeName": "const DB::Property<enum LUA::PluginPlacement>::`vftable'",
          "name": "Placement",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Single",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PluginPlacement"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PultType>::`vftable'",
          "name": "PultType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Any",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PultType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HostType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Undefined",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HostSubType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Undefined",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostSubType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HostOs",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Undefined",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostOs"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DisplayIndexConfigurable",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayExcludeMask",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Core",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC9E060": {
      "name": "Menus",
      "base": "0x7FF73FBD4840",
      "child": "0x7FF73FC9C130",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FC99430": {
      "name": "UserPlugin",
      "base": "0x7FF73FC9D200",
      "child": "0x7FF73FD4FE80",
      "parent": "0x7FF73FC9A3C0",
      "description": "A user-creatable lua plugin object that is a collection of lua-only components",
      "properties": []
    },
    "0x7FF73FC9D200": {
      "name": "Plugin",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FC95650",
      "parent": "0x7FF73C266850",
      "description": "A plugin is a collection of components. Usually it represents a piece of user interface.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Author",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Stream::Version>::`vftable'",
          "name": "Version",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Path",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::UserRights>::`vftable'",
          "name": "UserRights",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "View",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UserRights"
        }
      ]
    },
    "0x7FF73FC9A3C0": {
      "name": "Plugins",
      "base": "0x7FF73FBD4840",
      "child": "0x7FF73FC99430",
      "parent": "0x7FF73C3591E0",
      "description": "Pool for plugin container.",
      "properties": []
    },
    "0x7FF73FD4BD40": {
      "name": "ComponentMultiLanguage",
      "base": "0x7FF73FC95650",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9C130",
      "description": "A plugin component that contains a multi-language translation unit.",
      "properties": []
    },
    "0x7FF73FC977C0": {
      "name": "ComponentSound",
      "base": "0x7FF73FC95650",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9C130",
      "description": "A plugin component that contains sound data.",
      "properties": []
    },
    "0x7FF73FC9AE80": {
      "name": "ComponentTexture",
      "base": "0x7FF73FC95650",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9C130",
      "description": "A plugin component that contains graphical texture data.",
      "properties": []
    },
    "0x7FF73FC999C0": {
      "name": "ComponentXML",
      "base": "0x7FF73FC95650",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9C130",
      "description": "A plugin component that contains xml to create ui elements.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PlaceHolder",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WindowSettings",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WindowContext",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Toggle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SearchFocusAllowed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BuddyGroupIdUnique",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CanProvideUiGridSelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BuddyGroupId",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum LUA::DisplayTypePreference>::`vftable'",
          "name": "DisplayTypePreference",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Any",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayTypePreference"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DefaultDisplay",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayNone"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SingletonDialogGroup",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD4FE80": {
      "name": "ComponentLua",
      "base": "0x7FF73FC95650",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9D200",
      "description": "A plugin component that contains Lua script.",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SyntaxError",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FullPath",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FileExists",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC95650": {
      "name": "Component",
      "base": "0x7FF73FCE6780",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9D200",
      "description": "A base class for a generic component of a plugin.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::UserRights>::`vftable'",
          "name": "UserRights",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "View",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UserRights"
        }
      ]
    },
    "0x7FF73C3E83D0": {
      "name": "AddonVariables",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3ECA90",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCFE780": {
      "name": "Addon",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FB74A00",
      "parent": "0x7FF73C38A120",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Author",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned char, struct Container::CollectPolicies<unsigned char>>>::`vftable'",
          "name": "Data8",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Manet::IP4, struct Container::CollectPolicies<class Manet::IP4>>>::`vftable'",
          "name": "DataIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<__int64, struct Container::CollectPolicies<__int64>>>::`vftable'",
          "name": "Data64",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<double, struct Container::CollectPolicies<double>>>::`vftable'",
          "name": "DataDouble",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "DataString",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB0C910": {
      "name": "ApiVariables",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73FB7C620": {
      "name": "ApiObject",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73FC74B50": {
      "name": "ApiPSN",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73FC4A4A0": {
      "name": "ApiDMX",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73C271240": {
      "name": "ApiMessageBox",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73C342940": {
      "name": "ApiProgress",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73FD65C50": {
      "name": "ApiGeneral",
      "base": "0x7FF73FB74A00",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73FB74A00": {
      "name": "AddonApi",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCFE780",
      "properties": []
    },
    "0x7FF73C38A120": {
      "name": "Addons",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCFE780",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FCA3390": {
      "name": "OutputConfigGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FBF8730": {
      "name": "DMXPatchFixtureGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD3B840": {
      "name": "DMXSheetGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FBFED60": {
      "name": "DMXSheetListGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F841BB0": {
      "name": "DMXSheetSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ColumnsCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "20",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoColumns",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ViewMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Grid",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxSheetSettingsViewMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Address",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AddressMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxSheetSettingsAddressMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SkipPatched",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::DmxSheetSettings::DMXReadoutMode>::`vftable'",
          "name": "Readout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXValueReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Universe",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxSheetSettingsSelected"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "AutoColumnsWidth",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "90",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Levelbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxSheetSettingsLevelbar"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OnlySelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TestBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Attribute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Id",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FAF1A50": {
      "name": "DmxSheetSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F841BB0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC79A20": {
      "name": "KeyboardShortcut",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD7CF50",
      "description": "Describes the behavior of a keyboard shortcut.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "KeyCode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SCVirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GrandKnob"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SpecialExec",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        },
        {
          "CTypeName": "const DB::Property<class DB::HotKey>::`vftable'",
          "name": "Shortcut",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD7CF50": {
      "name": "KeyboardShortCuts",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC79A20",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "KeyboardShortcutsActive",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if keyboard shortcuts are active",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::KeyboardShortcutsConfig::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::KeyboardShortcutsConfig::OnResetToDefault(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnResetToDefault",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnResetToDefault(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAFD3B0": {
      "name": "WindowType",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F85E240",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WindowName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "IndexKeywords",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::eWindowCategory>::`vftable'",
          "name": "Category",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WindowCategories"
        },
        {
          "CTypeName": "const DB::Property<enum DB::eWindowType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WindowTypes"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MinW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MinH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MaxW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MaxH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetPoolType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SnapToBlockSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Icon",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73F85E240": {
      "name": "WindowTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAFD3B0",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IconReferencesSet",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FC777F0": {
      "name": "ScreenConfig",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBC9530",
      "properties": []
    },
    "0x7FF73FBC9530": {
      "name": "ScreenConfigurations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC777F0",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73C40D370": {
      "name": "Timezones",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C32A9E0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C32A9E0": {
      "name": "Timezone",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C40D370",
      "properties": []
    },
    "0x7FF73FCBCD80": {
      "name": "ReferencesGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "description": "Data model for reference lists (as a result of a listref command)",
      "properties": []
    },
    "0x7FF73C3CA280": {
      "name": "StorePreferencesPreset",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::World>>::`vftable'",
          "name": "InputFilter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SpeedMasterProperty>::`vftable'",
          "name": "SpeedMaster",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpeedScale>::`vftable'",
          "name": "SpeedScale",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "One",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedScale"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MAgic",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selective",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CuePart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CuePartMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "OffFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C322DB0": {
      "name": "Sequences",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C308CC0",
      "parent": "0x7FF73C3591E0",
      "description": "A pool of sequences.",
      "properties": []
    },
    "0x7FF73C308CC0": {
      "name": "Sequence",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FAEE550",
      "parent": "0x7FF73C322DB0",
      "description": "A sequence is a collection of cues and prests.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Cue>>::`vftable'",
          "name": "CurrentCue",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Cue>>::`vftable'",
          "name": "LoadedCue",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CueNo",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CueName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::StreamToken>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SequenceActionToken"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoto",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoBack",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoFast",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoBackFast",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        }
      ]
    },
    "0x7FF73FAEE550": {
      "name": "Cue",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD20450",
      "parent": "0x7FF73C308CC0",
      "description": "A cue in a sequence.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::CueNumber>::`vftable'",
          "name": "No",
          "TypeNameStr": "CueNumber",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Release",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Assert",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueAssert"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AllowDuplicates",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TrigType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Go",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TrigTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TrigSound",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SoundValues"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIBPreference",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibPreferenceLevel"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Break",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD20450": {
      "name": "Part",
      "base": "0x7FF73C380D30",
      "child": "0x7FF73FB2E210",
      "parent": "0x7FF73FAEE550",
      "description": "A cue part in a cue.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelCueNumber>::`vftable'",
          "name": "TrackingDistance",
          "TypeNameStr": "RelCueNumber",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Part",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Sync",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Morph",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CommandEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "Command",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIBMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::RelCueNumber>::`vftable'",
          "name": "MIBTarget",
          "TypeNameStr": "RelCueNumber",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MIBMultiStep",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Running",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibMultiStep"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibTiming"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBDelay",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibTiming"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "IndivFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "IndivDelay",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "IndivDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C333B00": {
      "name": "Presets",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C380D30",
      "parent": "0x7FF73FB169C0",
      "description": "A preset pool.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::World>>::`vftable'",
          "name": "InputFilter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selective",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CuePart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CuePartMode"
        }
      ]
    },
    "0x7FF73FB169C0": {
      "name": "PresetPools",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C333B00",
      "parent": "0x7FF73C3591E0",
      "description": "Container for preset pools.",
      "properties": []
    },
    "0x7FF73FB2E210": {
      "name": "Recipe",
      "base": "0x7FF73C380D30",
      "child": "0x7FF73C3D6870",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Group>>::`vftable'",
          "name": "Selection",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SelectionMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StrictNormalMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Preset>>::`vftable'",
          "name": "Preset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Matricks>>::`vftable'",
          "name": "MAtricks",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::World>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Generator::BaseObject>>::`vftable'",
          "name": "Generator",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Values",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EmptyLastCooking",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FailedCookedPart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FailedCookedPart"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C380D30": {
      "name": "Preset",
      "base": "0x7FF73FC8F870",
      "child": "0x7FF73FB2E210",
      "parent": "0x7FF73C266850",
      "description": "A preset is the indirect data source in a light show. Typically*,* it is referenced by a sequence.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::World>>::`vftable'",
          "name": "InputFilter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CuePart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CuePartMode"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FeatureGroup",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Trigger",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PresetValuesMode>::`vftable'",
          "name": "ValuesMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetValuesMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MAgic",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selective",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetModeInternal",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selective",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetMode"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "StoredData",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SpeedMasterProperty>::`vftable'",
          "name": "SpeedMaster",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "SpeedScale",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "One",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedScale"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::Phaser, struct Container::CollectPolicies<class DB::Phaser>>>::`vftable'",
          "name": "PresetData",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "OwnDataPresent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "OwnNonCookedDataPresent",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "OffFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RecipeTemplate",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::StreamToken>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetActionToken"
        }
      ]
    },
    "0x7FF73C3D4A30": {
      "name": "Encoder",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F847070",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InnerObjectType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "InnerObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OuterObjectType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "OuterObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F847070": {
      "name": "EncoderPage",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C3D4A30",
      "parent": "0x7FF73C318260",
      "properties": []
    },
    "0x7FF73C318260": {
      "name": "EncoderBank",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73F847070",
      "parent": "0x7FF73C314A30",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "Command",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpecialWindowTab>::`vftable'",
          "name": "SpecialDialogTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialWindowTab"
        }
      ]
    },
    "0x7FF73C314A30": {
      "name": "EncoderBar",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C318260",
      "parent": "0x7FF73FD1E930",
      "properties": []
    },
    "0x7FF73FD1E930": {
      "name": "EncoderBarPool",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C314A30",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73FB90A20": {
      "name": "AudioInDescriptions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAF3890",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FAF3890": {
      "name": "AudioInDeviceDescription",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F8A1C20": {
      "name": "MidiOutDescriptions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD6B300",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C33B840": {
      "name": "MidiInDescriptions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD6B300",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD6B300": {
      "name": "MIDIDeviceDescription",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC872F0": {
      "name": "LivePatch3dSelection",
      "base": "0x7FF73C31F0E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C321440",
      "description": "Defines the current selection of the live patch for the 3d context.",
      "properties": []
    },
    "0x7FF73C31F0E0": {
      "name": "Patch3dSelection",
      "base": "0x7FF73F85C660",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C321440",
      "description": "Defines the current selection of the patch for the 3d context.",
      "properties": []
    },
    "0x7FF73F85C660": {
      "name": "Selection",
      "base": "0x7FF73C32E980",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C321440",
      "description": "Defines the current selection and world for one operator in the network.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::AxisSystem>::`vftable'",
          "name": "AxisSystem",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AxisSystem"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RotationMode>::`vftable'",
          "name": "RotationMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RotationMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AxisSystem>::`vftable'",
          "name": "LayoutType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AxisGroupType>::`vftable'",
          "name": "AxisGroupType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AxisGroupType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderFunction>::`vftable'",
          "name": "EncoderFunction",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFunction"
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderResolution3d>::`vftable'",
          "name": "EncoderResolution3d",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderResolution3d"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridDirection>::`vftable'",
          "name": "GridDirection",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridDirection"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridRowOrder>::`vftable'",
          "name": "GridRowOrder",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RowOrder"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridColumnOrder>::`vftable'",
          "name": "GridColumnOrder",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColumnOrder"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Columns",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Rows",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "ColumnsInterval",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RowsInterval",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartX",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthX",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartY",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthY",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "StartZ",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "LengthZ",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RadiusStart",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RadiusDelta",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "AngleStart",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "AngleRange",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ArrangeOnChange",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SendChangesWhileEncoderEvent",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CountTotalSelected",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CountFullySelected",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::AttributMask>::`vftable'",
          "name": "SelectedAttributes",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SetupMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PreserveGridPositions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB29010": {
      "name": "FixtureFilterRuleParent",
      "base": "0x7FF73FADA7D0",
      "child": "0x7FF73C412A20",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73C412A20": {
      "name": "FixtureFilterRuleParentItem",
      "base": "0x7FF73FAF2DD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB29010",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Subfixture>>::`vftable'",
          "name": "ParentFilter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCF6040": {
      "name": "FixtureFilterRuleNameItem",
      "base": "0x7FF73C387D50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCDB5C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "NameFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCDB5C0": {
      "name": "FixtureFilterRuleName",
      "base": "0x7FF73FC38A80",
      "child": "0x7FF73FCF6040",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FB01CC0": {
      "name": "FixtureFilterRulePatch",
      "base": "0x7FF73FC38A80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FilterValue",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB228B0": {
      "name": "FixtureFilterRuleCID",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73F84F2B0": {
      "name": "FixtureFilterRuleFID",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FAE01D0": {
      "name": "FixtureFilterRuleRotZ",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73C320A50": {
      "name": "FixtureFilterRuleRotY",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73C2CFBC0": {
      "name": "FixtureFilterRuleRotX",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73F88D910": {
      "name": "FixtureFilterRulePosZ",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FB06410": {
      "name": "FixtureFilterRulePosY",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73C3CBB30": {
      "name": "FixtureFilterRulePosX",
      "base": "0x7FF73FB4B710",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FB4B710": {
      "name": "FixtureFilterRuleNumericRanges",
      "base": "0x7FF73FC38A80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FilterValue",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C332FE0": {
      "name": "FixtureFilterRuleFixtureType",
      "base": "0x7FF73FADA7D0",
      "child": "0x7FF73FC77D80",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FC77D80": {
      "name": "FixtureFilterRuleFixtureTypeItem",
      "base": "0x7FF73FAF2DD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C332FE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::DMXMode>>::`vftable'",
          "name": "DMXMode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C26A060": {
      "name": "IdType",
      "base": "0x7FF73FAF2DD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAC8070",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Custom ID type"
        }
      ]
    },
    "0x7FF73FAC8070": {
      "name": "FixtureFilterRuleIDType",
      "base": "0x7FF73FADA7D0",
      "child": "0x7FF73C26A060",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FB5ED20": {
      "name": "FixtureFilterRuleClass",
      "base": "0x7FF73FADA7D0",
      "child": "0x7FF73FC93810",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FC93810": {
      "name": "FixtureFilterRuleClassItem",
      "base": "0x7FF73FAF2DD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB5ED20",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureClass>>::`vftable'",
          "name": "Class",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C300BC0": {
      "name": "FixtureFilterRuleLayer",
      "base": "0x7FF73FADA7D0",
      "child": "0x7FF73C333570",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73C333570": {
      "name": "FixtureFilterRuleLayerItem",
      "base": "0x7FF73FAF2DD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C300BC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureLayer>>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAF2DD0": {
      "name": "FixtureFilterRuleItemIndex",
      "base": "0x7FF73C387D50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC38A80",
      "properties": []
    },
    "0x7FF73FADA7D0": {
      "name": "FixtureFilterRuleIndices",
      "base": "0x7FF73FC38A80",
      "child": "0x7FF73FAF2DD0",
      "parent": "0x7FF73FBF09E0",
      "properties": []
    },
    "0x7FF73FC38A80": {
      "name": "FilterRuleFixture",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF09E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Invert",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73C387D50": {
      "name": "FixtureFilterRuleItemBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC38A80",
      "properties": []
    },
    "0x7FF73FBF09E0": {
      "name": "FixtureFilterRules",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC38A80",
      "parent": "0x7FF73C3C50A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Not",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FCB04D0": {
      "name": "Filters",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C389B90",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73C389B90": {
      "name": "Filter",
      "base": "0x7FF73C3C50A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCB04D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Absolute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Relative",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Timing",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Phaser",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FAD7680": {
      "name": "Worlds",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C3C50A0",
      "parent": "0x7FF73C3591E0",
      "description": "A container for worlds.",
      "properties": []
    },
    "0x7FF73C3C50A0": {
      "name": "World",
      "base": "0x7FF73FC8F870",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAD7680",
      "description": "A fixture selection plus an additional attribute filter. Used to filter the working area for a user profile in the network.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::AttributMask>::`vftable'",
          "name": "Attributes",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Selection",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StrictNormalMode"
        }
      ]
    },
    "0x7FF73FCEE390": {
      "name": "Groups",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FC8F870",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73FC8F870": {
      "name": "Group",
      "base": "0x7FF73C32E980",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCEE390",
      "description": "A fixture selection that contains an order. Used to recall its selection or as groupmaster.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GroupMasterMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MemoryType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Compressed",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GroupMemoryType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridCursorMovement>::`vftable'",
          "name": "MoveGridCursor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Append X",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridCursorMovementGroup"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PreserveGridPositions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::SubfixtureBlock>::`vftable'",
          "name": "SelectionData",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB98E30": {
      "name": "MAtricks",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C32E980",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73C32E980": {
      "name": "MAtrick",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB98E30",
      "description": "MAtricks for the selection object.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Active",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HasAnyMatricksData",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ShuffleMode>::`vftable'",
          "name": "ShuffleMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShuffleMode"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "InitialName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Matricks>>::`vftable'",
          "name": "InitialMatricks",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "X",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksIndexNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Y",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksIndexNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Z",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksIndexNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "XBlock",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksBlockNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "YBlock",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksBlockNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZBlock",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksBlockNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "XGroup",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksGroupNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "YGroup",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksGroupNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZGroup",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksGroupNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "XWings",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksWingsNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "YWings",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksWingsNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZWings",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksWingsNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "XWidth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatrixWidthAuto"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "YWidth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatrixWidthAuto"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZWidth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatrixWidthAuto"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "XShuffle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShuffleNone"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "YShuffle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShuffleNone"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ZShuffle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShuffleNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "XShift",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShiftNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "YShift",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShiftNone"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ZShift",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksShiftNone"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "InvertStyle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Pan",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MatricksInvertStyle"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvertX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvertY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvertZ",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRangeX",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRangeY",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRangeZ",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RelativeFade",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RelativeDelay",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RelativePhase",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RelativeSpeed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Relative",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PhaserTransform",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserTransformationsShort"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Matricks::*)(void), {public: void DB::Matricks::DoShuffle(void), 0}>::`vftable'",
          "name": "DoShuffle",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD496A0": {
      "name": "TagGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F87ABF0": {
      "name": "AssignmentEditorGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SearchString",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RowFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RowFilter"
        }
      ]
    },
    "0x7FF73FCBE690": {
      "name": "AssignmentEditorFilterItem",
      "base": "0x7FF73C385C50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC3E7A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RowFilterActive",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RowFilter"
        }
      ]
    },
    "0x7FF73C345B60": {
      "name": "TempStoreSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCEFBD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "NewName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentMask",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "127",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay1",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay2",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay3",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay4",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay5",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay6",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenContentDisplay7",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ImageStoreSource",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "ScreenShot",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageStoreSource"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ImageDisplayIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StoreDisplayNumber"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ImageNDIIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::NDISource>>::`vftable'",
          "name": "ImageNDISource",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ImageResolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "64",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageResolution"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ChannelFilterMode>::`vftable'",
          "name": "ChannelFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Active",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Channel Filter Mode for next store operation",
          "Enum": "ChannelFilterMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreLook",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreScreenshot",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreMode>::`vftable'",
          "name": "StoreMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Active",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store Mode for next store operation",
          "Enum": "StoremodeRadio"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreSource>::`vftable'",
          "name": "StoreSource",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Programmer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store Source for next store operation",
          "Enum": "StoreSource"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreEmbedded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store embedded option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreMatricks",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store matricks option for presets/groups/recipes",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetInputFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store preset input filter option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateInputFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update preset input filter option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "KeepActivation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Keep activation after store option",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store cue only option",
          "Enum": "CopyCueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetModeDefault"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "UpdatePresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetModeDefault"
        },
        {
          "CTypeName": "const DB::Property<enum DB::UpdateMode>::`vftable'",
          "name": "UpdateModePresets",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update Mode for next update operation",
          "Enum": "Update"
        },
        {
          "CTypeName": "const DB::Property<enum DB::UpdateMode>::`vftable'",
          "name": "UpdateModeCues",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update Mode for next update operation",
          "Enum": "Update"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridMergeMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Append X",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store grid merge option",
          "Enum": "GridMergeMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreMode>::`vftable'",
          "name": "CopyMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Ask",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy Mode for next store operation",
          "Enum": "StoremodeRadio"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue only option",
          "Enum": "CopyCueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateCueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update cue only option",
          "Enum": "CueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueSrc",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Content",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue src option",
          "Enum": "CueCopySrc"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueDst",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "AllowTracked",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue dst option",
          "Enum": "CueCopyDst"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueDstMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Overwrite",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue dst mode option",
          "Enum": "CueCopyDstMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyTrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy tracking shield option",
          "Enum": "TrackingShield"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store tracking shield option",
          "Enum": "TrackingShield"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TrackingShield>::`vftable'",
          "name": "UITrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Store tracking shield option",
          "Enum": "TrackingShieldPopup"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TrackingShield>::`vftable'",
          "name": "UIUpdateTrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Store tracking shield option",
          "Enum": "TrackingShieldPopup"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CueOperationMode>::`vftable'",
          "name": "CueOperationMode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Cue Only",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "CueOperationMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DimmerCueOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CueOperationMode>::`vftable'",
          "name": "UpdateCueOperationMode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Cue Only",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "CueOperationMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UpdateDimmerCueOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C28EE20": {
      "name": "ThemeMergeGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FBABA50": {
      "name": "RunningPlaybacksDBObjectGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F83C7A0": {
      "name": "AgendaGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C276B70": {
      "name": "LayoutGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F81E970": {
      "name": "RecipeGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C404BD0": {
      "name": "RdmGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C2EF120": {
      "name": "ColumnSetGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FB886A0": {
      "name": "OopsGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C2F7C80": {
      "name": "GelGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F823D00": {
      "name": "GelGridSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "View",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Big Icons",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GelGridType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SortBy",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GelSortType"
        }
      ]
    },
    "0x7FF73C26B520": {
      "name": "DBObjectGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "HeaderRows",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "DefaultToken",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ExplorerMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseLocalExpandedState",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "LocalExpandedStateDefault",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IgnoreCmdInput",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowParentAsHintForMultiTarget",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FilterMask",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "HierarchyFilterMask",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::GetParam::Role>::`vftable'",
          "name": "DefaultRole",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Roles"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<unsigned int (DB::DBObjectGridData::*)(class DB::Cmdline *), {public: unsigned int DB::DBObjectGridData::CreateFrameSelection(class DB::Cmdline *), 0}>::`vftable'",
          "name": "CreateFrameSelection",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C401090": {
      "name": "DBObjectGridLine",
      "base": "0x7FF73FB68200",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD77910",
      "properties": []
    },
    "0x7FF73FD77910": {
      "name": "DBObjectGridColumnConfiguration",
      "base": "0x7FF73FCEB7D0",
      "child": "0x7FF73C401090",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCFD930": {
      "name": "PatchFilterItem",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F8970A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F8970A0": {
      "name": "PatchFilter",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCFD930",
      "parent": "0x7FF73FCECC80",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::PatchSettings>>::`vftable'",
          "name": "Settings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllVisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EmptyVisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CustomEntry3Visible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AllFilterName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EmptyFilterName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CustomEntry3FilterName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCECC80": {
      "name": "Patch",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "description": "Container for a fixture patch.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountFixtures",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountSubfixtures",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountRTChannels",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountUIChannels",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountDMXModes",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CountLogicalChannels",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Patch::*)(void), {public: void DB::Patch::ResetAttribDefinitionsToDefault(void), 0}>::`vftable'",
          "name": "ResetAttribDefinitionsToDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Loads system defaults for attributes"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Patch::*)(void), {public: void DB::Patch::Open(void), 0}>::`vftable'",
          "name": "OpenPatch",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Open Patch"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Patch::*)(void), {public: void DB::Patch::Close(void), 0}>::`vftable'",
          "name": "ClosePatch",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Close Patch"
        }
      ]
    },
    "0x7FF73FB86280": {
      "name": "DmxCurvePoint",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCC1F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "In",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Out",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Accel",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Decel",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBCC1F0": {
      "name": "DmxCurve",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FB86280",
      "parent": "0x7FF73FC129C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "CurveMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxCurveModes"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "MinX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "MinY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "MaxX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "MaxY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CurveIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CurveIndexOld",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "UseForVisualization",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC129C0": {
      "name": "DmxCurves",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBCC1F0",
      "parent": "0x7FF73FCECC80",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ApproxInvertibleCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NotInvertibleCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ConflictSummary",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD50410": {
      "name": "MultiPatchBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC5DAB0",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73FC5DAB0": {
      "name": "Fixture",
      "base": "0x7FF73FCA2470",
      "child": "0x7FF73FCA2470",
      "parent": "0x7FF73FCA2470",
      "description": "A fixture represents a real world object on stage that usually can be controlled via DMX.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureType>>::`vftable'",
          "name": "FixtureType",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Defines fixture type"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::DMXMode>>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines mode of the fixture type"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::DMXMode>>::`vftable'",
          "name": "ModeDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Defines fixture type AND mode."
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Fixture ID",
          "Enum": "FixtureIdEnum"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Custom ID type"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IDTypeDirect",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Custom ID",
          "Enum": "FixtureIdEnum"
        },
        {
          "CTypeName": "const DB::Property<class Container::ArrayCount<class DB::DMXPropertyAddress, 8>>::`vftable'",
          "name": "Patch",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A list of comma separated patch addresses"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::FixtureLayer>>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::FixtureClass>>::`vftable'",
          "name": "Class",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break1",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break2",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break3",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break4",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break5",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break6",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break7",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Break8",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Math::TQuaternion<double>>::`vftable'",
          "name": "RotDirect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "GelColor",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1.000000,1.000000,1.000000,1.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Gel>>::`vftable'",
          "name": "Gel",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamAngle",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ShaperPOV",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShadowQuality",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "High",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShadowMapQuality"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CastShadow",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MeshMirrorX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FollowTarget",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Selectable3D",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Visible3D",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::Space>>::`vftable'",
          "name": "TargetSpace",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Fixture, class DB::Space>>::`vftable'",
          "name": "MovementSpace",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MasterReact",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Grand",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MasterReaction"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "P1Pan",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "P1Tilt",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "P2Pan",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "P2Tilt",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P3X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P3Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ChannelRTCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsMultipatch",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Fixture *>::`vftable'",
          "name": "MultipatchMain",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MultipatchCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C330EE0": {
      "name": "Fixtures",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC5DAB0",
      "parent": "0x7FF73C292310",
      "description": "Your description here.",
      "properties": []
    },
    "0x7FF73FCA5B70": {
      "name": "StageElement",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C3D6870",
      "parent": "0x7FF73C262AB0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FollowStageDimensions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P1Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P2Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P3X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P3Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P3Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P4X",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P4Y",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "P4Z",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C262AB0": {
      "name": "Space",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FCA5B70",
      "parent": "0x7FF73FD41DB0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD41DB0": {
      "name": "Spaces",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C262AB0",
      "parent": "0x7FF73C292310",
      "properties": []
    },
    "0x7FF73C292310": {
      "name": "Stage",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB8D620",
      "description": "Your description here.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValueD>::`vftable'",
          "name": "PosX",
          "TypeNameStr": "DoubleLength",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValueD>::`vftable'",
          "name": "PosY",
          "TypeNameStr": "DoubleLength",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValueD>::`vftable'",
          "name": "PosZ",
          "TypeNameStr": "DoubleLength",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::AnglePropertyValueDegreeD>::`vftable'",
          "name": "RotX",
          "TypeNameStr": "DoubleAngleDegree",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::AnglePropertyValueDegreeD>::`vftable'",
          "name": "RotY",
          "TypeNameStr": "DoubleAngleDegree",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::AnglePropertyValueDegreeD>::`vftable'",
          "name": "RotZ",
          "TypeNameStr": "DoubleAngleDegree",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MinZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "MaxZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceRight",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceLeft",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceFront",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceBack",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceTop",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "AppearanceBottom",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB8D620": {
      "name": "Stages",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C292310",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73C2F6040": {
      "name": "Layers",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCAB1B0",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73FCAB1B0": {
      "name": "FixtureLayer",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2F6040",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C2EABC0": {
      "name": "Classes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C358390",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73C358390": {
      "name": "Class",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2EABC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBDF7C0": {
      "name": "IDs",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD83DB0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MaxID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD83DB0": {
      "name": "IDTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBDF7C0",
      "parent": "0x7FF73FCECC80",
      "description": "Displays all fixtures of one ID type.",
      "properties": []
    },
    "0x7FF73FCA2470": {
      "name": "SubFixture",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FCA2470",
      "parent": "0x7FF73FCA2470",
      "description": "Logical functional unit inside a fixture.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OldSubfixtureIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SubfixtureIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Fixture>>::`vftable'",
          "name": "Fixture",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Stage>>::`vftable'",
          "name": "Stage",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "OffsetPan",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "OffsetTilt",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ParameterCountViolation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SubfxitureCountViolation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ConflitedPatch",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD1BAA0": {
      "name": "UIChannels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C288700",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73C288700": {
      "name": "UIChannel",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD1BAA0",
      "description": "Displays all user interface channels of all subfixtures",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SubAttribute",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Snap",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Master",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MasterReaction"
        }
      ]
    },
    "0x7FF73FB1F090": {
      "name": "RTChannels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC94660",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73FC94660": {
      "name": "RTChannel",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB1F090",
      "description": "Displays all realtime channels of all subfixtures",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Fixture",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ChannelName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Frequency",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChannelFrequency"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Default",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "DefaultPreset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Highlight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "HighlightPreset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Lowlight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "LowlightPreset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Coarse",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Patched"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Fine",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Patched"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "Ultra",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Patched"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxCurve",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "IgnoreFT"
        }
      ]
    },
    "0x7FF73C339080": {
      "name": "Materials",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C37C800",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73FD656C0": {
      "name": "Meshes",
      "base": "0x7FF73FBD4840",
      "child": "0x7FF73FCA3DA0",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73C2779E0": {
      "name": "UserMesh",
      "base": "0x7FF73FCA3DA0",
      "child": "0x7FF73FAC2CE0",
      "parent": "0x7FF73FD656C0",
      "properties": []
    },
    "0x7FF73FCA3DA0": {
      "name": "Mesh",
      "base": "0x7FF73FCE6780",
      "child": "0x7FF73FAC2CE0",
      "parent": "0x7FF73FD656C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VerticesCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TriangleCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OrgVerticesCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "OrgMeshCount",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ContentSize",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BoundingBox",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TriangleCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MeshCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::TVector<float>>::`vftable'",
          "name": "Dimension",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::TVector<float>>::`vftable'",
          "name": "Ratio",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Culling",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB5F9E0": {
      "name": "UserMaterial",
      "base": "0x7FF73FAC2CE0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCA3DA0",
      "properties": []
    },
    "0x7FF73C37C800": {
      "name": "MaterialContent",
      "base": "0x7FF73FAC2CE0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C339080",
      "properties": []
    },
    "0x7FF73FAC2CE0": {
      "name": "Material",
      "base": "0x7FF73FCE6780",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Texture",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Cont.Size",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Cont.Ref",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Invisible",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC80990": {
      "name": "Cameras",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C3709D0",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73C3709D0": {
      "name": "Camera",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "Near",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "Far",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FOV",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Pan",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Tilt",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Roll",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Zoom",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::TVector<float>>::`vftable'",
          "name": "Pivot",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PivotDistMin",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PivotDistMax",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::CameraMode>::`vftable'",
          "name": "CameraMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CameraMode"
        }
      ]
    },
    "0x7FF73F842AD0": {
      "name": "StorePreferencesTimer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::TimerMode>::`vftable'",
          "name": "TimerMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimerMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RestartOption>::`vftable'",
          "name": "RestartOption",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RestartOption"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TimerLinkType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NoName"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimerTriggerToken>::`vftable'",
          "name": "TimerTriggerToken",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimerTriggerToken"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CountdownAlertType>::`vftable'",
          "name": "CountdownAlertType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CountdownAlertType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CountdownAlertRange>::`vftable'",
          "name": "CountdownAlertRange",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CountdownAlertRange"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "CountdownDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "AlertCommand",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AlertText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormatDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "AlertDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F84E330": {
      "name": "Timers",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FB0B460",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73FB0B460": {
      "name": "Timer",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F84E330",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::TimerMode>::`vftable'",
          "name": "TimerMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimerMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RestartOption>::`vftable'",
          "name": "RestartOption",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RestartOption"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TimerLinkType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Not Linked",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NoName"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimerTriggerToken>::`vftable'",
          "name": "TimerTriggerToken",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimerTriggerToken"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CountdownAlertType>::`vftable'",
          "name": "CountdownAlertType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CountdownAlertType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CountdownAlertRange>::`vftable'",
          "name": "CountdownAlertRange",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CountdownAlertRange"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "CountdownDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "ElapsedTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "RemainingTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::CmdInputString>::`vftable'",
          "name": "AlertCommand",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AlertText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormat"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "AlertDuration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timer::*)(class DB::Cmdline *), {public: void DB::Timer::LoadFromDefault(class DB::Cmdline *), 0}>::`vftable'",
          "name": "LoadFromDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::Timer::*)(class DB::Cmdline *)const, {public: void DB::Timer::SaveToDefault(class DB::Cmdline *)const, 0}>::`vftable'",
          "name": "SaveToDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "StopwatchColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "CountdownColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ConfirmedColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "User",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCEC290": {
      "name": "Output",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "description": "Defines which parameters are calculated by this station in the network. Yields all tables necessary for realtime calculations.",
      "properties": []
    },
    "0x7FF73FBD77D0": {
      "name": "PlaybackTable",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73FAFF9E0": {
      "name": "Tracker",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FABDFB0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TrackerID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MArkerID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureIdEnum"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PositionX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PositionY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PositionZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "SpeedX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "SpeedY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "SpeedZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsOnline",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73FC76340": {
      "name": "PSNProtocol",
      "base": "0x7FF73C335F90",
      "child": "0x7FF73FABDFB0",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73FABDFB0": {
      "name": "System",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FAFF9E0",
      "parent": "0x7FF73FC76340",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "SenderIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Requested",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Port",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "MulticastIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MapX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "X",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "XYZMapping"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MapY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Y",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "XYZMapping"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MapZ",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Z",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "XYZMapping"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InvZ",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MergeMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DMXPriority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "LTP",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxPrio"
        }
      ]
    },
    "0x7FF73F84C900": {
      "name": "DMXAddress",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F848580",
      "description": "Displays all dmx channels of all universes",
      "properties": []
    },
    "0x7FF73F848580": {
      "name": "DmxAddresses",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F84C900",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73FC242E0": {
      "name": "DMX",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC6F3C0",
      "description": "Displays all dmx channels of a universe",
      "properties": []
    },
    "0x7FF73FC6F3C0": {
      "name": "DmxUniverse",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FC242E0",
      "parent": "0x7FF73F84D940",
      "description": "Represents a DMX universe.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::DMX::MergeMode>::`vftable'",
          "name": "MergeMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Prio",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Request",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LicenseRequest"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Granted",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PortOut",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PortIn",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PortRDM",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "CoarseParams",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ParkedCount",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "TesterCount",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Array<class DB::DMX::PatchInfo, 512>>::`vftable'",
          "name": "PatchInfo",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F84D940": {
      "name": "DmxUniverses",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC6F3C0",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73FB5F380": {
      "name": "DMXRoot",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Contains all DMX related data in huge flat data fields.",
      "properties": []
    },
    "0x7FF73FD36D80": {
      "name": "DMXModeFake",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC0E0A0",
      "description": "This is NOT a DMXMode, but a mere reference to one",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "DMRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC0E0A0": {
      "name": "FixtureTypeFake",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD36D80",
      "parent": "0x7FF73F9A8FB0",
      "description": "This is NOT a fixture type, but a mere reference to one",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "FTRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F9A8FB0": {
      "name": "FixtureTypesOverview",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC0E0A0",
      "parent": "0x7FF73FCECC80",
      "description": "Artificial container to get an overview of fixture types and all their dmx modes",
      "properties": []
    },
    "0x7FF73FB92200": {
      "name": "FixtureTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBD8D50",
      "parent": "0x7FF73FCECC80",
      "description": "Container for all types of fixtures in a patch.",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SourceIsShow",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBD8D50": {
      "name": "FixtureType",
      "base": "0x7FF73FC912B0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB92200",
      "description": "Describes logical and physical functionality and appearance of a specific type of fixture.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "User",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixtureTypeSource"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ShortName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LongName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Manufacturer",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RealUsed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Universal",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CanHaveChildren",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CircleInGeometries",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NotUniqueAttributes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SpecialPurpose",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialPurposeFT"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShareGlobal",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Stream::Version>::`vftable'",
          "name": "Version",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageRotation>::`vftable'",
          "name": "ImageRotation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageMirror>::`vftable'",
          "name": "ImageMirror",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "XYZ",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "FixtureTypeXYZStatus"
        }
      ]
    },
    "0x7FF73C336980": {
      "name": "PowerConsumption",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC1F0F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PowerFactor",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "VoltageLow",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "90",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "VoltageHigh",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "240",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FrequencyLow",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "50",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FrequencyHigh",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "60",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC1F0F0": {
      "name": "Connector",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C336980",
      "parent": "0x7FF73C388810",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ConnectorType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "XLR5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ConnectorType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::Connector::Gender>::`vftable'",
          "name": "Gender",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Universal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ConnectorGender"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "DMXBreak",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Length",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C388810": {
      "name": "Connectors",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC1F0F0",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73C2F22E0": {
      "name": "CRI",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4C9C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "CES",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CES01",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorSample"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ColorRenderingIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB4C9C0": {
      "name": "CRIGroup",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C2F22E0",
      "parent": "0x7FF73FB8D090",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ColorTemperature",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "6000.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB8D090": {
      "name": "CRIs",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB4C9C0",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73F864D60": {
      "name": "Gamut",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F8577F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Colors::CIE<float>, struct Container::CollectPolicies<class Colors::CIE<float>>>>::`vftable'",
          "name": "Points",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F8577F0": {
      "name": "GamutCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F864D60",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73C34D210": {
      "name": "ColorSpaceData",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB0CEA0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "ColorRed",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,0,0,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "ColorGreen",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0,1,0,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "ColorBlue",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0,0,1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "ColorWhitePoint",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorSpaceData::ColorSpaceMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "sRGB",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorSpaceMode"
        }
      ]
    },
    "0x7FF73FB0CEA0": {
      "name": "ColorSpaceCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C34D210",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73FBCB700": {
      "name": "MeasurementPoint",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3B2DD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "WaveLength",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Energy",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD29930": {
      "name": "MeasurementFilter",
      "base": "0x7FF73C3B2DD0",
      "child": "0x7FF73FBCB700",
      "parent": "0x7FF73C289C80",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Transmission",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD0F040": {
      "name": "MeasurementEmitter",
      "base": "0x7FF73C3B2DD0",
      "child": "0x7FF73FBCB700",
      "parent": "0x7FF73FB40050",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LuminousIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3B2DD0": {
      "name": "Measurement",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBCB700",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Physical",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Measurement::Interpolation>::`vftable'",
          "name": "InterpolationTo",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Linear",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MeasurementInterpolation"
        }
      ]
    },
    "0x7FF73C289C80": {
      "name": "FTFilter",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FD29930",
      "parent": "0x7FF73F857260",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "SubtractiveIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F857260": {
      "name": "FTFilters",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C289C80",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73FB40050": {
      "name": "Emitter",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FD0F040",
      "parent": "0x7FF73F892BD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Intensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "DominantWaveLength",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DiodePart",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F892BD0": {
      "name": "Emitters",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB40050",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73C2EEAC0": {
      "name": "PhysicalPropertiesData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3D6140",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "TempLow",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "TempHigh",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "40",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Weight",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LegHeight",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3D6140": {
      "name": "PhysicalProperties",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C2EEAC0",
      "parent": "0x7FF73FBF3340",
      "properties": []
    },
    "0x7FF73FBF3340": {
      "name": "PhysicalDescriptions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB40050",
      "parent": "0x7FF73FBD8D50",
      "properties": []
    },
    "0x7FF73C2891C0": {
      "name": "Relations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC5D0C0",
      "parent": "0x7FF73FCE6D10",
      "description": "Container for all relations inside a DMX mode of a fixture type.",
      "properties": []
    },
    "0x7FF73F88D380": {
      "name": "DMXModes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCE6D10",
      "parent": "0x7FF73FBD8D50",
      "description": "Container for all modes of a fixture type.",
      "properties": []
    },
    "0x7FF73FCE6D10": {
      "name": "DMXMode",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F88D380",
      "description": "Describes a possible patch footprint and functional behavior of one type of fixture.",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "TotalFootPrint",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::DMXMode, class DB::GeometryBase>>::`vftable'",
          "name": "Geometry",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::DMXMode, class DB::GeometryBase>>::`vftable'",
          "name": "GeometryDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Container::Array<class DB::DMXBreakSize, 8>>::`vftable'",
          "name": "DMXFootprint",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RDMPersonalityId",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ConflictCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ConflictSummary",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Used",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "XYZ",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "XYZPossible",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DiveInto",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BladeMirror",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BladePerPrismBeam",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC3DDB0": {
      "name": "FTSubfixture",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3577F0",
      "properties": []
    },
    "0x7FF73C3577F0": {
      "name": "SubfixtureOverview",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC3DDB0",
      "parent": "0x7FF73FCE6D10",
      "properties": []
    },
    "0x7FF73FC5D0C0": {
      "name": "Relation",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2891C0",
      "description": "Describes the relation bewteen channel functions and controlling channel types.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Relation, class DB::DMXChannel>>::`vftable'",
          "name": "Master",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Relation, class DB::DMXChannel>>::`vftable'",
          "name": "MasterDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Relation, class DB::ChannelFunction>>::`vftable'",
          "name": "Follower",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Relation, class DB::ChannelFunction>>::`vftable'",
          "name": "FollowerDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RelationType"
        }
      ]
    },
    "0x7FF73C285ED0": {
      "name": "Geometries",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FBD8D50",
      "description": "A container for all geometries in a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "IgnoreEnforceUniqueChildNames",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C350AF0": {
      "name": "GeometryDisplay",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a display",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Texture",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C31E090": {
      "name": "PinPatch",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD37770",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "FromPin",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ToPin",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::PinPatch, class DB::WiringObject>>::`vftable'",
          "name": "ToWiringObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD37770": {
      "name": "WiringObject",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ConnectorType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::WiringObject::ComponentType>::`vftable'",
          "name": "ComponentType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ComponentType"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SignalType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "PinCount",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ElectricalPayLoad",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "VoltageRangeMax",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "VoltageRangeMin",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FrequencyRangeMax",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FrequencyRangeMin",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "MaxPayLoad",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Voltage",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SignalLayer",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CosPhi",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FuseCurrent",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::WiringObject::FuseRating>::`vftable'",
          "name": "FuseRating",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FuseRating"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WiringObject::Orientation>::`vftable'",
          "name": "Orientation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Orientation"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WireGroup",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBD8290": {
      "name": "Support",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Support::SupportType>::`vftable'",
          "name": "SupportType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SupportType"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RopeCrossSection",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::Vector3<float>>::`vftable'",
          "name": "RopeOffset",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityXX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityYY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CapacityZZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceXX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceYY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResistanceZZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCD85A0": {
      "name": "Structure",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Structure, class DB::GeometryBase>>::`vftable'",
          "name": "LinkedGeometry",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Structure::StructureType>::`vftable'",
          "name": "StructureType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StructureType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::Structure::CrossSectionType>::`vftable'",
          "name": "CrossSectionType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CrossSectionType"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CrossSectionHeight",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CrossSectionWallThickness",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TrussCrossSection",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC886D0": {
      "name": "Magnet",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": []
    },
    "0x7FF73C262450": {
      "name": "LaserProtocol",
      "base": "0x7FF73FC8CE50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAE4BD0",
      "properties": []
    },
    "0x7FF73FAE4BD0": {
      "name": "Laser",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Laser::ColorType>::`vftable'",
          "name": "ColorType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LaserColorType"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "OutputStrength",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamDiameter",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamDivergenceMin",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamDivergenceMax",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ScanAnglePan",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ScanAngleTilt",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ScanSpeed",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Laser, class DB::Emitter>>::`vftable'",
          "name": "Emitter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB0D430": {
      "name": "Inventory",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Count",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C357260": {
      "name": "MediaServerMaster",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a media server master.",
      "properties": []
    },
    "0x7FF73C27EA90": {
      "name": "MediaServerCamera",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a media server camera.",
      "properties": []
    },
    "0x7FF73FC25B20": {
      "name": "MediaServerLayer",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a media server layer.",
      "properties": []
    },
    "0x7FF73FB0D9C0": {
      "name": "FilterShaper",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a shaping filter in the light beam.",
      "properties": []
    },
    "0x7FF73FBC71C0": {
      "name": "FilterBeam",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a filter in the light beam.",
      "properties": []
    },
    "0x7FF73FB694B0": {
      "name": "FilterColor",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a color filter in the light beam.",
      "properties": []
    },
    "0x7FF73FAD3210": {
      "name": "FilterGobo",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents a gobo filter in the light beam.",
      "properties": []
    },
    "0x7FF73F8992D0": {
      "name": "Beam",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents the light emitter of a beam.",
      "properties": [
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "PowerConsumption",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "LuminousIntensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "10000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ColorTemperature",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "3000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamAngle",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "25.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "BeamRadius",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.05",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "FieldAngle",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "25.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LampType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Discharge",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LampType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "BeamType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wash",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BeamType"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RectangleRatio",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1.778",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ThrowRatio",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "MultiBeamBlur",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ColorRenderingIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "IsMainBeam",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Beam, class DB::Emitter>>::`vftable'",
          "name": "EmitterSpectrum",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC08450": {
      "name": "Axis",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that represents an axis.",
      "properties": []
    },
    "0x7FF73C2FD730": {
      "name": "Break",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F85D850",
      "description": "your description here",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DMXBreak",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddressAbsolute>::`vftable'",
          "name": "DMXOffset",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1.001",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F85D850": {
      "name": "GeometryReference",
      "base": "0x7FF73FB30460",
      "child": "0x7FF73C2FD730",
      "parent": "0x7FF73FB30460",
      "description": "A specialized geometry that references another geometry.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::GeometryReference, class DB::GeometryBase>>::`vftable'",
          "name": "Geometry",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::GeometryReference, class DB::GeometryBase>>::`vftable'",
          "name": "GeometryDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::GeometryBase, class DB::Model>>::`vftable'",
          "name": "Model",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC39010": {
      "name": "SoftwareVersion",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C33AE50",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SoftwareVersionID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C33AE50": {
      "name": "SoftwareVersions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC39010",
      "parent": "0x7FF73FCE6D10",
      "description": "A container for all software versions supporting this dmx mode.",
      "properties": []
    },
    "0x7FF73FC71140": {
      "name": "DMXChannel",
      "base": "0x7FF73FB71580",
      "child": "0x7FF73F851620",
      "parent": "0x7FF73FB05090",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "DMXBreak",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXBreak"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Coarse",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PatchOffset"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Fine",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PatchOffset"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Ultra",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PatchOffset"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Frequency",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "30",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChannelFrequency"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "CalcAlways",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::DMXChannel::VirtualResolution>::`vftable'",
          "name": "VirtualResolution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "24 bits",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXVirtualResolution"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::DMXChannel, class DB::ChannelFunction>>::`vftable'",
          "name": "DefaultChannelFunction",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Default",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "000000",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Highlight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNone"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Lowlight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNone"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::DMXChannel, class DB::GeometryBase>>::`vftable'",
          "name": "Geometry",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB05090": {
      "name": "DMXChannels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC71140",
      "parent": "0x7FF73FCE6D10",
      "description": "A container for all dmx channels of one dmx mode.",
      "properties": []
    },
    "0x7FF73FB30460": {
      "name": "Geometry",
      "base": "0x7FF73FC8CE50",
      "child": "0x7FF73FB30460",
      "parent": "0x7FF73FB30460",
      "description": "A base class for all geometry types.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::GeometryBase, class DB::Model>>::`vftable'",
          "name": "Model",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosX",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosY",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "PosZ",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotX",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotY",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RotZ",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::TQuaternion<float>>::`vftable'",
          "name": "RotDirect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridAuto",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EC_AutoGrid"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridSwapXY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridInvX",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridInvY",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridInvZ",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "GridX",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EC_NoGrid"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "GridY",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EC_NoGrid"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "GridZ",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EC_NoGrid"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MergeGeometries",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F851620": {
      "name": "LogicalChannel",
      "base": "0x7FF73FB71580",
      "child": "0x7FF73FAC5FD0",
      "parent": "0x7FF73FC71140",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::LogicalChannel, class DB::Attribute>>::`vftable'",
          "name": "Attribute",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Snap",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Master",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MasterReaction"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MibFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "DMXChangeTimeLimit",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::LogicalChannel, class DB::DmxCurve>>::`vftable'",
          "name": "DmxCurve",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAC5FD0": {
      "name": "ChannelFunction",
      "base": "0x7FF73FC8CE50",
      "child": "0x7FF73F884320",
      "parent": "0x7FF73F851620",
      "description": "Defines a functional range in a channel type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::Attribute>>::`vftable'",
          "name": "Attribute",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "DMXFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "DMXTo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "16777215",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Default",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "PhysicalFrom",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "PhysicalTo",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RealFade",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RealAcceleration",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::Wheel>>::`vftable'",
          "name": "Wheel",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::Emitter>>::`vftable'",
          "name": "Emitter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::Gamut>>::`vftable'",
          "name": "Gamut",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::ColorSpaceData>>::`vftable'",
          "name": "ColorSpaceData",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::FTFilter>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DMXInvert",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EncoderInvert",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IgnoreFollow",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EncoderLoop",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode2<class DB::ChannelFunction>>::`vftable'",
          "name": "ModeMaster",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode2<class DB::ChannelFunction>>::`vftable'",
          "name": "ModeMasterDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ChannelFunction, class DB::DMXChannel>>::`vftable'",
          "name": "ModeMasterDMXChannelDirect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "ModeFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "ModeTo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "FFFFFF",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OriginalAttribute",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CustomName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F884320": {
      "name": "ChannelSet",
      "base": "0x7FF73FC8CE50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAC5FD0",
      "description": "Defines a specific value (range) inside a channel function.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "DMXFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "DMXTo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "16777215",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "WheelSlotIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "PhysicalFrom",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "PhysicalTo",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "HasPhysical",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73C31A030": {
      "name": "Models",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCAC460",
      "parent": "0x7FF73FBD8D50",
      "description": "Container for all 3D models of a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "IgnoreEnforceUniqueChildNames",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FCAC460": {
      "name": "Model",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C31A030",
      "description": "A 3D model that enwraps the geometry skeleton of a fixture type.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "Length",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "Width",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::LengthPropertyValue>::`vftable'",
          "name": "Height",
          "TypeNameStr": "FloatLength",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "DimensionsfollowRatio",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If you edit one dimensions, the other two will follow the original ratio",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "CastShadow",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Model cast shadow",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Mesh>>::`vftable'",
          "name": "Mesh",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "File",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB971F0": {
      "name": "Wheels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBC6C30",
      "parent": "0x7FF73FBD8D50",
      "description": "Container for all wheels in a fixture type.",
      "properties": []
    },
    "0x7FF73FBC6C30": {
      "name": "Wheel",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C2684F0",
      "parent": "0x7FF73FB971F0",
      "description": "Describes a physical gobo or color wheel.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AllowShortcut",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C2684F0": {
      "name": "Slot",
      "base": "0x7FF73FC912B0",
      "child": "0x7FF73FC76D30",
      "parent": "0x7FF73FBC6C30",
      "description": "Describes a slot in a wheel with name, color and gobo etc.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::GoboImage>>::`vftable'",
          "name": "Image",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Math::Vector2<float>>::`vftable'",
          "name": "AnimationSystemP1",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0.000000,0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::Vector2<float>>::`vftable'",
          "name": "AnimationSystemP2",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0.000000,0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::Vector2<float>>::`vftable'",
          "name": "AnimationSystemP3",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0.000000,0.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "AnimationSystemRadius",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::WheelSlot, class DB::FTFilter>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC76D30": {
      "name": "Facet",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2684F0",
      "description": "Describes a slot in a wheel with name, color and gobo etc.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1.000000,1.000000,1.000000,1.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Math::TMatrix3x3<float>>::`vftable'",
          "name": "Rotation",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "{1.000000,0.000000,0.000000}{0.000000,1.000000,0.000000}{0.000000,0.000000,1.000000}",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC4AA30": {
      "name": "Protocols",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBD8D50",
      "description": "your description here.",
      "properties": []
    },
    "0x7FF73C3FA6B0": {
      "name": "RDMFixtureType",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "RDM section",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ManufacturerId>::`vftable'",
          "name": "Manufacturer",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "ESTA",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "ESTA Manufacturer",
          "Enum": "RDMManufacturerId"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ManufacturerID",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ESTA Manufacturer ID"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DeviceModelID",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "This field identifies the Device Model ID of the Root Device or the Sub-Device"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ProductCategory>::`vftable'",
          "name": "ProductCategory",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMProductCategory"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SoftwareID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SoftwareVersionLabel",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB3B320": {
      "name": "Personality",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAE2F90",
      "description": "Personality",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PersonalityId",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "DmxFootPrint",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::RDM::Personality, class DB::DMXMode>>::`vftable'",
          "name": "DMXMode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FAE2F90": {
      "name": "FTRDMPersonalityCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB3B320",
      "parent": "0x7FF73C3FA6B0",
      "description": "Personality list",
      "properties": []
    },
    "0x7FF73C3FC880": {
      "name": "Notifications",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD0F5D0",
      "parent": "0x7FF73C3FA6B0",
      "description": "Ask Andrii",
      "properties": []
    },
    "0x7FF73FD23B40": {
      "name": "RDMSensorNotification",
      "base": "0x7FF73FD0F5D0",
      "child": "0x7FF73C3F71C0",
      "parent": "0x7FF73C3FC880",
      "description": "Ask Andrii",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "SensorOffset",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB124F0": {
      "name": "RDMParameterNotification",
      "base": "0x7FF73FD0F5D0",
      "child": "0x7FF73FD714E0",
      "parent": "0x7FF73C3FC880",
      "description": "Ask Andrii",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::RDM::PID>::`vftable'",
          "name": "PID",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMPID"
        }
      ]
    },
    "0x7FF73FD0F5D0": {
      "name": "RDMAbsentNotification",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD714E0",
      "parent": "0x7FF73C3FC880",
      "properties": []
    },
    "0x7FF73C3FF1F0": {
      "name": "Parameters",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBAA670",
      "parent": "0x7FF73C3FA6B0",
      "description": "Ask Andrii",
      "properties": []
    },
    "0x7FF73FBAA670": {
      "name": "Parameter",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FD714E0",
      "parent": "0x7FF73C3FF1F0",
      "description": "Ask Andrii",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "PID",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMPID"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ParameterType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMParameterType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::DataType>::`vftable'",
          "name": "DataType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMDataType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ParameterCommand>::`vftable'",
          "name": "Command",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMParameterCommand"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SensorUnit>::`vftable'",
          "name": "SensorUnit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSensorUnit"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SensorUnitPrefix>::`vftable'",
          "name": "SensorUnitPrefix",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSensorUnitPrefix"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MinValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MaxValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PDLSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DescriptionRecieved",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Poll",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserCreated",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NotSupported",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C2CF1D0": {
      "name": "FTMacros",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C27D380",
      "parent": "0x7FF73FCE6D10",
      "description": "A super container for 2 type macro containers: DMX and visual for the fixture type.",
      "properties": []
    },
    "0x7FF73C27D380": {
      "name": "FTMacro",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C3BC910",
      "parent": "0x7FF73C2CF1D0",
      "description": "Describes a set of values that need to be apllied to a fixture in order to trigger a special behavior (like striking the lamp).",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::FTMacro, class DB::ChannelFunction>>::`vftable'",
          "name": "ChannelFunction",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCA6630": {
      "name": "MacroDMXValue",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F847600",
      "description": "your description here",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::FTMacroDMXValue, class DB::DMXChannel>>::`vftable'",
          "name": "DMXChannel",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F847600": {
      "name": "MacroDMXStep",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCA6630",
      "parent": "0x7FF73C3BC910",
      "description": "your description here",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3BC910": {
      "name": "MacroDMX",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F847600",
      "parent": "0x7FF73C27D380",
      "description": "your description here",
      "properties": []
    },
    "0x7FF73FD14E80": {
      "name": "FTPresetValue",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F8553C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Absolute",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Relative",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Accel",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AccelType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SplineType"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Decel",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DecelType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SplineType"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Trans",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        }
      ]
    },
    "0x7FF73FB8FBD0": {
      "name": "FTPresetChannel",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD14E80",
      "parent": "0x7FF73F8553C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Attribute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Fade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Delay",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::SpeedPropertyValue>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SpeedMaster",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedMaster"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Phase",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        },
        {
          "CTypeName": "const DB::Property<class DB::ValueTPropertyValue>::`vftable'",
          "name": "Measure",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueNoneEmpty"
        }
      ]
    },
    "0x7FF73F8553C0": {
      "name": "FTPreset",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCD5B70",
      "description": "Data to auto create presets for a fixture type.",
      "properties": []
    },
    "0x7FF73FCD5B70": {
      "name": "FTPresetType",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F8553C0",
      "parent": "0x7FF73FC1FAE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FeatureGroup",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC1FAE0": {
      "name": "FTPresets",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCD5B70",
      "parent": "0x7FF73FCE6D10",
      "description": "Container for all auto-generated preset data inside a fixture type.",
      "properties": []
    },
    "0x7FF73FC745C0": {
      "name": "Revisions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAF6FE0",
      "parent": "0x7FF73FBD8D50",
      "description": "A container for all revisions of a fixture type.",
      "properties": []
    },
    "0x7FF73FAF6FE0": {
      "name": "Revision",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC745C0",
      "description": "A brief description of who edited the fixture type and why.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Text",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "Date",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ModifiedBy",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C33F4C0": {
      "name": "PsrExtraData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCECC80",
      "properties": []
    },
    "0x7FF73C368A90": {
      "name": "AttributeDefinitions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Defines the default attributes, features and preset types.",
      "properties": []
    },
    "0x7FF73C291D80": {
      "name": "Attributes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC144A0",
      "parent": "0x7FF73C368A90",
      "description": "A container for attributes.",
      "properties": []
    },
    "0x7FF73FC144A0": {
      "name": "Attribute",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C291D80",
      "description": "A group of subattributes which are mutually exclusive activation wise ( eg. GoboRot and GoboPos )",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Pretty",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode2<class DB::Attribute>>::`vftable'",
          "name": "MainAttribute",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Attribute, class DB::ActivationGroup>>::`vftable'",
          "name": "ActivationGroup",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::Attribute, class DB::Feature>>::`vftable'",
          "name": "Feature",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Special",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialAttribute"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SpecialIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PhysicalUnit>::`vftable'",
          "name": "PhysicalUnit",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhysicalUnit"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GeometryType>::`vftable'",
          "name": "GeometryType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GeometryType"
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0.000000,0.000000,0.000000,1.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Intensity",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "NaturalReadout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "EncoderResolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AttriebuteEncoderResolution"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LogChannels",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ChannelFunctions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Hide",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AttributeIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AttributeIndexOld",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FACD720": {
      "name": "ActivationGroups",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C402140",
      "parent": "0x7FF73C368A90",
      "description": "A container for activation groups.",
      "properties": []
    },
    "0x7FF73C402140": {
      "name": "ActivationGroup",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FACD720",
      "description": "A group of attributes which are to be activated together ( eg. Pan and Tilt )",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AttribCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::ActivationGroup, class DB::DeactivationGroup>>::`vftable'",
          "name": "DeactivationGroup",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCE1F90": {
      "name": "FeatureGroups",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C352FF0",
      "parent": "0x7FF73C368A90",
      "description": "A container for feature groups.",
      "properties": []
    },
    "0x7FF73C352FF0": {
      "name": "FeatureGroup",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C3FFBE0",
      "parent": "0x7FF73FCE1F90",
      "description": "Defines a group of features that logically belong together (eg. ICBF scheme).",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Pretty",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Selective",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetMode"
        }
      ]
    },
    "0x7FF73C3FFBE0": {
      "name": "Feature",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C352FF0",
      "description": "Defines a group of attributes for the encoder bar.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AttribCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LogChannels",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C274AD0": {
      "name": "DeactivationGroups",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F898D40",
      "parent": "0x7FF73C368A90",
      "description": "A container for exclusive groups.",
      "properties": []
    },
    "0x7FF73F898D40": {
      "name": "DeactivationGroup",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C274AD0",
      "description": "A group of activation groups which deactivate each other ( eg. Pan and Tilt )",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ActGroupsCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD123F0": {
      "name": "SpecialExecutor",
      "base": "0x7FF73FBD1770",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F897EF0",
      "properties": []
    },
    "0x7FF73F897EF0": {
      "name": "SpecialExecutors",
      "base": "0x7FF73F88E300",
      "child": "0x7FF73FD123F0",
      "parent": "0x7FF73C285080",
      "properties": []
    },
    "0x7FF73C285080": {
      "name": "SpecialExecutorPages",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F897EF0",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73FCAAC20": {
      "name": "Pages",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73F88E300",
      "parent": "0x7FF73C3591E0",
      "description": "Pool of executor pages.",
      "properties": []
    },
    "0x7FF73FBD1770": {
      "name": "Exec",
      "base": "0x7FF73FD6BB60",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F88E300",
      "description": "An executor represents some assignable hardkeys. Beside from that, it will proxy through all functionality to an assigned object.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Width",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Height",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsXKey",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Object",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecutorConfiguration",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TotalPrimaryAssignmentChanged",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TotalSecondaryAssignmentChanged",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD6BB60": {
      "name": "Proxy",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F88E300",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PrimaryAssignmentChanged",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SecondaryAssignmentChanged",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Exec>>::`vftable'",
          "name": "Exec",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F88E300": {
      "name": "Page",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73FD6BB60",
      "parent": "0x7FF73FCAAC20",
      "description": "A page of executors.",
      "properties": []
    },
    "0x7FF73C24B2F0": {
      "name": "Configurations",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73F83D190",
      "parent": "0x7FF73C3591E0",
      "properties": []
    },
    "0x7FF73F83D190": {
      "name": "Configuration",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73F857D80",
      "parent": "0x7FF73C24B2F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Width",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Height",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ExecConfigType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Sequence",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ExecConfigType"
        }
      ]
    },
    "0x7FF73F857D80": {
      "name": "ConfigEntry",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83D190",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Key",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EncoderClick",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EncoderRight",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EncoderLeft",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "Fader",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AssignmentFaderFunctions"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Column",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Row",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Width",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Height",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Fallback",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB1A2A0": {
      "name": "PsrFakeFixture",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB3A400",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyStage",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyFixtureType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MyIDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MyCID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyClass",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyLayer",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "MyPatch",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyPosX",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyPosY",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyPosZ",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyRotX",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyRotY",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MyRotZ",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Primary",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UseLeftOrRight"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OtherIDType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OtherCID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OtherName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "OtherStage",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OtherFixtureType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OtherClass",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OtherLayer",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "OtherPatch",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OtherPosX",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0.000m",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LeftSubfixtureIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RightSubfixtureIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RightTopLevelIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB3A400": {
      "name": "PsrFixtures",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB1A2A0",
      "parent": "0x7FF73FC41490",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Patch>>::`vftable'",
          "name": "PatchLeft",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Patch>>::`vftable'",
          "name": "PatchRight",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FixtureAmount",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TopLevelFixtureAmount",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C335F90": {
      "name": "UdpProtocol",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Out",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "In",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Interface",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "1.1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "PreferredIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB777C0": {
      "name": "OSCData",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD81A20",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "DestinationIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OSCMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Port",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Prefix",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DataPool",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "DataPool",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Page",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Page",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Fader",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Fader",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ExecutorKnob",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Encoder",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Key",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Key",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "FaderRange",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Receive",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Send",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ReceiveCommand",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SendCommand",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EchoInput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EchoOutput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD81A20": {
      "name": "OSCBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB777C0",
      "parent": "0x7FF73F821990",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableInput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableOutput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Interface",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "PreferredIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBCFAD0": {
      "name": "ShowSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "description": "Container for all showfile related settings.",
      "properties": []
    },
    "0x7FF73FD81FB0": {
      "name": "ShowDeletedData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "properties": []
    },
    "0x7FF73C40B730": {
      "name": "ShowMetaDataCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC07090",
      "parent": "0x7FF73FCEFBD0",
      "description": "Caches a ShowMetaDataFileCollect on a drive, so it can be displayed in a grid.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ShowDestination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC07090": {
      "name": "MetaFile",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C40B730",
      "description": "ShowMetaDataFile cache entry.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FileTime",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Path",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB70730": {
      "name": "ShowMetaData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowShowHistory",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C3ECA90": {
      "name": "Variables",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "*",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCE72A0": {
      "name": "TimecodeStatuses",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "properties": []
    },
    "0x7FF73FBEBE80": {
      "name": "SoundChannel",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB1A830",
      "properties": []
    },
    "0x7FF73FB1A830": {
      "name": "SoundChannels",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBEBE80",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB71F70": {
      "name": "SoundSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "description": "As the name implies, sound related settings.",
      "properties": []
    },
    "0x7FF73C331D30": {
      "name": "MidiSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "description": "All midi related settings.",
      "properties": []
    },
    "0x7FF73FC225D0": {
      "name": "GlobalSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "description": "Mixed settings which relate to all stations in the network.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Autosave>::`vftable'",
          "name": "AutosaveInterval",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AutoSaveMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoSaveCurrentTime",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoSaveStartTime",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AutoSaveCountdown",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ExportCachedObjectsOnShowSave",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Accepted3rdParty",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "EnumShowFileNameWhenDescriptionChanges",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TimecodeEventsRecordingfrom",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "All Users",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSingleUserRecord"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPDMX",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CS4 (Default)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DSCPCodesDMX"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPMANetData",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CS0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DSCPCodes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPNetworkUpdate",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CS0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DSCPCodes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPDMXProtocols",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CS0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DSCPCodes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPInOutProtocols",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "CS0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DSCPCodes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TTL",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default(8)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TTL"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DSCPConfiguration",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum Manet::DataNegotiationMode>::`vftable'",
          "name": "DataMergeDefaultMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Use Master",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DataNegotiationModeDefault"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "DataMergeDefaultTimeout",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "60",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DataMergeTimeout"
        }
      ]
    },
    "0x7FF73FB8B6B0": {
      "name": "DefaultPlaybackSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBCFAD0",
      "description": "Defines default playback timing and behaviour.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "2.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBDelay",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIBTransition",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "SCurve",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TransitionType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DelayToPhase",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoto",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "CueTiming",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimingMasterWithXAssert"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoBack",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "CueTiming",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimingMasterWithXAssert"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoFast",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimingMaster"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimingGoBackFast",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimingMaster"
        }
      ]
    },
    "0x7FF73F821990": {
      "name": "ShowData",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Container that represents a showfile.",
      "properties": [
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "MemoryLimit",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "10737418240",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ParameterCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3591E0": {
      "name": "Pool",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD1EEC0",
      "properties": []
    },
    "0x7FF73FD1EEC0": {
      "name": "DataPools",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C3591E0",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73FABF000": {
      "name": "StationSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41B220",
      "description": "Container for all settings which are relevant for the local station only.",
      "properties": []
    },
    "0x7FF73FC41A20": {
      "name": "ExtensionConfig",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C403D80",
      "properties": []
    },
    "0x7FF73C403D80": {
      "name": "ExtensionConfigurations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC41A20",
      "parent": "0x7FF73FABF000",
      "properties": []
    },
    "0x7FF73C295CC0": {
      "name": "DeskLightsSet",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C368500",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Master",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LedEncoder",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LedFader",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LedExec",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LedKeyboard",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "LedOther",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScreenBig",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScreenLetter",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScreenSmall",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScreenExternal",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "MasterAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "LedEncoderAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "LedFaderAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "LedExecAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "LedKeyboardAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "LedOtherAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "ScreenBigAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "ScreenLetterAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "ScreenSmallAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "ScreenExternalAddress",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DarkMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C368500": {
      "name": "DeskLightsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C295CC0",
      "parent": "0x7FF73FABF000",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LedFeedbackDuration",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "30",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F8911F0": {
      "name": "DefaultDisplayPosition",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCA7D40",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Open",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowCmdline",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowMainMenu",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEncoderBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowViewBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowScrollButton",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowHeadline",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsMaximized",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFeedback",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowCommandWingBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TurnViewBar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Dimension",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ViewBarSubtraction",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ViewBarAddition",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "X",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Y",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "W",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "H",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Monitor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScaleRatio",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCA7D40": {
      "name": "DefaultDisplayPositions",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73F8911F0",
      "parent": "0x7FF73C416B50",
      "properties": []
    },
    "0x7FF73C416B50": {
      "name": "DefaultDisplayPositionsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCA7D40",
      "parent": "0x7FF73FABF000",
      "properties": []
    },
    "0x7FF73FAF5B90": {
      "name": "DisplaySurfaces",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBD2F50",
      "parent": "0x7FF73FABF000",
      "description": "grandma2 thing. Container for all surfaces.",
      "properties": []
    },
    "0x7FF73FBD2F50": {
      "name": "DisplaySurface",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAF5B90",
      "description": "grandma2 thing. Defines the layout of fader and button modules.",
      "properties": []
    },
    "0x7FF73C3718F0": {
      "name": "TimeConfig",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FABF000",
      "description": "Defines time zone, daylight settings etc.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::TimeConfig::DaylightSavingState>::`vftable'",
          "name": "DaylightSavingState",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Hour",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Minute",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Second",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Day",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Time::Month>::`vftable'",
          "name": "Month",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Month"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Year",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Timezone",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TimezoneStr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Longitude",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "Latitude",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "LocalTime",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LocalTimeMS",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "OnPCSystemTimeOffset",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "YesterdayDawn",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "YesterdaySunrise",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "YesterdaySunset",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "YesterdayDusk",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TodayDawn",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TodaySunrise",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TodaySunset",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TodayDusk",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TomorrowDawn",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TomorrowSunrise",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TomorrowSunset",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "TomorrowDusk",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DaylightDayStart",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DaylightMonthStart",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Month"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DaylightDayEnd",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DaylightMonthEnd",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Month"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DaylightSavingEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoTimezone",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimeOfForwardTimeshift",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "TimeOfBackwardTimeshift",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "NtpTimeserverIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "NtpTimeserverName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TimeSyncMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ExternTimeSyncMode"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::TimeConfig::*)(void), {private: void DB::TimeConfig::SetClock(void), 0}>::`vftable'",
          "name": "SetClock",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C244980": {
      "name": "KeyRegistry",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCD7F40",
      "parent": "0x7FF73C41B220",
      "description": "All keys stored locally.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Key>>::`vftable'",
          "name": "Key",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCD7F40": {
      "name": "Key",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C244980",
      "description": "Keys are used for low level identification and access in the manet network.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Seed",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Crypto::Key128>::`vftable'",
          "name": "BSLock",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Crypto::Key128>::`vftable'",
          "name": "BSKey",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MAnet",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RemoteCall",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Terminal",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FCC8D70": {
      "name": "MAnetSocket",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "HostName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Session",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Location",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Showfile",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "NewShow",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "PrimaryIp",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Manet::IP4>::`vftable'",
          "name": "MulticastBase",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MultiCastBase"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Interface",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "-1,-1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Network::MasterPriority>::`vftable'",
          "name": "MasterPriority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MasterPriority"
        },
        {
          "CTypeName": "const DB::Property<enum Network::PUPriority>::`vftable'",
          "name": "PUPriority",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PUPriority"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Status",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostStatus"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Functional",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SessionManager",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Network::IP8>::`vftable'",
          "name": "RemoteIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableNetwork",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableRemotes",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableInvite",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnablesFTP",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PlaybackDataMerge",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisableTimeouts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnableRemoteHID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Stream::Version>::`vftable'",
          "name": "Version",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Stream::Branch>::`vftable'",
          "name": "Branch",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PacketLossSimulation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PacketLossRandomized",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HostStatusStable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Network::HostType>::`vftable'",
          "name": "HostType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostType"
        },
        {
          "CTypeName": "const DB::Property<enum Network::HostSubType>::`vftable'",
          "name": "HostSubType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "HostSubType"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SessionFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NetworkFilter"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SoftwareFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wrong Version",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NetworkFilter"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ExtraStatusInfo",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ExtraStatusInfo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedUpdateFile",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ExtraInitPackets",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCCFCE0": {
      "name": "CloudMember",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCC3B80",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SubType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "GlobalIP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LocalIP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Station",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Session",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Location",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCC3B80": {
      "name": "Cloud",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCCFCE0",
      "parent": "0x7FF73C41B220",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WorldServer",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WorldServerStatus",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OnOff"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Visible",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD5CF20": {
      "name": "NetworkStation",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD19D40",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "IP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Session",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Location",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ShowFile",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Status",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MasterPrio",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "VersionBig",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "VersionSmall",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "OnlineTime",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SessionIndex",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SessionSlot",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RemoteIP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Mask",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MinimumVersion",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FlowControlLevel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::SharedPtr<class Manet::HostDataExt>>::`vftable'",
          "name": "HostData",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NACKCountPer1m5m10m",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NACKCountTotal",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NackStat"
        }
      ]
    },
    "0x7FF73FD19D40": {
      "name": "NetworkStations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD5CF20",
      "parent": "0x7FF73FCC64E0",
      "properties": []
    },
    "0x7FF73FCC64E0": {
      "name": "HostTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD19D40",
      "parent": "0x7FF73FCC8D70",
      "properties": []
    },
    "0x7FF73FCC1720": {
      "name": "Session",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCD1920",
      "properties": []
    },
    "0x7FF73FCD1920": {
      "name": "Sessions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCC1720",
      "parent": "0x7FF73FCC8D70",
      "properties": []
    },
    "0x7FF73FC1E630": {
      "name": "TempNetworkInterfaces",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C34F5E0",
      "parent": "0x7FF73FC41490",
      "description": "Container for all network interfaces which the remote station have.",
      "properties": []
    },
    "0x7FF73C34F5E0": {
      "name": "TempNetworkRemoteInterfaceCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC86040",
      "parent": "0x7FF73FC1E630",
      "description": "Container for all network interfaces which the remote station have.",
      "properties": []
    },
    "0x7FF73FB1BF40": {
      "name": "IP",
      "base": "0x7FF73FD3C230",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC86040",
      "properties": []
    },
    "0x7FF73FC86040": {
      "name": "NetworkInterface",
      "base": "0x7FF73C41CC60",
      "child": "0x7FF73FB1BF40",
      "parent": "0x7FF73C34F5E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "RenewDHCP",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73FD3C230": {
      "name": "NetworkIP",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C41CC60",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "IP",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Mask",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C41CC60": {
      "name": "Interface",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD3C230",
      "parent": "0x7FF73F880D70",
      "description": "Represents a network interface card.",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DHCP",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Gateway",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MAC",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Link",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SpeedMbs",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "100_1000"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DHCPTimeout",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DNS",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F880D70": {
      "name": "Interfaces",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C41CC60",
      "parent": "0x7FF73C41B220",
      "description": "Container for all network interfaces which the local station have.",
      "properties": [
        {
          "CTypeName": "const DB::PropertyMethodT<bool (DB::NetworkInterfaceCollect::*)(void), {public: bool DB::NetworkInterfaceCollect::UpdateMyInterfaceList(void), 0}>::`vftable'",
          "name": "UpdateInterfaces",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::NetworkInterfaceCollect::*)(void), {public: void DB::NetworkInterfaceCollect::SetMyInterfaceList(void), 0}>::`vftable'",
          "name": "SetInterfaces",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FB781B0": {
      "name": "RDMFixtureTypes",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3FA6B0",
      "parent": "0x7FF73FD78E20",
      "description": "RDM fixture types",
      "properties": []
    },
    "0x7FF73FBC38E0": {
      "name": "RDMPort",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC26510",
      "parent": "0x7FF73FD018D0",
      "description": "RDM port",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "UniverseIndex",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD018D0": {
      "name": "RDMPorts",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FBC38E0",
      "parent": "0x7FF73FD78E20",
      "description": "RDM ports",
      "properties": []
    },
    "0x7FF73FD78E20": {
      "name": "RDMData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "description": "RDM datas",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Enable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC26510": {
      "name": "RDMFixture",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C3F4CC0",
      "parent": "0x7FF73FBC38E0",
      "description": "RDM fixture",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "UID",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "RDM Device UID"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ManufacturerId>::`vftable'",
          "name": "Manufacturer",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "ESTA",
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::PtrObjectNode<class DB::RDM::Fixture, class DB::RDM::FixtureType>>::`vftable'",
          "name": "RDMFixtureType",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DMXPersonality",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DMXStart",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Identify",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "-",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PanInvert",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TiltInvert",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DeviceHours",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DisplayInvert",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMPidValueDisplayInvert"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DisplayLevel",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LampState",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMLampState"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LampHours",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LampStrikes",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "LampOnMode",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMLampOnMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "DevicePowerCycles",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PanTiltSwap",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PowerState",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMPowerStateDefines"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ProxiedDevices",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ResetDevice",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMPidValueResetDevice"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FactoryDefaults",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Subfixture>>::`vftable'",
          "name": "Fixture",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Active",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C3F4CC0": {
      "name": "FakeValueSensor",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC26510",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "PresentValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Lowest",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "-",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Highest",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "-",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Recorded",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "-",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3F71C0": {
      "name": "ValueSensor",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Lowest",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Highest",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Recorded",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC44D80": {
      "name": "Value_REAL_TIME_CLOCK",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Year",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Month",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Day",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Hours",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Minute",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Second",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCE61F0": {
      "name": "Value_Default_Slot_Value",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Offset",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DefaultSlotValue",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBEC410": {
      "name": "Value_SLOT_INFO",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Offset",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SlotType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSlotType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SlotId>::`vftable'",
          "name": "SlotLabelID",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSlotId"
        }
      ]
    },
    "0x7FF73C3FDA10": {
      "name": "Value_SENSOR_DEFINITION",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SensorType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSensorType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SensorUnit>::`vftable'",
          "name": "Unit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSensorUnit"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RDM::SensorUnitPrefix>::`vftable'",
          "name": "Prefix",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMSensorUnitPrefix"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RangeMinValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UndefinedMin"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RangeMaxValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UndefinedMax"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "NormalMinValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UndefinedMin"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "NormalMaxValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UndefinedMax"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "LowestHighestDetectionSupported",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrueFalse"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "RecordValueSupported",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrueFalse"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD39870": {
      "name": "Value_DMX_PERSONALITY_DESCRIPTION",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "FootPrint",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3F35B0": {
      "name": "Value_ASCII",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3FAC40": {
      "name": "Value_SIGNED_DWORD",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCA1A80": {
      "name": "Value_UNSIGNED_DWORD",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCFED10": {
      "name": "Value_SIGNED_WORD",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC45BD0": {
      "name": "Value_UNSIGNED_WORD",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3F9CC0": {
      "name": "RDMValue_SIGNED_BYTE",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB934B0": {
      "name": "RDMValue_UNSIGNED_BYTE",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Value",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD1C760": {
      "name": "ValueBool",
      "base": "0x7FF73FD714E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TrueFalse"
        }
      ]
    },
    "0x7FF73FD714E0": {
      "name": "ValueBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBAA670",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::RDM::ValueBase::ThresholdOperator>::`vftable'",
          "name": "ThresholdOperator",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RDMNotificationThresholdOperator"
        }
      ]
    },
    "0x7FF73C2FE120": {
      "name": "HardwareConfiguration",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F8246F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ModuleVersion",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsWing",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F8246F0": {
      "name": "HardwareConfigurations",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C2FE120",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FCFD3A0": {
      "name": "HardwareIoConnectors",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2FE120",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxPortCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxPortDefaultDirection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "TimecodePortsIn",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "TimecodePortsOut",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DCIoPorts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DigitalIoPorts",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MidiCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F847B90": {
      "name": "FaderDefinition",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F883400",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SpecialExecutor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        }
      ]
    },
    "0x7FF73F883400": {
      "name": "FaderDefinitions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F847B90",
      "parent": "0x7FF73C2FE120",
      "properties": []
    },
    "0x7FF73FC37FC0": {
      "name": "LedDefinition",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBF9120",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Code",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "UNKNOWN",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "R",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "G",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "B",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SpecialExecutor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DefaultExecutor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "IsButton",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DeskLights",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "LedOther",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DeskLightChannel"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AnimationPos",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Disable",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBF9120": {
      "name": "LedDefinitions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC37FC0",
      "parent": "0x7FF73C2FE120",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HasBootAnimation",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "BootAnimationLength",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C412490": {
      "name": "Hardkey",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C283DD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Code",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "UNKNOWN",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SpecialExecutor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Disable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73C283DD0": {
      "name": "Hardkeys",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C412490",
      "parent": "0x7FF73C2FE120",
      "properties": []
    },
    "0x7FF73C385260": {
      "name": "Cmdline",
      "base": "0x7FF73FCEFBD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB01730",
      "properties": []
    },
    "0x7FF73FB01730": {
      "name": "Cmdlines",
      "base": "0x7FF73C360680",
      "child": "0x7FF73C385260",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73C360680": {
      "name": "Cmdlines",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCEFBD0",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73FCEFBD0": {
      "name": "Cmdline",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C360680",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Destination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class LinkedList::PtrNode<class DB::User, class DB::Cmdline, struct LinkedList::NonVListTraits>>::`vftable'",
          "name": "User",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class LinkedList::PtrNode<class DB::UserProfile, class DB::Cmdline, struct LinkedList::NonVListTraits>>::`vftable'",
          "name": "Profile",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::Cmdline::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::Cmdline::OnAction(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "Action",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:command"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::Cmdline::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::Cmdline::OnClearCmd(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "ClearCmd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::Cmdline::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::Cmdline::OnRefreshMetaData(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "RefreshMetaData",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::DMXReadoutMode>::`vftable'",
          "name": "DMXReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Percent",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "EditObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CmdText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LastCommand",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MaxStep",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<enum DB::ExecutorFixation::Status (DB::Cmdline::*)(class DB::Exec *), {public: enum DB::ExecutorFixation::Status DB::Cmdline::IsFixed(class DB::Exec *), 0, 0, 0}>::`vftable'",
          "name": "IsFixed",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<class DB::Object * (DB::Cmdline::*)(void)const, {public: class DB::Object * DB::Cmdline::GetSelectedObject(void)const, 0, 0, 0}>::`vftable'",
          "name": "GetSelectedObject",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73F881CF0": {
      "name": "EncoderDefinition",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FAFCE20",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::EncoderDefinition::EncoderType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Executor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Key",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "UNKNOWN",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Resolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "24",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Linked",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "-1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "SpecialExecutor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        }
      ]
    },
    "0x7FF73FAFCE20": {
      "name": "EncoderDefinitions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F881CF0",
      "parent": "0x7FF73C2FE120",
      "properties": []
    },
    "0x7FF73FC736A0": {
      "name": "CueUpdate",
      "base": "0x7FF73FAF3E20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2642F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SequenceNo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SequenceName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TargetCue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TargetPart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TargetName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C2642F0": {
      "name": "CueUpdates",
      "base": "0x7FF73C2EF780",
      "child": "0x7FF73FC736A0",
      "parent": "0x7FF73FCEFBD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ProgUpdateCueMode>::`vftable'",
          "name": "FilterMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgUpdateCueMode"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned __int64, struct Container::CollectPolicies<unsigned __int64>>>::`vftable'",
          "name": "ObjectList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ChangeCount",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD1C100": {
      "name": "PresetUpdate",
      "base": "0x7FF73FAF3E20",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD47CC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetPoolNo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PresetPoolName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetNo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PresetName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD47CC0": {
      "name": "PresetUpdates",
      "base": "0x7FF73C2EF780",
      "child": "0x7FF73FD1C100",
      "parent": "0x7FF73FCEFBD0",
      "properties": []
    },
    "0x7FF73FAF3E20": {
      "name": "ProgUpdate",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2EF780",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DataPoolNo",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DataPoolName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Parent",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Number",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C2EF780": {
      "name": "ProgUpdateCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FAF3E20",
      "parent": "0x7FF73FCEFBD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned __int64, struct Container::CollectPolicies<unsigned __int64>>>::`vftable'",
          "name": "ObjectList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FADFC40": {
      "name": "VKValue",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F8622B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Release",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Press",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DoublePress",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Hold",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Modifier",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "FirstToken",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "LastObjectToken",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "LastCommandToken",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyExecutionType>::`vftable'",
          "name": "Execution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyExecutionType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::KeyCodes>::`vftable'",
          "name": "RedirectKeyCode",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "KeyboardCodes"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RedirectChar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DisplayText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithShift",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithCtrl",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithAlt",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AlwaysNumericRedirect",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Remember",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "PressSyntaxState",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SyntaxState"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ReleaseSyntaxState",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SyntaxState"
        }
      ]
    },
    "0x7FF73F8622B0": {
      "name": "VirtualKey",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FADFC40",
      "parent": "0x7FF73FB15710",
      "description": "Describes the behavior of a virtual hardware key.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKeyCode>::`vftable'",
          "name": "Code",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "UNKNOWN",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VirtualKeyCode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::KeyCodes>::`vftable'",
          "name": "KeyCode",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "KeyboardCodes"
        },
        {
          "CTypeName": "const DB::Property<enum DB::VirtualKey::SpecialCycle>::`vftable'",
          "name": "SpecialCycle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialCycle"
        },
        {
          "CTypeName": "const DB::Property<enum DB::KeyCodes>::`vftable'",
          "name": "RedirectKeyCode",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "KeyboardCodes"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "RedirectChar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Toggle",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsFader",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NumericRedirect",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AlwaysNumericRedirect",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithShift",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithCtrl",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedirectWithAlt",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CanBeProcessedWhileModal",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UseKeyStatusForLED",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "HelpTopic",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::Token>::`vftable'",
          "name": "LedToken",
          "TypeNameStr": "Token",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB15710": {
      "name": "VirtualKeys",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F8622B0",
      "parent": "0x7FF73FC41490",
      "description": "A container for all virtual hardkey definitions.",
      "properties": []
    },
    "0x7FF73FB7FF70": {
      "name": "Undo",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB962D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "UIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "ElapsedTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Datum>::`vftable'",
          "name": "SessionTime",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB962D0": {
      "name": "Undos",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB7FF70",
      "parent": "0x7FF73FCEFBD0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UndoIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB529F0": {
      "name": "MAPacket",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F85D2C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ID",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Tag",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "HostTypes",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Date",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Destination",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DestinationWin",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DestinationMac",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Execute",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Size",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ZipSize",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Sha256sum",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Signature",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Signature2",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ReleaseFileVersion",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73F85D2C0": {
      "name": "ReleaseFile",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB529F0",
      "parent": "0x7FF73FC41490",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Description",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Date",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ReleaseFileVersion",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "haveUpdate",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F89D7B0": {
      "name": "Collection",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned int, struct Container::CollectPolicies<unsigned int>>>::`vftable'",
          "name": "IndexesSorted",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "BaseObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C31C590": {
      "name": "SequenceSelection",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned __int64, struct Container::CollectPolicies<unsigned __int64>>>::`vftable'",
          "name": "Handles",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C34FB70": {
      "name": "Masters",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F83C210",
      "parent": "0x7FF73F821990",
      "description": "Contains all master pools.",
      "properties": []
    },
    "0x7FF73FC2A1E0": {
      "name": "MasterPoolTiming",
      "base": "0x7FF73F83C210",
      "child": "0x7FF73C37AFC0",
      "parent": "0x7FF73C34FB70",
      "properties": []
    },
    "0x7FF73C37AFC0": {
      "name": "MasterTiming",
      "base": "0x7FF73FD3CCF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83C210",
      "properties": []
    },
    "0x7FF73F881760": {
      "name": "MasterPoolPlayback",
      "base": "0x7FF73F83C210",
      "child": "0x7FF73F878AF0",
      "parent": "0x7FF73C34FB70",
      "properties": []
    },
    "0x7FF73F878AF0": {
      "name": "MasterPlayback",
      "base": "0x7FF73FD3CCF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83C210",
      "properties": []
    },
    "0x7FF73C341F50": {
      "name": "MasterPoolGrand",
      "base": "0x7FF73F83C210",
      "child": "0x7FF73FBDA000",
      "parent": "0x7FF73C34FB70",
      "properties": []
    },
    "0x7FF73FBDA000": {
      "name": "MasterGrand",
      "base": "0x7FF73FD3CCF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83C210",
      "properties": []
    },
    "0x7FF73C261860": {
      "name": "MasterPoolSelected",
      "base": "0x7FF73F83C210",
      "child": "0x7FF73F84E8C0",
      "parent": "0x7FF73C34FB70",
      "properties": []
    },
    "0x7FF73F84E8C0": {
      "name": "MasterSelected",
      "base": "0x7FF73FD3CCF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83C210",
      "properties": []
    },
    "0x7FF73F83C210": {
      "name": "MasterPool",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FD3CCF0",
      "parent": "0x7FF73C34FB70",
      "description": "A container for masters of one kind.",
      "properties": []
    },
    "0x7FF73FD3CCF0": {
      "name": "Master",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F83C210",
      "description": "Controls several global parameters like grandmaster dimming etc.",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "NormedValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FaderEnable",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Toggle",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FaderEnable"
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "SpeedScale",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "100",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedScale"
        }
      ]
    },
    "0x7FF73FBF0F70": {
      "name": "LoadedPlaybacks",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73FABEA70": {
      "name": "MyRunningSoundFiles",
      "base": "0x7FF73FB63960",
      "child": "0x7FF73F856340",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73FB63960": {
      "name": "RunningSoundFiles",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73F856340",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73F879080": {
      "name": "MyRunningTimers",
      "base": "0x7FF73C28D440",
      "child": "0x7FF73FB0B460",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73C28D440": {
      "name": "RunningTimers",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73FB0B460",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73FB18B90": {
      "name": "MyRunningPresets",
      "base": "0x7FF73F837360",
      "child": "0x7FF73C380D30",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73F837360": {
      "name": "RunningPresets",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73C380D30",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73FCBF220": {
      "name": "MyRunningTimecodes",
      "base": "0x7FF73C3204C0",
      "child": "0x7FF73C41BC10",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73C3204C0": {
      "name": "RunningTimecodes",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73C41BC10",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73F9AC520": {
      "name": "MyRunningMacros",
      "base": "0x7FF73C37D1F0",
      "child": "0x7FF73FBC7820",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73C37D1F0": {
      "name": "RunningMacros",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73FBC7820",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73C31B740": {
      "name": "MyRunningSequences",
      "base": "0x7FF73FD12EB0",
      "child": "0x7FF73C308CC0",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73FD12EB0": {
      "name": "RunningSequences",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73C308CC0",
      "parent": "0x7FF73C341560",
      "properties": []
    },
    "0x7FF73C341560": {
      "name": "RunningPlaybacksCollect",
      "base": "0x7FF73FAC3270",
      "child": "0x7FF73FAC3270",
      "parent": "0x7FF73FC41490",
      "properties": []
    },
    "0x7FF73FAC3270": {
      "name": "RunningPlaybacks",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F89F1F0": {
      "name": "UserAttribute",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB504F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "NaturalReadout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutModeDefault"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "EncoderResolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AttriebuteEncoderResolutionDefault"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "EncoderPressFactor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFactor"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IgnoreChannelFunctions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        }
      ]
    },
    "0x7FF73FB504F0": {
      "name": "UserAttributePreferences",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F89F1F0",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "DualEncoderFactor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Div5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFactor"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "DualEncoderPressFactor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Div25",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFactor"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "TimeLayerResolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Coarse",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AttriebuteEncoderResolutionSmall"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "PhaserLayerResolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Coarse",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AttriebuteEncoderResolutionSmall"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LinkResolution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderLinkResolution"
        }
      ]
    },
    "0x7FF73C401BB0": {
      "name": "SmartViewPool",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F884320",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73C321440": {
      "name": "UserEnvironment",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB5ABE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ActiveSel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SelectedSelection"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ActiveSelIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FirstStep",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LastStep",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "MultiStepSelected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllStepSelected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AlignMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignTransition",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TransitionMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRotYZ",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRotXZ",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AlignRotXY",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AlignCombined",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AlignMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::StepMask>::`vftable'",
          "name": "StepMask",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "StepMaskFirst",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "StepMaskLast",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ProgrammerPart>>::`vftable'",
          "name": "ProgPart",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Sync",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SingleStep",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Freeze",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if freeze is on",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Selection>>::`vftable'",
          "name": "CurrentSelectionRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB5ABE0": {
      "name": "Environments",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C321440",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ActiveEnvironment",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SelectedEnvironment"
        }
      ]
    },
    "0x7FF73FD00E10": {
      "name": "Users",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FC33890",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FC33890": {
      "name": "User",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD00E10",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Crypto::SHA256>::`vftable'",
          "name": "Password",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::UserProfile>>::`vftable'",
          "name": "Profile",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ScreenConfig>>::`vftable'",
          "name": "ScreenConfig",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Rights",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Admin",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UserRights"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Language",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "en",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::KeyboardLayout>>::`vftable'",
          "name": "Keyboard",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "en",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to a currently selected keyboard layout"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "PrivacyPolicy",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "WebRemoteLogin",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBE6E90": {
      "name": "UserProfiles",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD32B00",
      "parent": "0x7FF73F821990",
      "description": "Container for all user profiles.",
      "properties": []
    },
    "0x7FF73FD32B00": {
      "name": "UserProfile",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBE6E90",
      "description": "Contains all user related data and settings.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Scribble>>::`vftable'",
          "name": "Scribble",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::DMXReadoutMode>::`vftable'",
          "name": "DMXReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Dec8",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DMXReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyValue>::`vftable'",
          "name": "NormalValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::DimmerWheelResolution>::`vftable'",
          "name": "WheelResolution",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DimmerWheelResolution"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WheelMode>::`vftable'",
          "name": "WheelMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Additive",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WheelMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VKExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if virtual keyboard is expanded",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SEExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if scribble editor is expanded",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NEExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if notes editor is expanded",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TextInputEditor>::`vftable'",
          "name": "TextInputAuxEditor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TextInputEditor"
        },
        {
          "CTypeName": "const DB::Property<enum DB::TextInputEditor>::`vftable'",
          "name": "TextInputSmallScreenTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TextInputEditor"
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ScribbleColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "default": "0xFFFFFFFF",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScribbleWidthScale",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::DataPool>>::`vftable'",
          "name": "SelectedDataPool",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DefaultToken",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderLink>::`vftable'",
          "name": "EncoderLinkValues",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Single",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderLinkValues"
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderLink>::`vftable'",
          "name": "EncoderLinkTiming",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Single",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderLink"
        },
        {
          "CTypeName": "const DB::Property<enum DB::EncoderLink>::`vftable'",
          "name": "EncoderLinkPhaser",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Single",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderLinkPhaser"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "KnobUIStyle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Rotation",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderUIStyle"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "EncoderUIStyle",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Rotation",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderUIStyle"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ActiveOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MultiStepOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PreciseEdit",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenEncoder",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TimeKeyTarget",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Cue",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeKeyTarget"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ShowUserEncoder",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TCSlot",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeSlotShort"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectedPage",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ValueReadoutMode>::`vftable'",
          "name": "ValueReadout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Percent",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueReadoutModeNatural"
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpeedReadoutMode>::`vftable'",
          "name": "SpeedReadout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "BPM",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpeedReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::PresetReadoutMode>::`vftable'",
          "name": "PresetReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Preset",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetReadoutMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "Layer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Absolute",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgLayer"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "ProgrammingLayer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgrammingLayer"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "LastValueLayer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgrammingLayer"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "LastPhaserLayer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgrammingLayer"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "LastStepLayer",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgrammingLayer"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgLayer>::`vftable'",
          "name": "ProgrammingLayerGroup",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgrammingLayerGroup"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "HelpPopupZoomFactor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ZoomFactor"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "OverlayFade",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "250",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::TimeDisplayFormat>::`vftable'",
          "name": "TimeReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Dec8",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormat"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FrameReadout",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormat"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ColorDisplayMode>::`vftable'",
          "name": "ColorReadout",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "RGB",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorDisplayMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OopsViews",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OopsProgrammer",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "OopsSelection",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CreateOops",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "OopsConfirmation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Never",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "OopsConfirmation"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MirrorSpecialExecutorPages",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowAppearanceInCueInput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowSettingsInEditors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class LinkedList::PtrList<class DB::UserProfile, class DB::User, struct LinkedList::NonVListTraits>>::`vftable'",
          "name": "Users",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class LinkedList::PtrList<class DB::UserProfile, class DB::Cmdline, struct LinkedList::NonVListTraits>>::`vftable'",
          "name": "Cmdlines",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LastOpenRemotesTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LastOpenDmxProtocolsTab",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ProgUpdateCueMode>::`vftable'",
          "name": "ProgUpdateCueFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ProgUpdateCueMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SingleDigitInput",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ResolveExecutorAssignments",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PreviewVariables",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DefaultGroupMasterMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GroupMasterMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigSequence",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultSequence",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigMacro",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultMacro",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigView",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultView",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigWorld",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultWorld",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigGroup",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultGroup",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigPreset",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultPreset",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigPlugin",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultPlugin",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigUser",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultUser",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigSound",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultSound",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigScreenConfig",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultScreenConfig",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigTimer",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultTimer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigMaster",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultMaster",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigSpeedMaster",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultSpeedMaster",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecConfig>>::`vftable'",
          "name": "ExecConfigPlaybackMaster",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Configurations.DefaultPlaybackMaster",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowConnectors",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LoadFixtureLibraryMA",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LoadFixtureLibraryUser",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LoadFixtureLibraryShare",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxTesterAddressMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Universe",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxTesterAddressMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DmxTesterRetainMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Release",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::DmxTesterMode>::`vftable'",
          "name": "DmxTesterMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxTesterMode"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DmxTesterTestValue",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "-1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridCursorMovement>::`vftable'",
          "name": "MoveGridCursor",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridCursorMovement"
        },
        {
          "CTypeName": "const DB::Property<union DB::EncoderLinkStatus>::`vftable'",
          "name": "EncoderLinkStatusValues",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<union DB::EncoderLinkStatus>::`vftable'",
          "name": "EncoderLinkStatusTiming",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<union DB::EncoderLinkStatus>::`vftable'",
          "name": "EncoderLinkStatusPhaser",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<union DB::EncoderLinkStatus>::`vftable'",
          "name": "EncoderLinkStatusPhaserBar",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ScreenshotEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateMenuPresetOptionsExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateMenuCueOptionsExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NotificationsEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::NotificationType>::`vftable'",
          "name": "NotificationType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NotificationType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SystemFpsLimit",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC90D20": {
      "name": "ExecutorFixation",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD52050": {
      "name": "PluginPreferences",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FACBE10",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayIndex"
        }
      ]
    },
    "0x7FF73FACBE10": {
      "name": "PluginPreferencesCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD52050",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD0B0F0": {
      "name": "AtFilter",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C321440",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::AttributMask>::`vftable'",
          "name": "Attributes",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Absolute",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Relative",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Timing",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Phaser",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Active",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoReset",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "FilterRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "DefaultFilterRef",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB43F50": {
      "name": "AutoCreateSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB2F190": {
      "name": "StorePreferences",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD32B00",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ChannelFilterMode>::`vftable'",
          "name": "ChannelFilter",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Active",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Channel Filter Mode for next store operation",
          "Enum": "ChannelFilterMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreLook",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreMode>::`vftable'",
          "name": "StoreMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Active",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store Mode for next store operation",
          "Enum": "StoremodeRadio"
        },
        {
          "CTypeName": "const DB::Property<enum DB::UpdateMode>::`vftable'",
          "name": "UpdateModePresets",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update Mode for next update operation",
          "Enum": "Update"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreSource>::`vftable'",
          "name": "StoreSource",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Programmer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store Source for next store operation",
          "Enum": "StoreSource"
        },
        {
          "CTypeName": "const DB::Property<enum DB::UpdateMode>::`vftable'",
          "name": "UpdateModeCues",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update Mode for next update operation",
          "Enum": "Update"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreEmbedded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store embedded option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreMatricks",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store matricks option for presets/groups/recipes",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StoreScreenshot",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetInputFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store preset input filter option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateInputFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update preset input filter option for presets",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UpdateCueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Update cue only option",
          "Enum": "CueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "KeepActivation",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Keep activation after store option",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store cue only option",
          "Enum": "CueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "TrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store tracking shield option",
          "Enum": "TrackingShield"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridMergeMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Append X",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Store grid merge option",
          "Enum": "GridMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "PresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetModeDefault"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "UpdatePresetMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PresetModeDefault"
        },
        {
          "CTypeName": "const DB::Property<enum DB::StoreMode>::`vftable'",
          "name": "CopyMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Ask",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy Mode for next store operation",
          "Enum": "StoremodeRadio"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue only option",
          "Enum": "CopyCueOnly"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyTrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy tracking shield option",
          "Enum": "TrackingShield"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueSrc",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Content",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue src option",
          "Enum": "CueCopySrc"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueDst",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "AllowTracked",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue dst option",
          "Enum": "CueCopyDst"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CopyCueDstMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Overwrite",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Copy cue dst mode option",
          "Enum": "CueCopyDstMode"
        }
      ]
    },
    "0x7FF73FAC3800": {
      "name": "StorePreferencesGroup",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::GridCursorMovement>::`vftable'",
          "name": "MoveGridCursor1D",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridCursorMovementGroup"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GridCursorMovement>::`vftable'",
          "name": "MoveGridCursor2D3D",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridCursorMovementGroup"
        }
      ]
    },
    "0x7FF73C37C270": {
      "name": "StorePreferencesExec",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": []
    },
    "0x7FF73C265D30": {
      "name": "StorePreferencesSequence",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB2F190",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "MIBMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "BestLate",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibMode"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBFade",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibTiming"
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "MIBDelay",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibTiming"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MIBMultiStep",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Running",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MibMultiStep"
        }
      ]
    },
    "0x7FF73F9A8A20": {
      "name": "RenderQualities",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C286530",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73C286530": {
      "name": "RenderQuality",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::MultiLedBeamMode>::`vftable'",
          "name": "MultiLedBeamMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MultiLedBeamMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::BeamMode>::`vftable'",
          "name": "BeamMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BeamMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::BeamMode>::`vftable'",
          "name": "BeamModePatch",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BeamModePatch"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::ShadowMode>::`vftable'",
          "name": "ShadowMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShadowMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::GoboMode>::`vftable'",
          "name": "GoboMode",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GoboMode"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResolutionScale3D",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ResolutionScaleLight",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "DilutionScale",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "NativeColors",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::FalloffType>::`vftable'",
          "name": "DilutionType",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FalloffType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::BodyQuality3d>::`vftable'",
          "name": "BodyQuality3d",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BodyQuality3d"
        },
        {
          "CTypeName": "const DB::Property<enum DB::RenderQuality::BodyQuality3d>::`vftable'",
          "name": "BodyQuality3dPatch",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BodyQuality3dPatch"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "HazeParticleQuality",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "50.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "HazeScale",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "100.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "HazeParticleSize",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "50.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "HazeBlend",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "90.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "HazeAnimationSpeed",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "15.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "HazeLayers",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "4",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "HazeEnabled",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F8A21B0": {
      "name": "KeyModifier",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB8C0A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Modifier",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ValueShifted",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to if a shift key is pressed"
        }
      ]
    },
    "0x7FF73FB8C0A0": {
      "name": "KeyboardKey",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F8A21B0",
      "parent": "0x7FF73F83F6B0",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::KeyCodes>::`vftable'",
          "name": "KeyCode",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A keyboard key code that is supposed to be translated",
          "Enum": "KeyboardCodes"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ValueShifted",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to if a shift key is pressed"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ValueRightAlted",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A string value that a key code should be translated to if a right alt key is pressed"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "KeyIsModifier",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73F83F6B0": {
      "name": "KeyboardLayout",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FB8C0A0",
      "parent": "0x7FF73FAC07E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ShortName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A short name for the keyboard translation (layout) table (e.g. 'en', 'de', 'ua', 'ru'...)"
        }
      ]
    },
    "0x7FF73FAC07E0": {
      "name": "KeyboardLayouts",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F83F6B0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB24A10": {
      "name": "MultiRowGridSelection",
      "base": "0x7FF73C31D240",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FB80EF0": {
      "name": "OopsGridSelection",
      "base": "0x7FF73C31D240",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FCF6770": {
      "name": "SingleRowGridSelection",
      "base": "0x7FF73FACB420",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FD15410": {
      "name": "SingleCellGridSelection",
      "base": "0x7FF73FACB420",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73F836DD0": {
      "name": "ColumnGridSelection3dLivePatch",
      "base": "0x7FF73FCA4330",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FCA4330": {
      "name": "ColumnGridSelection3d",
      "base": "0x7FF73C31D240",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C31D240": {
      "name": "ColumnGridSelection",
      "base": "0x7FF73FACB420",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C2662C0": {
      "name": "FlexGridSelection",
      "base": "0x7FF73FACB420",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C3D8180": {
      "name": "UnassignedTagGridFilter",
      "base": "0x7FF73C290600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C36E3A0": {
      "name": "AtFilterSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::AtFilterSettings::LineHeight>::`vftable'",
          "name": "LineHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ButtonHeight"
        }
      ]
    },
    "0x7FF73F886620": {
      "name": "SoftwareGridFilter",
      "base": "0x7FF73F84F840",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBAB4C0": {
      "name": "SessionGridFilter",
      "base": "0x7FF73F84F840",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73F84F840": {
      "name": "NetworkGridFilter",
      "base": "0x7FF73C290600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3E7D70": {
      "name": "PatchRowFilter",
      "base": "0x7FF73C2FF910",
      "child": "0x7FF73FD7F5E0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB6B550": {
      "name": "PatchLiveSettings",
      "base": "0x7FF73FCD79B0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCA99D0",
      "properties": []
    },
    "0x7FF73FCB7630": {
      "name": "PatchEditorSettings",
      "base": "0x7FF73FCD79B0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCA99D0",
      "properties": []
    },
    "0x7FF73FCD79B0": {
      "name": "PatchSettings",
      "base": "0x7FF73C3450A0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCA99D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFilterToolbar",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AllowExtendedCondensed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowSplitView",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Show3DPositions",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FlatFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FilterOutDMXLess",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FilterObj>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Default.Filters.Patch",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectedStage",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FilterMaskValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SplitFrameSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "200",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SplitFrameSize3d",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "800",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectedSplitView",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::PatchSettings::*)(void), {[thunk]: DB::PatchSettings::`vcall'{0,{flat}}, 0}>::`vftable'",
          "name": "CheckColumnCondensedFilter",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD7F5E0": {
      "name": "GridPatchContentFilterItem",
      "base": "0x7FF73C3292C0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2FF910",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PopupFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C2FF910": {
      "name": "GridPatchContentFilter",
      "base": "0x7FF73FD78300",
      "child": "0x7FF73FD7F5E0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3292C0": {
      "name": "GridObjectContentFilterItem",
      "base": "0x7FF73C385C50",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD78300",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Column",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PopupFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD78300": {
      "name": "GridObjectContentFilter",
      "base": "0x7FF73FC3E7A0",
      "child": "0x7FF73C3292C0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FBD57A0": {
      "name": "TabRegistry",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Registry for last selected tabs in different places",
      "properties": []
    },
    "0x7FF73C27BB40": {
      "name": "WindowInfoSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowTabs",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowInfoTab>::`vftable'",
          "name": "RememberedTab",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "WindowInfoTab"
        },
        {
          "CTypeName": "const DB::Property<enum DB::InfoLinkMode>::`vftable'",
          "name": "LinkMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "InfoLinkMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::InfoWindowMode>::`vftable'",
          "name": "WindowMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "InfoWindowMode"
        },
        {
          "CTypeName": "const DB::Property<enum DB::InfoAppearanceMode>::`vftable'",
          "name": "AppearanceMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "InfoAppearanceMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UseTargetAppearance",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EditMode",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowEmpty",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoScroll",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "NoteLabelColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TargetName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ChildName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowInfoSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowInfoSettings::ActionChangeWindowMode(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangeWindowMode",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (DB::WindowInfoSettings::*)(class DB::Object *, class DB::SetParam &), {public: bool DB::WindowInfoSettings::ActionLinkMode(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangeLinkMode",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73C381FE0": {
      "name": "WindowInfoSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C27BB40",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB68200": {
      "name": "GridLine",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCEB7D0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Visible",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Size",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCEB7D0": {
      "name": "GridColumnConfiguration",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FB68200",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "Property<Container::HashFlatSet<DB::GridLine, Container::MemPtrFlatHashPolicies<DB::GridLine, 0>>>::`vftable'",
          "name": "DefaultColumns",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllowAddContent",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllowAddNewline",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "AllowMergeChildren",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "UserChangedSorting",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllColumnsVisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllColumnsInvisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InitialWhiteFilter",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (DB::GridColumnConfiguration::*)(unsigned int, unsigned int, unsigned __int64, unsigned __int64), {public: bool DB::GridColumnConfiguration::MoveColumns(unsigned int, unsigned int, unsigned __int64, unsigned __int64), 0}>::`vftable'",
          "name": "MoveColumns",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FB4E4D0": {
      "name": "GridColumnRegistry",
      "base": "0x7FF73C411AA0",
      "child": "0x7FF73FCEB7D0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C411AA0": {
      "name": "GridColumnConfigurationCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCEB7D0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB27FC0": {
      "name": "GridBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C3450A0": {
      "name": "GridSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Transposed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AdjustColumns",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "NoFixedColumns",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MergeCells",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SheetSettingsMergeMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ForceExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RememberSorting",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "RowHeightFactor",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ColumnsCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "20",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ContentFilterType",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "GridContentFilter",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "GridColumnConfigurationType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::GridColumnConfiguration>>::`vftable'",
          "name": "SelectedColumnConfiguration",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::SheetSettings::*)(void), {public: void DB::SheetSettings::SetAllVisible(void), 0}>::`vftable'",
          "name": "SetAllVisible",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::SheetSettings::*)(void), {public: void DB::SheetSettings::SetAllInvisible(void), 0}>::`vftable'",
          "name": "SetAllInvisible",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (DB::SheetSettings::*)(void), {public: void DB::SheetSettings::ResetColumnOrder(void), 0}>::`vftable'",
          "name": "ResetColumnOrder",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FB5E330": {
      "name": "GridContentFilterSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Position>::`vftable'",
          "name": "FilterDialogPosition",
          "TypeNameStr": "2Ints",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Dimension>::`vftable'",
          "name": "FilterDialogSize",
          "TypeNameStr": "2Ints",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C385C50": {
      "name": "GridContentFilterItem",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC3E7A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "Columns",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Equal",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC3E7A0": {
      "name": "GridContentFilter",
      "base": "0x7FF73C290600",
      "child": "0x7FF73C385C50",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::GridContentFilter::Mode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "And",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridContentFilterMode"
        }
      ]
    },
    "0x7FF73C290600": {
      "name": "GridContentFilterBase",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FD70690": {
      "name": "WindowScrollPositions",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD46E70",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::ScrollPos>::`vftable'",
          "name": "ScrollH",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0;0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::ScrollPos>::`vftable'",
          "name": "ScrollV",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0;0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3C7B20": {
      "name": "WindowSoundSettings",
      "base": "0x7FF73C28AAD0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ActiveDisplay",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Wave",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ActiveDisplay"
        }
      ]
    },
    "0x7FF73C261DF0": {
      "name": "WindowAppearance",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD46E70",
      "properties": [
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "WindowColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "default": "ffffffff",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the color for a window."
        }
      ]
    },
    "0x7FF73C28AAD0": {
      "name": "WindowSettings",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "PreferenceHandle",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::WindowSettings::FontSizes>::`vftable'",
          "name": "FontSize",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ShowTitleBar",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "VisibleTitlebuttons",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "RequestDefaultTitlebuttons",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TitleButtonMask",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73C401620": {
      "name": "WindowSettingsCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C28AAD0",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCA99D0": {
      "name": "TemporaryWindowSettings",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C28AAD0",
      "parent": "0x7FF73FD32B00",
      "properties": []
    },
    "0x7FF73FB4DAE0": {
      "name": "GridColumnFilterCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3C6880",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC2CCD0": {
      "name": "GridColumnBitFilter",
      "base": "0x7FF73C3C6880",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Mask32>::`vftable'",
          "name": "Bits",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3267D0": {
      "name": "GridColumnNamesFilter",
      "base": "0x7FF73C3C6880",
      "child": "0x7FF73FB41320",
      "parent": "0x7FF73FB4DAE0",
      "properties": []
    },
    "0x7FF73C3C6880": {
      "name": "GridColumnFilter",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB4DAE0",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Inclusive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FB41320": {
      "name": "GridColumn",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C3C6880",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Visible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FACB420": {
      "name": "GridSelection",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct DB::GridSelection::SimpleCell, struct Container::CollectPolicies<struct DB::GridSelection::SimpleCell>>>::`vftable'",
          "name": "SelectedItems",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C339A70": {
      "name": "GridData",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73C407590": {
      "name": "GestureManager",
      "base": "0x7FF73FB80960",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD6DFF0",
      "properties": []
    },
    "0x7FF73FD28AE0": {
      "name": "Touch",
      "base": "0x7FF73FB80960",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD6DFF0",
      "properties": []
    },
    "0x7FF73FB6E780": {
      "name": "MouseCollect",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FD02720",
      "parent": "0x7FF73FD6DFF0",
      "properties": []
    },
    "0x7FF73FD02720": {
      "name": "Mouse",
      "base": "0x7FF73FB80960",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB6E780",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Position>::`vftable'",
          "name": "AbsPos",
          "TypeNameStr": "2Ints",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "DisplayIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Cursor",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Visible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "AutoHideInterval",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C4083E0": {
      "name": "Keyboard",
      "base": "0x7FF73FB80960",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD6DFF0",
      "properties": []
    },
    "0x7FF73FB80960": {
      "name": "Device",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD6DFF0",
      "properties": []
    },
    "0x7FF73FD6DFF0": {
      "name": "Devices",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB80960",
      "parent": "0x7FF73FD3DB40",
      "properties": []
    },
    "0x7FF73FACAE90": {
      "name": "Scribble",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCDEC40",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct DB::CurveSegment, struct Container::CollectPolicies<struct DB::CurveSegment>>>::`vftable'",
          "name": "Scribble",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCDEC40": {
      "name": "Scribbles",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FACAE90",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC70BB0": {
      "name": "ScribbleEdit",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C2CDEF0": {
      "name": "TimecodeSlots",
      "base": "0x7FF73C266850",
      "child": "0x7FF73F89B710",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73F89B710": {
      "name": "TCSlot",
      "base": "0x7FF73FC912B0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C2CDEF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "PreRoll",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "AfterRoll",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "GeneratorStartTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "GeneratorEndTime",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GeneratorLimits"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "GeneratorLooped",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Yes"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "GeneratorFrameUnit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FrameFormat"
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "AfterRollColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "OffColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "ExternalSourceColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::UColor>::`vftable'",
          "name": "GeneratorColor",
          "TypeNameStr": "RGBA8",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "TimeDisplayFormat",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeDisplayFormatSelected"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserBits",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Network::IP8Full>::`vftable'",
          "name": "SourceIP",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TimeString",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "Time",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C326D60": {
      "name": "Video",
      "base": "0x7FF73FBBA030",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB7F9E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "File",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "VideoFileSource"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::NDISource>>::`vftable'",
          "name": "NDISource",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum NDIlib_recv_bandwidth_e>::`vftable'",
          "name": "NDIBandwidth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NDIBandwidth"
        }
      ]
    },
    "0x7FF73FB7F9E0": {
      "name": "Videos",
      "base": "0x7FF73FC2C740",
      "child": "0x7FF73C326D60",
      "parent": "0x7FF73C245510",
      "properties": []
    },
    "0x7FF73FB64C10": {
      "name": "NDISource",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC33EF0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "URL",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum NDIlib_recv_bandwidth_e>::`vftable'",
          "name": "Bandwidth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Lowest",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "NDIBandwidth"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "BadVideoFormat",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FC33EF0": {
      "name": "NDI",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB64C10",
      "parent": "0x7FF73C41B220",
      "properties": []
    },
    "0x7FF73FCF2DC0": {
      "name": "Gel",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCADCA0",
      "description": "A definition of a Gel",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Key",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1,1",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "R",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "G",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "B",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCADCA0": {
      "name": "GelPool",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FCF2DC0",
      "parent": "0x7FF73FCE2A50",
      "description": "A group of gel definitions",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Manufacturer",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCE2A50": {
      "name": "GelPools",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FCADCA0",
      "parent": "0x7FF73F821990",
      "description": "A container for all gels  in the system",
      "properties": []
    },
    "0x7FF73C31EB50": {
      "name": "MeshImage",
      "base": "0x7FF73FBBA030",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD6AD70",
      "properties": []
    },
    "0x7FF73FD6AD70": {
      "name": "MeshImagePool",
      "base": "0x7FF73FC2C740",
      "child": "0x7FF73C31EB50",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC06240": {
      "name": "UserImage",
      "base": "0x7FF73FBBA030",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C4005D0",
      "properties": []
    },
    "0x7FF73C4005D0": {
      "name": "Images",
      "base": "0x7FF73FC2C740",
      "child": "0x7FF73FC06240",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB59930": {
      "name": "SymbolImage",
      "base": "0x7FF73FBBA030",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FCD8F90",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::UiColor>::`vftable'",
          "name": "ColorKeyLightFrom",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::UiColor>::`vftable'",
          "name": "ColorKeyLightTo",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::UiColor>::`vftable'",
          "name": "ColorKeySelectionFrom",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::UiColor>::`vftable'",
          "name": "ColorKeySelectionTo",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FCBBB60": {
      "name": "GoboImage",
      "base": "0x7FF73FBBA030",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB06E00",
      "properties": []
    },
    "0x7FF73FBBA030": {
      "name": "Image",
      "base": "0x7FF73FCE6780",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AddAlpha",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FCD8F90": {
      "name": "Symbols",
      "base": "0x7FF73FC2C740",
      "child": "0x7FF73FB59930",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB06E00": {
      "name": "GoboImages",
      "base": "0x7FF73FC2C740",
      "child": "0x7FF73FCBBB60",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FC2C740": {
      "name": "ImagePool",
      "base": "0x7FF73FBD4840",
      "child": "0x7FF73FBBA030",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C245510": {
      "name": "MediaPools",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F821990",
      "properties": [
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "MemoryLimit",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "10737418240",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FB17480": {
      "name": "ProgLayer",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FD71A70",
      "properties": []
    },
    "0x7FF73FD71A70": {
      "name": "ProgLayers",
      "base": "0x7FF73C266850",
      "child": "0x7FF73FB17480",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FCE6780": {
      "name": "CachedObj",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FilePath",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FileSize",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileContent",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::CachedObjectSource>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CachedObjectSource"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Installed",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IsResource",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "InStream",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FBD4840": {
      "name": "CachedObjectPool",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "PoolObjectContentSizeLimitation",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FC912B0": {
      "name": "Appearance",
      "base": "0x7FF73C41C600",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FBDA9F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Image>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Colors::RGB<float>>::`vftable'",
          "name": "Color",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1.000000,1.000000,1.000000,1.000000",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Image>>::`vftable'",
          "name": "Image",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageBackGroundMode>::`vftable'",
          "name": "ImageMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Bar",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageBackGroundMode"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ImageR",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ImageG",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ImageB",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "ImageAlpha",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ImageRGBA",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "FFFFFFFF",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "BackR",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "BackG",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "BackB",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "BackAlpha",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BackRGBA",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "FFFFFFFF",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "MediaFileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageRotation>::`vftable'",
          "name": "ImageRotation",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageRotation"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ImageMirror>::`vftable'",
          "name": "ImageMirror",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageMirror"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AppearanceData::CreatedBy>::`vftable'",
          "name": "CreatedBy",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Unknown",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CreateBy"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "IPX",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "IPY",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "IPW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "IPH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FBDA9F0": {
      "name": "Appearances",
      "base": "0x7FF73C3861E0",
      "child": "0x7FF73FC912B0",
      "parent": "0x7FF73F821990",
      "properties": []
    },
    "0x7FF73C41C600": {
      "name": "GuidObject",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "An object with a guid and an appearance.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Crypto::Guid<128>>::`vftable'",
          "name": "Guid",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Scribble>>::`vftable'",
          "name": "Scribble",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "NameAndApp",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Note",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TagMap>::`vftable'",
          "name": "Tags",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3861E0": {
      "name": "GenericPool",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Base class for all pools (eg. Presets,Sequences, Groups etc).",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "DefaultsLoaded",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FC8CE50": {
      "name": "TypedNamedObj",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Base class for all objects that can be labeled.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C36EBF0": {
      "name": "NamedObj",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "Base class for all objects that can be labeled.",
      "properties": []
    },
    "0x7FF73FD33E80": {
      "name": "TestRGBInterface",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FB71580": {
      "name": "TypedObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Type",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73C3D6870": {
      "name": "IllegalObject",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C3D6870",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73C266850": {
      "name": "Object",
      "base": "0x7FF73C266850",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73C266850",
      "description": "The fundamental base class for all other objects.",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IgnoreNetwork",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "StructureLocked",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SystemLocked",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Lock",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Index",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Count",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "No",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Name",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Note",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UserExpanded",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FaderEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Owned",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Hidden",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DependencyExport",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "MemoryFootprint",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FE19F30": {
      "name": "FanRpmView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE18CE0": {
      "name": "SysTempView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDECCD0": {
      "name": "GpuTempView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD87970": {
      "name": "CpuTempView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD8C120": {
      "name": "ShowDataMemTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE92030": {
      "name": "MemTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD97E90": {
      "name": "CPUTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD88760": {
      "name": "SampleTableView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "GridColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Grid1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SampleColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "UpperSampleColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SampleTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PrintCurrentValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PrintMaxValue",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Page",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE0F940": {
      "name": "SensorView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SensorTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SensorColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Sensor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "WarningColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Warning",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PeekColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Peek",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE05210": {
      "name": "NotificationIcon",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD92170",
      "properties": []
    },
    "0x7FF73FE8B980": {
      "name": "NotificationText",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD92170",
      "properties": []
    },
    "0x7FF73FD92B60": {
      "name": "NotificationTitle",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD92170",
      "properties": []
    },
    "0x7FF73FD92170": {
      "name": "NotificationsWrapper",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD947A0",
      "properties": []
    },
    "0x7FF73FD947A0": {
      "name": "NotificationsGridScroller",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FD92170",
      "parent": "0x7FF73FE65410",
      "properties": []
    },
    "0x7FF73FDC0A00": {
      "name": "NotificationArea",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::NotificationArea::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::NotificationArea::OnTitleClickAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnTitleClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnTitleClick(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        }
      ]
    },
    "0x7FF73FE16F00": {
      "name": "Navigator",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents a special navigator UI component",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Graphics::UIObject>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A UI object associated with this navigator"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Navigator::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Navigator::ActionOnNavigate(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnNavigate",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnNavigate(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE5EA30": {
      "name": "MessageBox",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::MessageBoxA::OnInputAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnInput",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnInput(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::MessageBoxA::OnStateAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnState",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnState(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::MessageBoxA::OnCommandAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCommand",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCommand(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::MessageBoxA::OnTitleAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnTitle",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnTitle(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &, class DB::HandleBase), {public: bool Graphics::MessageBoxA::OnFocusGetAction(class DB::Object *, class DB::SetParam &, class DB::HandleBase), 0}>::`vftable'",
          "name": "OnFocusGet",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MBFocusGet(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::MessageBoxA::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::MessageBoxA::OnFocusLostAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnFocusLost",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MBFocusLost(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "State",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "Selector",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoCloseOnInput",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD8E490": {
      "name": "Toolbar",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the primary direction to position children (vertical or horizontal)",
          "Enum": "ToolbarScrollType"
        }
      ]
    },
    "0x7FF73FE53A90": {
      "name": "PropertyBox",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointerBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE71770": {
      "name": "StatusBar",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::StatusBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::StatusBar::ActionChangeText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangeText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:new text str"
        }
      ]
    },
    "0x7FF73FDA3A30": {
      "name": "VirtualKeyboardButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::KeyCodes>::`vftable'",
          "name": "KeyCode",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A key code this button represents",
          "Enum": "KeyboardCodes"
        }
      ]
    },
    "0x7FF73FE894D0": {
      "name": "VirtualKeyboard",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class Graphics::UIObject>>::`vftable'",
          "name": "TargetObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "An object a virtual keyboard is linked to"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::VirtualKeyboard::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::VirtualKeyboard::ActionKeyPress(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "KeyPress",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Accepts name of the key code. Emulates key press/release or key toggle (for modifier keys)"
        }
      ]
    },
    "0x7FF73FE4C370": {
      "name": "ImageInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE736E0": {
      "name": "ViewInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD95190": {
      "name": "ColorInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE36A50": {
      "name": "NumericInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::CalculatorMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Double",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CalculatorMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SuppressModeSwitch",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScreenEncoder",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::NumericInput::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::NumericInput::TabChangedAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TabChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:NumericTabChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::NumericInput::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int, bool, bool), {private: bool Graphics::NumericInput::EnumGroupChangedTab(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int, bool, bool), 0}>::`vftable'",
          "name": "GroupChangedTab",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:GroupChangedTabAction(s;u8;u4;b;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::NumericInput::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int, bool), {private: bool Graphics::NumericInput::EnumGroupClickedTab(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int, bool), 0}>::`vftable'",
          "name": "GroupClickedTab",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:GroupClickedTabAction(s;u8;u4;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::NumericInput::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::NumericInput::EnumClicked(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "EnumClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:EnumClickedAction(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TitleButtonBool",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "TitleButtonInt64",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TitleButtonUInt64",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "TitleButtonPopup",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ExpandedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "ExpandedDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "CollapsedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "CollapsedDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "MixPercentAndHexDecModesAllowed",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllChannelSets",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE73150": {
      "name": "PopupList",
      "base": "0x7FF73FE1B770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD970A0": {
      "name": "Popup",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE2ED40": {
      "name": "MultiLineTextInput",
      "base": "0x7FF73FDC5710",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDC5710": {
      "name": "TextInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsScribbleAvailable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsAppearanceAvailable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsNoteAvailable",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsScribbleNew",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsAppearanceNew",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::TextInput::*)(void), {public: void Graphics::TextInput::ApplyNameBlacklist(void), 0}>::`vftable'",
          "name": "ApplyNameBlacklist",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::TextInput::*)(void), {public: void Graphics::TextInput::ApplyFilenameBlacklist(void), 0}>::`vftable'",
          "name": "ApplyFilenameBlacklist",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScribbleIsEmpty",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::TextInput::*, 2664>::`vftable'",
          "name": "OnUserProfileChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE788E0": {
      "name": "UITab",
      "base": "0x7FF73FE1B770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned int, bool, bool> Graphics::UITab::*, 1672>::`vftable'",
          "name": "TabChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u4;b;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned int, bool> Graphics::UITab::*, 1680>::`vftable'",
          "name": "TabClickedOnCurrent",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u4;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UITab.SelectedText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the text of the selected tab"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UITab.SelectedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the background of the selected tab"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "AdditionalInfoTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UITab.AdditionalInfoText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the additional Info sometimes shown in the Corner of a UITab Button"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DividerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UITab.Divider",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the divider line"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseTabRegistry",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDC8810": {
      "name": "UIArrowButton",
      "base": "0x7FF73FDA1B20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FDA1B20": {
      "name": "UITabButton",
      "base": "0x7FF73FE740D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoTexture",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE8EB30": {
      "name": "BatteryControl",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button with BatteryIndicator",
      "properties": []
    },
    "0x7FF73FDBDC40": {
      "name": "CalculatorChannelSetControl",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDF5640": {
      "name": "DisplaySelectButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDE6340",
      "properties": []
    },
    "0x7FF73FE8BF10": {
      "name": "ListItemButton",
      "base": "0x7FF73FE740D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FE91500": {
      "name": "InfoButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDE6340",
      "description": "A button with info lines",
      "properties": []
    },
    "0x7FF73FDA20B0": {
      "name": "PropertyRadioButtonList",
      "base": "0x7FF73FE8A3F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::PropertyRadioButtonList::PropertySetType>::`vftable'",
          "name": "SetType",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Set",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PropertyRadioButtonListSetType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DirectQuotation",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DirectPrefix",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ArrayIndex",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Illegal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Index"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "EnabledItems",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "AllEnabled",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PropertyRadioButtonListEnabledItems"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CloseOnClick",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE8A3F0": {
      "name": "RadioButtonList",
      "base": "0x7FF73FE1B770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE484D0": {
      "name": "RadioItemButtonV2",
      "base": "0x7FF73FDA0180",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FE64160": {
      "name": "RadioItemButton",
      "base": "0x7FF73FDA0180",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FDA0180": {
      "name": "StateItemButton",
      "base": "0x7FF73FE740D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "DeselectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Icon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE44320": {
      "name": "PopupItemButton",
      "base": "0x7FF73FE740D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FE1B770": {
      "name": "ScrollableItemList",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a type of the list: horizontal or vertical",
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Distance",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a distance between list items in pixels"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ItemSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "For vertical type this defines height, for horizontal type this defines width (0 means auto-defined)"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibleItemCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Count of items which would be displayed without scrolling (0 means auto-defined)"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ItemType",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "BaseItemButton",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a type to be used to render list items"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AvoidScroll",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If set to 'Yes' tries to adjust the size of the item to fit into available space with no scrolling needed",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Rounded",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If set to 'Yes' first and last items will be with rounded corners",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IndicatorBarEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If set to 'Yes' items will draw the indicatorBar",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLeftIcon",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowNumber",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowRightIcon",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowAdditionalInfo",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLeftScribble",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowRightScribble",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowBlocks",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SkipTextIfIconExists",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ItemIndividualCorners",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ItemFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Current item filter"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned int> Graphics::ScrollableItemList::*, 1504>::`vftable'",
          "name": "OnSelectedItem",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:OnSelectedItem(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Item was selected."
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ScrollableItemList::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::ScrollableItemList::ActionSelectFirst(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectFirst",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectedItemIdx",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "SelectedItemValueI64",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedItemValueStr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IndirectEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScrollChangesSelection",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FDA48A0": {
      "name": "BaseItemButtons",
      "base": "0x7FF73FDD97B0",
      "child": "0x7FF73FE740D0",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE740D0": {
      "name": "BaseItemButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Popup.SelectedItemBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Popup.SelectedItemText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EmptyBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Popup.EmptyItemBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EmptyTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Popup.EmptyItemText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ItemIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "PinnedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "pin",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE2B520": {
      "name": "StationGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FE02180": {
      "name": "StationGrid",
      "base": "0x7FF73FD93DB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD93DB0": {
      "name": "DBObjectGridBase",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "TargetObjects",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "SelectedObjects",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "TargetObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IgnoreChildren",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::DBObjectGridBase::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::DBObjectGridBase::ActionChangeTarget(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "ChangeTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str;1:obj handle"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "StealFocusAfterSelect",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CmdlineInteraction",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TargetCmdlineInteraction",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditAllowedAdd",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditAllowedDelete",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CreateAndEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AddTargets",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ObserveSelectionChange",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "FixedColumns",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FixedColumns"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "InsertType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64> Graphics::DBObjectGridBase::*, 20376>::`vftable'",
          "name": "OnTargetChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64> Graphics::DBObjectGridBase::*, 20384>::`vftable'",
          "name": "OnSelectionAfterCmd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE08BD0": {
      "name": "DBObjectGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FE59040": {
      "name": "ShowHistoryGrid",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ShowHistoryGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::ShowHistoryGrid::ReTriggerInit(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "ReTriggerInit",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to reinit history grid"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CurrentSelectedShowFile",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD9F200": {
      "name": "ShowHistoryGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FDB4600": {
      "name": "ShowHistoryGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FDA63B0": {
      "name": "FilebrowserView",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FuzzyFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FuzzyFilterExcludeEnd",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BaseFilter",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "*",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::FilebrowserView::*, 2952>::`vftable'",
          "name": "PathChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:FB_PathChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionSetPath(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetPath",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:FB_SetPath(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionSetFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:FB_SetFilter(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionGoUp(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "GoUp",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:FB_GoUp(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionSelectFirstFile(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectFirstFile",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionScrollToFirstFile(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ScrollToFirstFile",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::FilebrowserView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::FilebrowserView::ActionDeleteSelectedFiles(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DeleteSelectedFiles",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedFile",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD93820": {
      "name": "FileGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FDB7E30": {
      "name": "FileGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FDF4390": {
      "name": "MultiSyncGridScroller",
      "base": "0x7FF73FE80930",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE80930": {
      "name": "MultiScroller",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE01BF0": {
      "name": "UIGrid",
      "base": "0x7FF73FD9D7C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ScrollCellFrameColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ScrollCellFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedRowBorder",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "FrameThickness",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ScrollCellFrameThickness",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "3",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "LevelDistance",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "24",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ColumnResizeMaxDeviation",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "25",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "Lasso",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "LassoTextureDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a texture for a selection lasso"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LassoColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.Lasso",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a color for a selection lasso"
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LevelLimit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoScrollToEnd",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowAddContent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowAddNewline",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowMergeChildren",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CanProvideUiGridSelection",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowFilterContent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterBlockUIEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "GapsForExpanded",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseUserProfileSettings",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScrollOutEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "VScrollOnHeader",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ConvertCursorToTabAtBoundaries",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollParam::ItemPlacement::Type>::`vftable'",
          "name": "ItemPlacementTypeV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollItemPlacementType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollParam::ItemPlacement::Type>::`vftable'",
          "name": "ItemPlacementTypeH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollItemPlacementType"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ItemPlacementOffsetFactorV",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "ItemPlacementOffsetFactorH",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DataType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectionType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "CellType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SettingsType",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::SheetSettings>>::`vftable'",
          "name": "ExternalSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SortAsc",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "sort_asc",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the texture of an icon for sorting in the ascending order"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SortDesc",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "sort_desc",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the texture of an icon for sorting in the descending order"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SelectedRow",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Provides the unique row id associated with the first selected cell"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SelectedColumn",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Provides the unique column id associated with the first selected cell"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoNextCell",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "AutoNextCellDirection",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SelectionOnFocusOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "AutoFitColumn",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GridVersion",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, bool> Graphics::UIGrid::*, {2680, 0, 0}>::`vftable'",
          "name": "OnSelectedItem",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:OnSelectedItem(s;u8;u8;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "something was added to grid selection"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64> Graphics::UIGrid::*, {2688, 0, 0}>::`vftable'",
          "name": "OnSelectedColumn",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "something was added to grid selection"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64> Graphics::UIGrid::*, {2696, 0, 0}>::`vftable'",
          "name": "OnSelectedRow",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "something was added to grid selection"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64> Graphics::UIGrid::*, {2704, 0, 0}>::`vftable'",
          "name": "OnBeforeEdit",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "starting cell editing"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64> Graphics::UIGrid::*, {2712, 0, 0}>::`vftable'",
          "name": "OnAfterEdit",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ending cell editing"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, unsigned char, short, short> Graphics::UIGrid::*, {2720, 0, 0}>::`vftable'",
          "name": "OnCellMouseDown",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, unsigned char, short, short> Graphics::UIGrid::*, {2728, 0, 0}>::`vftable'",
          "name": "OnCellMouseDownHold",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, unsigned char, short, short> Graphics::UIGrid::*, {2736, 0, 0}>::`vftable'",
          "name": "OnCellMouseUp",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, unsigned char, short, short> Graphics::UIGrid::*, {2744, 0, 0}>::`vftable'",
          "name": "OnCellMouseClicked",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64, unsigned __int64, unsigned char, short, short> Graphics::UIGrid::*, {2752, 0, 0}>::`vftable'",
          "name": "OnCellMouseDoubleClicked",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;u8;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::UIGrid::*, {2760, 0, 0}>::`vftable'",
          "name": "OnScreenPushed",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::UIGrid::ActionClearSelection(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "ClearSelection",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to clear the current selection; (0:str dummy)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), {public: bool Graphics::UIGrid::ActionSelectCell(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), 0, 0, 0}>::`vftable'",
          "name": "SelectCell",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select a cell; (0:str dummy;1:u64 row unique id;2:u64 column unique id"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::UIGrid::ActionSelectRow(class DB::Object *, class DB::SetParam &, unsigned __int64), 0, 0, 0}>::`vftable'",
          "name": "SelectRow",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select a row; (0:str dummy;1:u64 row unique id)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::UIGrid::ActionAddRow(class DB::Object *, class DB::SetParam &, unsigned __int64), 0, 0, 0}>::`vftable'",
          "name": "AddRow",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to add a row; (0:str dummy;1:u64 row unique id)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::UIGrid::ActionSelectAllRows(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "SelectAllRows",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to selecta all rows"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::UIGrid::ActionSelectColumn(class DB::Object *, class DB::SetParam &, unsigned __int64), 0, 0, 0}>::`vftable'",
          "name": "SelectColumn",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select a column; (0:str dummy;1:u64 column unique id)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Graphics::UIGrid::ActionSortColumn(class DB::Object *, class DB::SetParam &, unsigned int), 0, 0, 0}>::`vftable'",
          "name": "SortByColumn",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to sort by a column; (0:str ('none'|'asc'|'desc');1:u64 column index 0-based)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, class Text::TString<char>), {public: bool Graphics::UIGrid::ActionFilterRows(class DB::Object *, class DB::SetParam &, class Text::TString<char>), 0, 0, 0}>::`vftable'",
          "name": "FilterRows",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to filter rows; (0:str - string to filter by)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::UIGrid::ActionClearFilter(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "ClearFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to clear the content filter"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Graphics::UIGrid::ActionScrollVertical(class DB::Object *, class DB::SetParam &, unsigned int), 0, 0, 0}>::`vftable'",
          "name": "ScrollVertical",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to scroll relative; (0:integer:vertical steps)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Graphics::UIGrid::ActionScrollHorizontal(class DB::Object *, class DB::SetParam &, unsigned int), 0, 0, 0}>::`vftable'",
          "name": "ScrollHorizontal",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to scroll relative; (0:integer:horizontal steps)"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::UIGrid::ActionExpandAll(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "ExpandAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to expand all rows"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::UIGrid::ActionScrollToEnd(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "ScrollToEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to scroll to last row"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollParam::Entity>::`vftable'",
          "name": "ScrollEntity",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Area",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollParamEntity"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScrollCellAutomatic",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScrollCellAutomaticWithOffset",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<struct Graphics::UIGrid::GridArea>::`vftable'",
          "name": "FixedHeaders",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct Graphics::UIGrid::GridArea>::`vftable'",
          "name": "FixedCells",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct Graphics::UIGrid::GridArea>::`vftable'",
          "name": "NormalHeaders",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct Graphics::UIGrid::GridArea>::`vftable'",
          "name": "NormalCells",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowSorting",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Graphics::UIGrid::*)(struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>>)const, {public: bool Graphics::UIGrid::CanCellExpand(struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>>)const, 0, 0, 0}>::`vftable'",
          "name": "CanCellExpand",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Checks, whether cell (passed as {r,c}) can expand"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Graphics::UIGrid::*)(struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>>)const, {public: bool Graphics::UIGrid::IsCellExpanded(struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>>)const, 0, 0, 0}>::`vftable'",
          "name": "IsCellExpanded",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true,
          "description": "Checks whether cell (passed as {r,c}) is expanded"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<enum DB::GridSortOrder (Graphics::UIGrid::*)(void)const, {public: enum DB::GridSortOrder Graphics::UIGrid::GetSortOrder(void)const, 0, 0, 0}>::`vftable'",
          "name": "GetSortOrder",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>> (Graphics::UIGrid::*)(void)const, {public: struct DB::TCell<class General::TIndex<unsigned int, struct DB::GridIndexTag>> Graphics::UIGrid::GetSortCell(void)const, 0, 0, 0}>::`vftable'",
          "name": "GetSortCell",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::UIGrid::*)(class Text::TString<char>, enum DB::GridSortOrder), {public: void Graphics::UIGrid::SortByColumnName(class Text::TString<char>, enum DB::GridSortOrder), 0, 0, 0}>::`vftable'",
          "name": "SortByColumnName",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ResizeLineColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ResizeLine",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a color for highlighting the resizing line"
        }
      ]
    },
    "0x7FF73FE24800": {
      "name": "UIGridCell",
      "base": "0x7FF73FD9E740",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DefaultCellAltBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.DefaultCellAltBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "FixedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.FixedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "FixedTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.FixedText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HeaderBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.HeaderBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HeaderAltBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.HeaderAltBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HeaderTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.HeaderText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.SelectedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.SelectedText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "NoCellBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.NoCellBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ReadOnlyBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ReadOnlyBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ReadOnlyAltBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ReadOnlyAltBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ReadOnlyTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ReadOnlyText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DefaultValueColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.DefaultValue",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DisabledColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.Disabled",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "FilterActiveColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Filter.ActiveIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WeakAlternationInHeader",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WeakAlternationInData",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD9E740": {
      "name": "UIGridCellBase",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDE7B80": {
      "name": "UIGridEditModeButton",
      "base": "0x7FF73FDAE190",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDAE190": {
      "name": "UIGridConfigButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE8D2F0": {
      "name": "UIGridConfigLayout",
      "base": "0x7FF73FDCBBE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD963E0": {
      "name": "UIGridButtons",
      "base": "0x7FF73FDD97B0",
      "child": "0x7FF73FE21440",
      "parent": "0x7FF73FD9A4C0",
      "properties": []
    },
    "0x7FF73FD9A4C0": {
      "name": "UIGridButtonsCollect",
      "base": "0x7FF73FDD97B0",
      "child": "0x7FF73FD963E0",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FD858C0": {
      "name": "UIGridLevelButton",
      "base": "0x7FF73FE21440",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD963E0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ExpandedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "ExpandedDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "CollapsedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "CollapsedDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ChildFreeIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.ChildFreeIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HasChildrenIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Icon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HasSelectedChildrenIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIGrid.SelectedChildrenIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE21440": {
      "name": "UIGridButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD963E0",
      "properties": []
    },
    "0x7FF73FE4A170": {
      "name": "UIGridInternals",
      "base": "0x7FF73FDD97B0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD8D640": {
      "name": "UIGridFilterBlock",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FDCA790": {
      "name": "ExpandableButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DefaultAction",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "true",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE41EF0": {
      "name": "RotationButton",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SmallMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE4C900": {
      "name": "BandFader",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "KnobTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "grad_round_h",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "KnobColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "BandFader.Knob",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "UpperColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "BandFader.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LowerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "BandFader.StripInactive",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "FaderLocked",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "BandFader.FaderLocked",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LowerPressedColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "BandFader.StripActive",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::EncoderResolutionType>::`vftable'",
          "name": "Speed",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "default": "Fast",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "EncoderResolutionType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::AttriebuteEncoderResolution>::`vftable'",
          "name": "Resolution",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Coarse",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "AttriebuteEncoderResolution"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointerBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Master",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderGroupType"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoCloseAllowed",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::BandFader::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::BandFader::ActionSetPlus(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetPlus",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SetPlus(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::BandFader::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::BandFader::ActionSetMinus(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetMinus",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SetMinus(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Value",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD9C100": {
      "name": "DCRemoteInfo",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "UpperTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "LowerTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "UpperColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RemoteInfo.Upper",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LowerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RemoteInfo.Lower",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE925C0": {
      "name": "TimecodeSlotInfo",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Graphics::TimecodeSlotInfo::eTC_Source>::`vftable'",
          "name": "Source",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Midi",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimeCodeSource"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Font>>::`vftable'",
          "name": "TcFont",
          "TypeNameStr": "Font",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Font of the Timecode text"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowTcSlotAndTcMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FDED260": {
      "name": "WebView",
      "base": "0x7FF73FDCE230",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::WebView::*, 24472>::`vftable'",
          "name": "UrlChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:WV_UrlChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::WebView::*, 24480>::`vftable'",
          "name": "ProgressChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:WV_ProgressChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::WebView::*, 24488>::`vftable'",
          "name": "StatusChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:WV_StatusChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::WebView::*, 24496>::`vftable'",
          "name": "TooltipChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:ShowToolTip(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64> Graphics::WebView::*, 24504>::`vftable'",
          "name": "MemUsageUpdated",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:WV_MemUsageUpdated(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WebView::ActionSetUrl(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetUrlA",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_SetUrl(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WebView::ActionGoBack(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "GoBack",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_GoBackward(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WebView::ActionGoFwd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "GoFwd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_GoForward(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WebView::ActionReload(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Reload",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_Reload(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &, unsigned char), {public: bool Graphics::WebView::ActionSetFPSLimit(class DB::Object *, class DB::SetParam &, unsigned char), 0}>::`vftable'",
          "name": "SetFPSLimit",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_SetFPSLimit(s;u1;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WebView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WebView::ActionRequestMemUsage(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RequestMemUsage",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_RequestMemUsage(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Priority",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE00270": {
      "name": "ColorView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "System",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE35070": {
      "name": "ScribbleEditView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "BrushTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "CurveBrush01",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ScribbleEditView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::ScribbleEditView::OnClearScribble(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ClearScribble",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SE_ClearScribble(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ScribbleEditView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::ScribbleEditView::OnApplyColorToCurves(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnApplyColorToCurves",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnApplyColorToCurves(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Applying color to all curves of the current scribble"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::ScribbleEditView::*, 1368>::`vftable'",
          "name": "OnCreateNewScribble",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FE60C10": {
      "name": "ScrollContainerPageScrollItemList",
      "base": "0x7FF73FDE7190",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD8C6B0": {
      "name": "ScrollContainerPage",
      "base": "0x7FF73FDE7190",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDE7190": {
      "name": "ScrollContainerPageBase",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ScrollContainerPageBase::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::ScrollContainerPageBase::BtnClicked(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ScrollAction",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ScrollButtonClick(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD90D90": {
      "name": "ScrollContainer",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE65410": {
      "name": "ScrollBox",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PanScrollArea",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PanScroll",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ResetChildrenSize",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ExternScrollPos",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDCF4E0": {
      "name": "SplitView",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "A view UI control that can display two columns or two rows with resizer in between.",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Horizontal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::SplitView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::SplitView::OnResizeStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SV_ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::SplitView::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Graphics::SplitView::OnResizeMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "ResizeMove",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SV_ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::SplitView::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::SplitView::OnResizeEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SV_ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FDCBBE0": {
      "name": "AutoLayout",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the primary direction to position children (vertical or horizontal or auto)",
          "Enum": "AutoLayoutScrollType"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "GroupedCellsCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines amount of children per row/column (depending on the direction)",
          "Enum": "CellGrouping"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SideSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "Auto",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a size in pixels of the row (if a direction is horizontal) or column (if a direction is vertical)",
          "Enum": "ALSideSizeSpecial"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MinCellSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a minimal size in pixels of the grouped cell (it's width for the horizontal direction and height for the vertical)"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "OnlyVisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if a place in the grid should be reserved for invisible children",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Inverted",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "In case of horizontal direction it will be from right to left, in case of vertical direction it will be from bottom to top",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Content",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Columns/Rows will not be stretched but content-dependent",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TryAvoidZeroes",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TryFitMainIfContentDriven",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TryFitIntoSecondary",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SeparatorSupport",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ModifyTextureLayout",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Texture Layout will modified",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::AutoLayout::ChildrenFillPolicy>::`vftable'",
          "name": "ChildrenFillPolicy",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if children would be organized in a layout in the row-first or column-first manner",
          "Enum": "ChildrenFillPolicy"
        }
      ]
    },
    "0x7FF73FE7D040": {
      "name": "ShowMoreButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDCBBE0",
      "properties": []
    },
    "0x7FF73FE199A0": {
      "name": "DialogContainer",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ActiveChild",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the name of the currently visible child"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::DialogContainer::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::DialogContainer::ActionChangeActiveChild(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangeActive",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:child name"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceFocusOnChange",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE88680": {
      "name": "ObjectProperties",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::ObjectProperties::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::ObjectProperties::ActionChangeTarget(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "ChangeTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str;1:obj handle"
        }
      ]
    },
    "0x7FF73FDB33B0": {
      "name": "UI2DView",
      "base": "0x7FF73FDCE230",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "GridColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "2DView.Grid",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "GridDelta",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "10",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE31580": {
      "name": "ResizeCorner",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::ResizeCorner::*, 1248>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:ResizeStart(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::ResizeCorner::*, 1256>::`vftable'",
          "name": "ResizeMove",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:AbsX(px);1:AbsY(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<bool> Graphics::ResizeCorner::*, 1264>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:ResizeEnd(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FD9D7C0": {
      "name": "Dialog",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE95EC0": {
      "name": "TextView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A view UI control that can display a list of lines that is provided by a history provider object. Scrollable horizontally and vertically.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "TextViewProvider",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectionColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "TextView.TextSelectionBkColor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "FixedBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "TextView.FixedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDA81A0": {
      "name": "LineEditExt",
      "base": "0x7FF73FDFA020",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEditExt::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::LineEditExt::ActionProgressChanged(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ProgressChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:LE_ProgressChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FDFA020": {
      "name": "LineEdit",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI control used to view/edit single-lined UTF8 text",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "CursorTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "text_cursor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ArrowRight",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ArrowLeft",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectionColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.TextSelectionBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "MessageColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.TextMessage",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionBackgroundTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "ScrollBarHeight",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "5",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "VKPluginName",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "TextInput",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "VKTitleHint",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::LineEdit::PolicyOnEnter>::`vftable'",
          "name": "PolicyOnEnter",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Nothing",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PolicyOnEnter"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TextChangeOnEnter",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Prompt",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EmptyText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Message",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Content",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ContentBeforeCursor",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedContent",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceCursor",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "LongPressVK",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "HistoryProvider",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::LineEdit::*, 1384>::`vftable'",
          "name": "Execute",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::LineEdit::*, 1392>::`vftable'",
          "name": "TextChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::LineEdit::*, 1400>::`vftable'",
          "name": "OnWrongChar",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionSetText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionAddText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "AddText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionInsertText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "InsertText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionClear(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Clear",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy string"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionSetPrompt(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetPrompt",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:prompt"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionShowMessage(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ShowMessage",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:message"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionHideMessage(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "HideMessage",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:message"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionOpenVK(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenVK",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionSelectAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &, unsigned int, unsigned int), {private: bool Graphics::LineEdit::ActionSelectRange(class DB::Object *, class DB::SetParam &, unsigned int, unsigned int), 0}>::`vftable'",
          "name": "SelectRange",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionDeSelect(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DeSelect",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::LineEdit::*)(class DB::Object *, class DB::SetParam &), {private: bool Graphics::LineEdit::ActionSetCursorToEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetCursorToEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReadOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "KeyRepeatEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "Icon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the texture that should be used for the icon. Defined in the 'graphics.textures.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Icon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be used for the icon. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "IconAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Right",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the icon inside the object.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "IconAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Top",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the icon inside the object.",
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "KeyboardIconAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Left",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the keyboard icon inside the object.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "KeyboardIconAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the keyboard icon inside the object.",
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MaxTextLength",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowKeyboardButton",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Secret",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SetPropertyOnlyOnTextChange",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::LineEdit::*)(void), {public: void Graphics::LineEdit::SetSendTab(void), 0}>::`vftable'",
          "name": "SetSendTab",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FDB9820": {
      "name": "ShowVKButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDFA020",
      "properties": []
    },
    "0x7FF73FD8F410": {
      "name": "UiFader",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "KnobTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SlotTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "UpperTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "LowerTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "OnOffTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "BorderTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "slim_border",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "HeadLineTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "corner3",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HeadlineColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Headline",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "KnobColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Knob",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "KnobColorFlashedUp",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.KnobFlashedUp",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "KnobColorFlashedDown",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.KnobFlashedDown",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SlotColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Slot",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "UpperColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Upper",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LowerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Lower",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OnColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OffColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "AlwaysOnColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.AlwaysOn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DisabledColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Disabled",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BorderColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Headline",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IndicatorColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "System",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "HeadLineDimension",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "50",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ButtonDimension",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "30",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "SlotDimension",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "20",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ColorIndicatorHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "ScrollType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "MaxValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "16777216",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "MinValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DrawGradient",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseDynamicIndicatorColor",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ResetIfUntargeted",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<int> Graphics::UiFader::*, 1304>::`vftable'",
          "name": "Changed",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:current value"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UiFader::*)(class DB::Object *, class DB::SetParam &, int), {public: bool Graphics::UiFader::ActionSetCurrent(class DB::Object *, class DB::SetParam &, int), 0}>::`vftable'",
          "name": "Set",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;i4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str;1:value"
        }
      ]
    },
    "0x7FF73FE54750": {
      "name": "DimmerWheelButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button which can simulate a dimmer wheel",
      "properties": []
    },
    "0x7FF73FE8C4A0": {
      "name": "KeyboardShortcutControl",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Shows/Toggles Keyboard Shortcut State",
      "properties": []
    },
    "0x7FF73FDEE380": {
      "name": "HardkeyButton",
      "base": "0x7FF73FDC1F80",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button which can simulate a hardware button",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "LedToken",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "OnOffTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OnColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OffColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Toggle",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowCSHelp",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE49780": {
      "name": "PropertyLabel",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE1CB50": {
      "name": "TitleBar",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SearchFocusTestParent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD9F790": {
      "name": "XlrModeButton",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE39E00": {
      "name": "EjectButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDA59C0": {
      "name": "DriveSelector",
      "base": "0x7FF73FE2DC20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowOldVersions",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE2DC20": {
      "name": "ObjectSelector",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD98880": {
      "name": "ProgressBar",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ProgressColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "Progress",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BarText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE66390": {
      "name": "TitleButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::TitleButton::*, 1408>::`vftable'",
          "name": "MoveStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:MoveStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::TitleButton::*, 1416>::`vftable'",
          "name": "Move",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:Move(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:DeltaX(px);1:DeltaY(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<bool> Graphics::TitleButton::*, 1424>::`vftable'",
          "name": "MoveEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:MoveEnd(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short, short, short> Graphics::TitleButton::*, 1432>::`vftable'",
          "name": "GestureClick",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:TitleGestureClick(s;i2;i2;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TrackEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TrackWorld",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowSelectionCount",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "Settings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowAdditionalInfo",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AdditionalInfo",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE23280": {
      "name": "DeleteWindowButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button that sends the close window signal.",
      "properties": []
    },
    "0x7FF73FE5CF80": {
      "name": "CloseButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE1CB50",
      "description": "A close button (derived from a Button class) with a defined default look'n'feel and a default close signal that is sent when it is clicked",
      "properties": []
    },
    "0x7FF73FDEC010": {
      "name": "ContextButton",
      "base": "0x7FF73FE1A920",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A context button (derived from a Button class) with a defined default look'n'feel",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::ContextButton::*, 1424>::`vftable'",
          "name": "MoveStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:MoveStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::ContextButton::*, 1432>::`vftable'",
          "name": "Move",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:Move(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:DeltaX(px);1:DeltaY(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<bool> Graphics::ContextButton::*, 1440>::`vftable'",
          "name": "MoveEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:MoveEnd(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short, short, short> Graphics::ContextButton::*, 1448>::`vftable'",
          "name": "GestureClick",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:TitleGestureClick(s;i2;i2;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToRecipeEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "RecipeEditColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RecipeEditing.Active",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE26040": {
      "name": "WarningInfoButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button that displays warnings",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::WarningInfoButton::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::WarningInfoButton::ShowAnimationAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ShowAnimation",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE1A920": {
      "name": "LogoButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button with an MA logo",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "LogoIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "logo_small",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the texture that should be used for the Logo icon. Defined in the 'graphics.textures.xml' file"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "LogoIconAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Left",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the Logo icon inside the object.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "LogoIconAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the Logo icon inside the object.",
          "Enum": "AlignmentV"
        }
      ]
    },
    "0x7FF73FD8F9A0": {
      "name": "SwipeButtonList",
      "base": "0x7FF73FE1D540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from the state button class. It displays the active state of a target property and can toggle states",
      "properties": []
    },
    "0x7FF73FE79CE0": {
      "name": "SwipeButton",
      "base": "0x7FF73FE7DB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from the state button class. It displays the active state of a target property and can toggle states",
      "properties": []
    },
    "0x7FF73FE1D540": {
      "name": "ToggleButtonList",
      "base": "0x7FF73FE94670",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from the state button class. It displays the active state of a target property and can toggle states",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "OptionHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "19",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Height of the single option"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedOptionTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RadioItemButton.Selected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the text of the selected option"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedOptionBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RadioItemButton.SelectedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Color of the background of the selected option"
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "OptionAreaMargin",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "8,0,8,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Margin for a single option"
        }
      ]
    },
    "0x7FF73FE7DB70": {
      "name": "ToggleButton",
      "base": "0x7FF73FE94670",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from the state button class. It displays the active state of a target property and can toggle states",
      "properties": []
    },
    "0x7FF73FE94670": {
      "name": "BaseStateButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from rectangle control with a property of an object as tagret. It displays the state of the target property",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<__int64, __int64> Graphics::BaseStateButton::*, 10440>::`vftable'",
          "name": "SelectionChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i8;i8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Signal is emmited each time the current selection is changed"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DirectCommand",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DirectQuotation",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "InteractWithCommandline",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DirectPrefix",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::GetParam::Role>::`vftable'",
          "name": "InternalRole",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Edit",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Roles"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SelectedItemIdx",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "SelectedItemValueI64",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SelectedItemValueStr",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FD86580": {
      "name": "EncoderOverlayPlaceholder",
      "base": "0x7FF73FE65E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE1DAD0": {
      "name": "PopupPlaceholder",
      "base": "0x7FF73FE65E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDF1D40": {
      "name": "CheckBox",
      "base": "0x7FF73FDFC250",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDFC250": {
      "name": "StateButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "DeselectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.ActiveIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD99540": {
      "name": "PropertyInput",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE0F3B0": {
      "name": "ScreenSelectorButton",
      "base": "0x7FF73FDF3E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDF3E00": {
      "name": "DialogButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE38160": {
      "name": "ScreenEncoderControl",
      "base": "0x7FF73FDD7F70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        }
      ]
    },
    "0x7FF73FDD7F70": {
      "name": "EncoderControl",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A single encoder control",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::EncoderDefinition::EncoderType>::`vftable'",
          "name": "EncoderType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Inside1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderType"
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::EncoderControl::EncoderRing>::`vftable'",
          "name": "EncoderRing",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Both",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderRing"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "RotateIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "EncoderControl.RotateIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DbgValueBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "EncoderControl.FixedBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Debug"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DbgValueTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Global.Text",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Debug"
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "EncoderResolution",
          "TypeNameStr": "Double",
          "subtype": 3,
          "default": "1.0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CheckForScreenEncoders",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE5ABB0": {
      "name": "ValueControl",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button derived from the state button class. It displays the active state of a target property and can toggle states",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDD57A0": {
      "name": "UIToggleButton",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDC1F80": {
      "name": "KBShortcutButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button that shows keyboard shortcut info",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DrawShortcutInfo",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FE25AB0": {
      "name": "IndicatorButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button with an icon, a colorindicator bar and a label",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TextLeftCorner",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDC0470": {
      "name": "IndicatorControl",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button with an icon, a colorindicator bar and a label",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "NonEmptyIndicatorColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD97900": {
      "name": "PropertyControl",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "TargetList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "System",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLabel",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowValue",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DataAsIs",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoHide",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IndirectEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ValueAutoAdjust",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DirectProperty",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DefaultAction",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CharAction",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Undo",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ValueTextShadow",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IgnoreActiveForEnums",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "LabelAreaHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "15",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "LabelAreaMargins",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "0,0,0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "ValueAreaMargins",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "0,4,0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ValueTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "IndicatorControl.ValueTextColor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ValueActiveTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.ActiveText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "ValueAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "ValueAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IconActive",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "ButtonOnIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines an icon for an active (checked, turned on) state"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IconInactive",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "ButtonOffIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines an icon for an inactive state"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SetIconAsActiveInactive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditNewObject",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseGridColor",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ArrayIndex",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Illegal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Index"
        },
        {
          "CTypeName": "const DB::Property<enum DB::GetParam::Role>::`vftable'",
          "name": "ValueRole",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Display",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ValueRole"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ChangeLevel>::`vftable'",
          "name": "TriggerIndirectInitLevel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Property",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChangeLevel"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned __int64> Graphics::PropertyControl::*, 10072>::`vftable'",
          "name": "OnTargetChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE692E0": {
      "name": "ScrollBarButtonH",
      "base": "0x7FF73FDC4090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDD2110": {
      "name": "ScrollBarButtonV",
      "base": "0x7FF73FDC4090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDC4090": {
      "name": "ScrollBarButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD9E1B0": {
      "name": "ScrollBarH",
      "base": "0x7FF73FDA34A0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD91BE0": {
      "name": "ScrollBarV",
      "base": "0x7FF73FDA34A0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDA34A0": {
      "name": "ScrollBar",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "ScrollTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollParam::Entity>::`vftable'",
          "name": "ScrollEntity",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Area",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollParamEntity"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ScrollOpposite",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FDF6490": {
      "name": "MovableButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A special button (derived from a Button class) that can be moved by mouse(-like) events horizontally or vertically",
      "properties": []
    },
    "0x7FF73FDE6340": {
      "name": "Button",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button with an icon and a label",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "Icon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the texture that should be used for the icon. Defined in the 'graphics.textures.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Icon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be used for the icon. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IconHoverColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.IconHover",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be used for the icon when the mouse is hovering above it. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "IconScale",
          "TypeNameStr": "Float",
          "subtype": 2,
          "default": "1.00",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A float to scale the icon"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "IconAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the icon inside the object.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "IconAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the icon inside the object.",
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "IconOffsetH",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the horizontal offset of the icon."
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "IconOffsetV",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the vertical offset of the icon."
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "TextOffsetH",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the horizontal offset of the text."
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "TextOffsetV",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the vertical offset of the text."
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ActiveBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.ActiveBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the background color that should be used if this object is being held/pressed. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ActiveTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.ActiveText",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the text color that should be used for this object when its in active state. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ActiveIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.ActiveIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the icon color that should be used for this object when its in active state. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::HotKey>::`vftable'",
          "name": "HotKey",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines a hotkey for the button."
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "State",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The current state of the button."
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "ContentAreaMargin",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "0,0,0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the margin of the content area in pixels. Notation: (left,top,right,bottom)."
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IgnoreIconForTextAlign",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ReferencedTitleButton",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE67AA0": {
      "name": "ComponentXML",
      "base": "0x7FF73FC999C0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FC9C130",
      "description": "Represents a UI plugin component that contains an actual UI description (usually a file with a '.uixml' extension)",
      "properties": []
    },
    "0x7FF73FE7E100": {
      "name": "TextEdit",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A text viewing/editing UI control. Can edit a UTF8 multi-line text",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "CursorTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "text_cursor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionBackgroundTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectionColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.TextSelectionBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ColorLineNumberBackground",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.LineNumberBackground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ColorLineNumberNormal",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.LineNumberNormal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ColorLineNumberSelected",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.LineNumberSelected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ColorSelectedLineRect",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "LineEdit.SelectedLineRect",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::TextEdit::*, 1632>::`vftable'",
          "name": "Execute",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<int, int> Graphics::TextEdit::*, 1640>::`vftable'",
          "name": "UndoRedoChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i4;i4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::TextEdit::*, 1648>::`vftable'",
          "name": "ScrolledToEndV",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionUndo(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Undo",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionRedo(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Redo",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionSetText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionInsertText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "InsertText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionClearText(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ClearText",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReadOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLineNumbers",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowWhiteSpace",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HighlightCurrentLine",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NewlineWithSpaces",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceCursor",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Content",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::TextEdit::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::TextEdit::ActionSetCursorToEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetCursorToEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "VisualisableScrollV",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "VisualisableScrollH",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EnterToExecute",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "UndoCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "RedoCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE968B0": {
      "name": "RemoteInputLock",
      "base": "0x7FF73FD99F30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE86FD0": {
      "name": "DeskLock",
      "base": "0x7FF73FD99F30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE5C590": {
      "name": "MiniEncoder",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IndicatorBackTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "CircleBackground2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IndicatorTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "CircleForeground",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "System",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "MaxValue",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "16777216",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BackColor2",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "MiniEncoder.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IndicatorBack",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "MiniEncoder.IndicatorBack",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BackColorFlashedUp",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.KnobFlashedUp",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BackColorFlashedDown",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.KnobFlashedDown",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDCD110": {
      "name": "LinearResizer",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureHorizontal",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureHorizontalHover",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer_hover",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureVertical",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer_vert",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureVerticalHover",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer_vert_hover",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::LinearResizer::*, 1248>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:SV_ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::LinearResizer::*, 1256>::`vftable'",
          "name": "ResizeMove",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:SV_ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:DeltaX(px);1:DeltaY(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::LinearResizer::*, 1264>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:SV_ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FE520B0": {
      "name": "SplitterV",
      "base": "0x7FF73FDB1C70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UIToControl",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Bottom",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SplitterV_TopBottom"
        }
      ]
    },
    "0x7FF73FE182F0": {
      "name": "SplitterH",
      "base": "0x7FF73FDB1C70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UIToControl",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Right",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SplitterH_LeftRight"
        }
      ]
    },
    "0x7FF73FDB1C70": {
      "name": "Splitter",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Property",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureNormal",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TextureHover",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "linear_resizer_hover",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Position>::`vftable'",
          "name": "BackOffset",
          "TypeNameStr": "2Ints",
          "subtype": 0,
          "default": "-8,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Vertical",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Auto",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::Splitter::*, 1248>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:RT_ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::Splitter::*, 1256>::`vftable'",
          "name": "ResizeMove",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:RT_ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:DeltaX(px);1:DeltaY(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::Splitter::*, 1264>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:RT_ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FDFB130": {
      "name": "BaseInput",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Value",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Property to access current value of the input"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Context",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Property to access the object that represents the current context of the input"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "StrContext",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Property to access the string that describes the current context of the input"
        },
        {
          "CTypeName": "const DB::Property<class Container::MapTpl<struct Container::DefaultMapItemDescr<class Text::TString<char>, class Text::TString<char>, class ContainerInternal::MapCompare<class Text::TString<char>>>>>::`vftable'",
          "name": "AdditionalArgs",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ExclusivePropertyChange",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Property will not be changed by PropertyBase-job afterwards",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PositionBeneathFinger",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Input will be opened beneath finger instead beside",
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FD95720": {
      "name": "GraphicsRoot",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73C41B220",
      "description": "A root object for a complete UI objects hierarchy",
      "properties": []
    },
    "0x7FF73FE7E690": {
      "name": "Pult",
      "base": "0x7FF73FD3DB40",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F893E80",
      "description": "An object that represents a single user seat (own displays, own command line, own de-coupled input)",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::UIPult::*)(class DB::Object *, class DB::SetParam &), {protected: bool Graphics::UIPult::ActionRunTest(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RunTest",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "dummy"
        }
      ]
    },
    "0x7FF73FE86A40": {
      "name": "Display",
      "base": "0x7FF73FDEA1C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE1BD00",
      "description": "Describes a logical display",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Iconified",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Monitor",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "VSync",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EditEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ControlEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Display::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Display::ExecuteCommandLineAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ExecuteCommandLine",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CommandLine(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:command"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Display::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Display::ExecuteCommandLineActionEmpty(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ExecuteCommandLineIfEmpty",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CommandLineEmpty(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:command"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DPI",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "96",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoAdjustDPI",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "RestoredRememberedDisplayPosition",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::Display::*, 23816>::`vftable'",
          "name": "ShowTooltipSignal",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:DisplayShowToolTip(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::Display::*, 23824>::`vftable'",
          "name": "HideTooltipSignal",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:DisplayHideToolTip(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Display::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Display::OnShowTooltipAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ShowTooltipAction",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ShowToolTip(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Display::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Display::OnHideTooltipAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "HideTooltipAction",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:HideToolTip(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Display::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Display::UpdateScreenAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "UpdateScreen",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::Display::*)(short, short), {public: void Graphics::Display::SetSurfaceSize(short, short), 0}>::`vftable'",
          "name": "SetDisplaySize",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Graphics::Display::*)(void), {public: void Graphics::Display::RestoreSurface(void), 0}>::`vftable'",
          "name": "RestoreDisplay",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Graphics::Display::*)(void), {protected: bool Graphics::Display::IsMaximizedNative(void), 0}>::`vftable'",
          "name": "IsDisplayMaximized",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "ScaleRatio",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1x",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DisplayScales"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "WSRemoteConnection",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE1BD00": {
      "name": "DisplayCollect",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE86A40",
      "parent": "0x7FF73FE7E690",
      "description": "A container for all logical displays",
      "properties": []
    },
    "0x7FF73FE75AB0": {
      "name": "ScreenEncoderBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents an encoder bar with screen encoders, not supposed to be visible to user",
      "properties": []
    },
    "0x7FF73FDAFB60": {
      "name": "EncoderBarSlot",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FDFECF0": {
      "name": "EncoderBarPlaceHolder",
      "base": "0x7FF73FE65E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FD9BB70": {
      "name": "GraphicsEncoderBar",
      "base": "0x7FF73FE8E140",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents an encoder bar",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FadeEncoder",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::EncoderBarContext>::`vftable'",
          "name": "Context",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderBarContext"
        }
      ]
    },
    "0x7FF73FE8E140": {
      "name": "Bar",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents a bar",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DependsOnLinkedObject",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Graphics::UIObject>>::`vftable'",
          "name": "LinkedObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A UI object associated with this bar"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase> Graphics::Bar::*, 1504>::`vftable'",
          "name": "LinkedObjectChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FD84C00": {
      "name": "SwipeMenuOverlay",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Special case of an overlay for swipe menus",
      "properties": []
    },
    "0x7FF73FD99F30": {
      "name": "RecurringOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Overlay that can only be explicitly closed by user",
      "properties": []
    },
    "0x7FF73FE295B0": {
      "name": "ContentOverlay",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents an overlay with a shadow effect",
      "properties": []
    },
    "0x7FF73FE47420": {
      "name": "DialogFrame",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "A UI component that represents an overlay frame",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SearchFocusTestParent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FDE5090": {
      "name": "ShadedOverlay",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents an overlay with a shadow effect",
      "properties": []
    },
    "0x7FF73FE6F4D0": {
      "name": "Overlay",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A overlay dialog that can perform a modal loop.",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Overlay::CloseOkAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Close",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CloseOK(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Overlay::CloseConfirmAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CloseConfirm",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CloseConfirm(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Overlay::CloseCancelAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CloseCancel",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CloseCancel(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WantsModal",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoClose",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Overlay will be closed as soon as user tries to interact with UI outside of this overlay",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoCloseOnOverlay",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Overlay will be closed as soon as user tries to open another overlay that is not a child of this one",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CloseOnEscape",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Graphics::Overlay::OnMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "Move",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Move(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action that receives a move signal and performs an actual move of the overlay"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Overlay::OnMoveStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "MoveStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MoveStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Graphics::Overlay::OnResizeStart(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeStart(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action that receives a resize signal and performs an actual resize of the overlay"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Graphics::Overlay::OnResize(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "Resize",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action that receives a resize signal and performs an actual resize of the overlay"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::Overlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Graphics::Overlay::OnResizeEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action that receives a resize signal and performs an actual resize of the overlay"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ModalResult::Result>::`vftable'",
          "name": "EscModalResult",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "Confirm",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ModalResult"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "StayAlwaysVisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "RelativeToDisplay",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EditEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ControlEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AdjustInitialPosition",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "BuddyGroupId",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsMainBuddy",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "MainBuddy",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class Text::TString<char>, struct Container::CollectPolicies<class Text::TString<char>>>>::`vftable'",
          "name": "DependentBuddies",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseSimplifiedResize",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "WorkingDestination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DriveReset",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "OverrideKeybSC",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToPreview",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PreviewMixInColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Overlay.PreviewMixIn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Overlay.EditMixIn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInNotOwnerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Overlay.EditMixInNotOwner",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ReturnDestination",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FDCE230": {
      "name": "FrameBufferObject",
      "base": "0x7FF73FDEA1C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A framebuffer to be used by the graphics engine.",
      "properties": []
    },
    "0x7FF73FDEA1C0": {
      "name": "Drawable",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Base class for other classes that have their own frame buffers they are being rendered to (e.g. Window, Display)",
      "properties": []
    },
    "0x7FF73FDAD340": {
      "name": "Resolution",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDB4070",
      "description": "Describes resolution of a monitor",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Hz",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDB4070": {
      "name": "Monitor",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FDAD340",
      "parent": "0x7FF73FD8EE80",
      "description": "Represents a monitor device",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "X",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Y",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1024",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "768",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Hz",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "60",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "DPI",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Dimension>::`vftable'",
          "name": "PhysSizeMM",
          "TypeNameStr": "2Ints",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FD8EE80": {
      "name": "MonitorCollect",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FDB4070",
      "parent": "0x7FF73FD95720",
      "description": "A container for monitor objects",
      "properties": []
    },
    "0x7FF73FE133C0": {
      "name": "Item",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE06060",
      "description": "Represents a single item (a row or a column) of a grid configuration",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Graphics::UiLayout::SizePolicy>::`vftable'",
          "name": "SizePolicy",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Stretch",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "LayoutSizePolicy"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::FixedSize>::`vftable'",
          "name": "Size",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "MinSize",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "minimum size that is requested for this item (row or column). if <= 0 - not used"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RealSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "real size in pixels"
        }
      ]
    },
    "0x7FF73FDD4DB0": {
      "name": "ItemCollectColumns",
      "base": "0x7FF73FE06060",
      "child": "0x7FF73FE133C0",
      "parent": "0x7FF73FDA7350",
      "properties": []
    },
    "0x7FF73FE87830": {
      "name": "ItemCollectRows",
      "base": "0x7FF73FE06060",
      "child": "0x7FF73FE133C0",
      "parent": "0x7FF73FDA7350",
      "properties": []
    },
    "0x7FF73FE06060": {
      "name": "ItemCollect",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE133C0",
      "parent": "0x7FF73FDA7350",
      "description": "A container of UILayoutGrid configuration items (for rows or columns)",
      "properties": []
    },
    "0x7FF73FDA7350": {
      "name": "UILayoutGrid",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Arranges child objects according to a specified grid configuration",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DefaultMargin",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Columns",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Rows",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "CellWidth",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "CellHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BlockWidth",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If CellWidth is specified then while adjusting amount of columns to the CellWidth it also makes sure that the amount of columns is multiple of BlockWidth (if BlockWidth > 1)"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BlockHeight",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If CellHeight is specified then while adjusting amount of rows to the CellHeight it also makes sure that the amount of rows is multiple of BlockHeight (if BlockHeight > 1)"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ExpandContent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DefaultMarginOnBorders",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "MixInBackColorFromParentRecursive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EncoderUseDisplay",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::UILayoutGrid::ReductionPolicy>::`vftable'",
          "name": "RowReductionPolicy",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ReductionPolicy"
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::UILayoutGrid::ReductionPolicy>::`vftable'",
          "name": "ColReductionPolicy",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "PreferLast",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ReductionPolicy"
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Graphics::UILayoutGrid::*)(unsigned int, enum Graphics::UiLayout::SizePolicy, float, short), {public: bool Graphics::UILayoutGrid::SetRow(unsigned int, enum Graphics::UiLayout::SizePolicy, float, short), 0}>::`vftable'",
          "name": "SetRow",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FDE43E0": {
      "name": "ModalPlaceholder",
      "base": "0x7FF73FE65E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE65E00": {
      "name": "PlaceHolder",
      "base": "0x7FF73FDF8660",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A special dummy object used as a parent for UI components with passing names",
      "properties": []
    },
    "0x7FF73FDF8660": {
      "name": "PlaceHolderBase",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A special dummy object used as a parent for UI components with passing names",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DisplayLevel",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllowedInvisible",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ChangeLevel>::`vftable'",
          "name": "BlockLevel",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ChangeLevel"
        }
      ]
    },
    "0x7FF73FDD97B0": {
      "name": "UIObjectFake",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FDD97B0",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE84320": {
      "name": "UIObject",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "This is a base class for any UI control(widget) class",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "X",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Absolute horizontal position in pixels of the top - left corner of the object"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "Y",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Absolute vertical position in pixels of the top - left corner of the object"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "W",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "100%",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Absolute or relative width in pixels or percent"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDescriptor>::`vftable'",
          "name": "H",
          "TypeNameStr": "Size",
          "subtype": 0,
          "default": "100%",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Absolute or relative height in pixels or percent"
        },
        {
          "CTypeName": "const DB::Property<class DB::Rect>::`vftable'",
          "name": "AbsRect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Rect>::`vftable'",
          "name": "AbsClientRect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "Texture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "corner0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the texture that should be used. Defined in the 'graphics.textures.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Font>>::`vftable'",
          "name": "Font",
          "TypeNameStr": "Font",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Font of this object, which the text will be renderd with on low dpi displays."
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Font>>::`vftable'",
          "name": "LowDpiFont",
          "TypeNameStr": "Font",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Font that is used if encoder bar is on letter box display"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Text",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Text of this object"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ToolTip",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Tooltip of this object which will be displayed in the empty command line"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "HelpTopic",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "HelpTopic of this object which will be displayed in the help viewer"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIObject.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the background color that should be used for this object. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "TextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIObject.Text",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the text color that should be used for this object. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "TextShadowColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "UIObject.TextShadow",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the text shadow color that should be used for this object. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "MixInBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be mixed in with this object's background color used. Defined in the 'theme.xml' file"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "HighlightedColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Global.Selected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should used for the linked label highlighting"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TextVertical",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if text should be rendered vertically",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TextAutoAdjust",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if text should be automatically adjusted in terms of line breaks, font size",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TextUniform",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "if true, we don't try to use the maximum available space, but the output across different UI elements will be on the same level",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "FrameWidth",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The width of the frame in pixels which displays for example the hover or the selected state."
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "Padding",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "0,0,0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Space from the border of the object to the content. Notation: (left,top,right,bottom)"
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::Focus::Priority>::`vftable'",
          "name": "Focus",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Never",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FocusPriority"
        },
        {
          "CTypeName": "const DB::Property<enum DB::UserRights>::`vftable'",
          "name": "UserRights",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "View",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "UserRights"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Visible",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If this property is set to No/False/Off this object and all of its children are not rendered, they don't receive any input events (mouse, keyboard, touch...)",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "CanCoExistWithModal",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If true, modal doesn't get auto-closed when this UIObject receives auto-close-triggering-events",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "UserVisible",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A user configurable visibility flag",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Enabled",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Interactive",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Transparent",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If this property is set to Yes/True/On only children of this object will be rendered but not the object itself",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "BlockClickThru",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If this property is set to Yes/True/On one can not click through this object, although it might be transparent",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "UserInteracted",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A flag to test, if a user interacted with this ui element.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "HasHover",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enables hover animation for this object.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "Separator",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Indicator if control is a separator.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "HasPressedAnimation",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enables pressed animation for this object.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ContentDriven",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ContentWidth",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ContentHeight",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ForceContentMin",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If set to 'Yes' the list will request it's best size as it's minimum",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "WantsNumericRedirect",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ModalResult::Result>::`vftable'",
          "name": "CloseAction",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If clicked on this element, the surrounding dialog may automatically close.",
          "Enum": "ModalResult"
        },
        {
          "CTypeName": "const DB::Property<__int64>::`vftable'",
          "name": "AutoCloseValue",
          "TypeNameStr": "Int64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Provides a resulting value for a dialog being closed."
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "UiGroupId",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "UiGroupId for parent Autolayout object."
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::UIObject>>::`vftable'",
          "name": "LabelLinkHandle",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Optional link to handlebase identifier for linked UIObject."
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "IgnoreBackdropPadding",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "If this property is set to No/False/Off the client padding of the backdrop will be ignored",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "MixInBackColorFromParent",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FocusSearchPolicy",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FocusSearchPolicy"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "IgnoreRequestedSize",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ForceEncoderBar",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "SuppressOverlayAutoClose",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "IsClosing",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "TextShadow",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Enables/disables shadow effect for the text",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDimension>::`vftable'",
          "name": "MinSize",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the minimum size of the object. Notation: width,height"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::SizeDimension>::`vftable'",
          "name": "MaxSize",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the maximum size of the object. Notation: width,height"
        },
        {
          "CTypeName": "const DB::Property<class Graphics::AnchorPoints>::`vftable'",
          "name": "Anchors",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "-1,-1,-1,-1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies where the border of the object is anchored in the parent. This is zero normized. Notation: (left,top,right,bottom). Minus one means no anchoring"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SignalValue",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SignalValueHold",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "AlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Left",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the object inside its parent.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "AlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Top",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the object inside its parent.",
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentH>::`vftable'",
          "name": "TextAlignmentH",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the horizontal alingment of the text inside the object.",
          "Enum": "AlignmentH"
        },
        {
          "CTypeName": "const DB::Property<enum DB::URect::AlignmentV>::`vftable'",
          "name": "TextAlignmentV",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Center",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Specifies the vertical alingment of the text inside the object.",
          "Enum": "AlignmentV"
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "Margin",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "default": "0,0,0,0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Space from the parent object borders to the border of the object. Notation: (left,top,right,bottom)"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class LUA::PluginComponent>>::`vftable'",
          "name": "PluginComponent",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HasFocus",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HideFocusFrame",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AppearanceSourceClassName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleOnlyInAlpha",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls whether only for this type of build the UI object is visible",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleOnlyInBeta",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls whether only for this type of build the UI object is visible",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleOnlyInRelease",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls whether only for this type of build the UI object is visible",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ClickNearest",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls whether UI object is clicking the nearest child.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleInAlpha",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls visibility of the UI object for alpha versions of builds",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleInBeta",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls visibility of the UI object for alpha versions of builds",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "VisibleInRelease",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Controls visibility of the UI object for alpha versions of builds",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned char, short, short> Graphics::UIObject::*, 552>::`vftable'",
          "name": "Clicked",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:Button(0 - left, 1 - middle, 2 - right);2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 568>::`vftable'",
          "name": "ClickedLeft",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 576>::`vftable'",
          "name": "ClickedRight",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned char, short, short> Graphics::UIObject::*, 560>::`vftable'",
          "name": "DoubleClicked",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:Button(0 - left, 1 - middle, 2 - right);2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 504>::`vftable'",
          "name": "MouseEnter",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:ShowToolTip(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 512>::`vftable'",
          "name": "MouseLeave",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:HideToolTip(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 520>::`vftable'",
          "name": "MouseOverHold",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned char, short, short> Graphics::UIObject::*, 544>::`vftable'",
          "name": "MouseUp",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:Button(0 - left, 1 - middle, 2 - right);2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 584>::`vftable'",
          "name": "MouseUpLeft",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 592>::`vftable'",
          "name": "MouseUpRight",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned char, short, short> Graphics::UIObject::*, 528>::`vftable'",
          "name": "MouseDown",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:Button(0 - left, 1 - middle, 2 - right);2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 600>::`vftable'",
          "name": "MouseDownLeft",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, short> Graphics::UIObject::*, 608>::`vftable'",
          "name": "MouseDownRight",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:X(px);2:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned char, short, short> Graphics::UIObject::*, 536>::`vftable'",
          "name": "MouseDownHold",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:Button(0 - left, 1 - middle, 2 - right);2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, bool, bool, bool> Graphics::UIObject::*, 616>::`vftable'",
          "name": "KeyDown",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;b;b;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:key code"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<short, bool, bool, bool> Graphics::UIObject::*, 624>::`vftable'",
          "name": "KeyUp",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i2;b;b;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:key code"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<unsigned int> Graphics::UIObject::*, 632>::`vftable'",
          "name": "CharInput",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:utf32 char"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<int, short, short> Graphics::UIObject::*, 640>::`vftable'",
          "name": "TouchStart",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i4;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:point id;2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<int, short, short> Graphics::UIObject::*, 648>::`vftable'",
          "name": "TouchUpdate",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i4;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:point id;2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<int, short, short> Graphics::UIObject::*, 656>::`vftable'",
          "name": "TouchEnd",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;i4;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str;1:point id;2:X(px);3:Y(px)"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase> Graphics::UIObject::*, 664>::`vftable'",
          "name": "OnLoad",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<bool> Graphics::UIObject::*, 672>::`vftable'",
          "name": "OnVisible",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Graphics::UIObject::*, 680>::`vftable'",
          "name": "DescriptionChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase, class DB::HandleBase> Graphics::UIObject::*, 688>::`vftable'",
          "name": "FocusGet",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase, class DB::HandleBase> Graphics::UIObject::*, 696>::`vftable'",
          "name": "FocusLost",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ForceIntensity",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDA0B70": {
      "name": "ContentManager",
      "base": "0x7FF73FE479B0",
      "child": "0x7FF73FDDEEA0",
      "parent": "0x7FF73FE14210",
      "properties": []
    },
    "0x7FF73FD9B5E0": {
      "name": "Backdrop",
      "base": "0x7FF73FDDEEA0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE479B0",
      "description": "A texture with a defined 9-patch configuration for special scaling",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "Border",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Margin>::`vftable'",
          "name": "Client",
          "TypeNameStr": "4Ints",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::Backdrop::PatchType>::`vftable'",
          "name": "Type",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Nine",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BackdropPatchType"
        }
      ]
    },
    "0x7FF73FE6E680": {
      "name": "SecureTexture",
      "base": "0x7FF73FDDEEA0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE479B0",
      "properties": []
    },
    "0x7FF73FDDEEA0": {
      "name": "Texture",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE479B0",
      "description": "Describes an image that is loaded into a texture atlas (parent object of type TextureContainer)",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Filename",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Rect>::`vftable'",
          "name": "TextureRect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "TextureIndex",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE2A400": {
      "name": "Shader",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDB6170",
      "description": "Shader object (Vertex/Tessellation/Geometry/Fragment)",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Source",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FileName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Version",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Macros",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FDB6170": {
      "name": "ShaderProgram",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE2A400",
      "parent": "0x7FF73FE00800",
      "description": "A shader program that consists of shaders of different types",
      "properties": []
    },
    "0x7FF73FE00800": {
      "name": "ShaderProgramCollect",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FDB6170",
      "parent": "0x7FF73FD95720",
      "description": "A container for shader programs",
      "properties": []
    },
    "0x7FF73FDBE630": {
      "name": "Font",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE83D80",
      "description": "Describes a single font (a set of glyphs of characters and their respective parameters)",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Filename",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TTFFilename",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Size",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "16",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Graphics::Font::SizeType>::`vftable'",
          "name": "SizeType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Point",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FontSizeType"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "DPI",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "96",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Family",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE83D80": {
      "name": "Fonts",
      "base": "0x7FF73FE479B0",
      "child": "0x7FF73FDBE630",
      "parent": "0x7FF73FE14210",
      "description": "A texture atlas and a container for font objects (class Font) that are stored in this texture atlas",
      "properties": []
    },
    "0x7FF73FE479B0": {
      "name": "Textures",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FDDEEA0",
      "parent": "0x7FF73FE14210",
      "description": "A texture atlas and a container for texture objects (of classes Texture or Backdrop) that are stored in this texture atlas",
      "properties": []
    },
    "0x7FF73FE14210": {
      "name": "TextureCollect",
      "base": "0x7FF73FE205F0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FD95720",
      "description": "A container for textures (texture array)",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Width",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "2048",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Height",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "default": "2048",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Depth",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "6",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FE205F0": {
      "name": "GraphicsObject",
      "base": "0x7FF73C36EBF0",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FE205F0",
      "description": "A base class for any other class that has something to do with a UI",
      "properties": []
    },
    "0x7FF73FE9E040": {
      "name": "WebView",
      "base": "0x7FF73FDED260",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE9C460": {
      "name": "TexPageDebugView",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE9EB70": {
      "name": "GlWindowBase",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE99D50": {
      "name": "Monitor",
      "base": "0x7FF73FDB4070",
      "child": "0x7FF73FDAD340",
      "parent": "0x7FF73FD8EE80",
      "description": "Represents a monitor device",
      "properties": []
    },
    "0x7FF73FE9C9F0": {
      "name": "MonitorCollect",
      "base": "0x7FF73FD8EE80",
      "child": "0x7FF73FDB4070",
      "parent": "0x7FF73FD95720",
      "description": "A container for monitor objects",
      "properties": []
    },
    "0x7FF73FE98C80": {
      "name": "Pult",
      "base": "0x7FF73FE7E690",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F893E80",
      "description": "An object that represents a single user seat (own displays, own command line, own de-coupled input)",
      "properties": []
    },
    "0x7FF73FE99220": {
      "name": "UI2DView",
      "base": "0x7FF73FDB33B0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE9D510": {
      "name": "FrameBufferObject",
      "base": "0x7FF73FDCE230",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A OpenGL implementation of framebuffer to be used by the graphics engine.",
      "properties": []
    },
    "0x7FF73FE9BED0": {
      "name": "WingLocalDisplay",
      "base": "0x7FF73FE9A2E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE9B940",
      "properties": []
    },
    "0x7FF73FE9B940": {
      "name": "DisplayCollect",
      "base": "0x7FF73FE1BD00",
      "child": "0x7FF73FE9A2E0",
      "parent": "0x7FF73FE98C80",
      "description": "A container for all logical displays",
      "properties": []
    },
    "0x7FF73FE9A2E0": {
      "name": "Display",
      "base": "0x7FF73FE86A40",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE9B940",
      "description": "OpenGL version of Display",
      "properties": []
    },
    "0x7FF73FE9AE20": {
      "name": "GraphicsRoot",
      "base": "0x7FF73FD95720",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73C41B220",
      "description": "An OpenGL-version of a root object for a complete UI objects hierarchy",
      "properties": []
    },
    "0x7FF73FE9A890": {
      "name": "Shader",
      "base": "0x7FF73FE2A400",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE9E5E0",
      "description": "Shader object (Vertex/Tessellation/Geometry/Fragment)",
      "properties": [
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "Type",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GlShaderTypes"
        }
      ]
    },
    "0x7FF73FE9E5E0": {
      "name": "ShaderProgram",
      "base": "0x7FF73FDB6170",
      "child": "0x7FF73FE9A890",
      "parent": "0x7FF73FE00800",
      "description": "A shader program that consists of shaders of different types",
      "properties": []
    },
    "0x7FF73FE986F0": {
      "name": "ShaderProgramCollect",
      "base": "0x7FF73FE00800",
      "child": "0x7FF73FDB6170",
      "parent": "0x7FF73FD95720",
      "description": "OpenGL A container for shader programs",
      "properties": []
    },
    "0x7FF73FE9CF80": {
      "name": "ContentManager",
      "base": "0x7FF73FDA0B70",
      "child": "0x7FF73FDDEEA0",
      "parent": "0x7FF73FE14210",
      "properties": []
    },
    "0x7FF73FE9DAA0": {
      "name": "Fonts",
      "base": "0x7FF73FE83D80",
      "child": "0x7FF73FDBE630",
      "parent": "0x7FF73FE14210",
      "description": "A texture atlas and a container for font objects (class Font) that are stored in this texture atlas",
      "properties": []
    },
    "0x7FF73FE997B0": {
      "name": "Textures",
      "base": "0x7FF73FE479B0",
      "child": "0x7FF73FDDEEA0",
      "parent": "0x7FF73FE14210",
      "description": "A texture atlas and a container for texture objects (of classes Texture or Backdrop) that are stored in this texture atlas",
      "properties": []
    },
    "0x7FF73FE9B3B0": {
      "name": "TextureCollect",
      "base": "0x7FF73FE14210",
      "child": "0x7FF73FE205F0",
      "parent": "0x7FF73FD95720",
      "description": "A container for textures (texture array)",
      "properties": []
    },
    "0x7FF73FEA1860": {
      "name": "MainDlgFixtureSetup",
      "base": "0x7FF73FF93820",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to edit objects in the fixture setup",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MainDlgFixtureSetupGl::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::MainDlgFixtureSetupGl::ActionOnShow3dSettings(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnShow3dSettings",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnShow3dSettings(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        }
      ]
    },
    "0x7FF73FEA12D0": {
      "name": "Pult",
      "base": "0x7FF73FF96AA0",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F893E80",
      "properties": []
    },
    "0x7FF73FEA4750": {
      "name": "WindowFixturetypeVisualizer",
      "base": "0x7FF73FEA30D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::WindowFixturetypeVisualizer::ActiveController>::`vftable'",
          "name": "ActiveController",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Translation",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsWorldCoordinateSystemActive",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsCameraFocusOnSelectedItem",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEA30D0": {
      "name": "MeshPreview",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Mesh>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEA4CE0": {
      "name": "LayoutCanvas",
      "base": "0x7FF73FF07D80",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA08A0": {
      "name": "ColorEngineDebugView",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA41B0": {
      "name": "WindowMeshStatistics",
      "base": "0x7FF73FDB33B0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FE9F640": {
      "name": "WindowTextureStatistics",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA0310": {
      "name": "SelectionView",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA3C10": {
      "name": "LivePatchView3D",
      "base": "0x7FF73FEA26E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "the window for the 3d in the live patch ui context.",
      "properties": []
    },
    "0x7FF73FEA26E0": {
      "name": "PatchView3D",
      "base": "0x7FF73FEA5E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "the window for the 3d in the patch ui context.",
      "properties": []
    },
    "0x7FF73FEA5E00": {
      "name": "View3D",
      "base": "0x7FF73FE99220",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionFrame",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "LockTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "locked_big_red",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "GearTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "settings",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<float>::`vftable'",
          "name": "CurrentFps",
          "TypeNameStr": "Float",
          "subtype": 2,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::View3D::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::View3D::ActionOnReloadCamera(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ReloadCamera",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ReloadCamera(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::View3D::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::View3D::ActionOnResetCamera(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ResetCamera",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResetCamera(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::View3D::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::View3D::ActionOnAnalyzeMeshPool(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "AnalyzeMeshPool",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:AnalyzeMeshPool(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::View3D::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::View3D::ActionOnSelectionToGrid(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "SelectionToGrid",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SelectionToGrid(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        }
      ]
    },
    "0x7FF73FFBC210": {
      "name": "CommandWingBarContainer",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A window with a representation of hardware button controls and assigned functionality",
      "properties": []
    },
    "0x7FF73FF3FE40": {
      "name": "CommandWingBarWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF90B20": {
      "name": "CommandWingBarPlaybackContent",
      "base": "0x7FF73FF7BCD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFDB5B0": {
      "name": "WindowEncoderBar",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF763B0": {
      "name": "AuxValueControl",
      "base": "0x7FF73FE5ABB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "AuxProperty",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEDF470": {
      "name": "TimecodeTextGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEA8C40": {
      "name": "TimecodeTextGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF9E9B0": {
      "name": "TCTimeButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC7EB0": {
      "name": "TimecodeEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeEditor::*)(class DB::Object *, class DB::SetParam &), {protected: bool Gma3UI::TimecodeEditor::OnSGResizeStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SGResizeStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeEditor::*)(class DB::Object *, class DB::SetParam &, short, short), {protected: bool Gma3UI::TimecodeEditor::OnSGResizeMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "SGResizeMove",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeEditor::*)(class DB::Object *, class DB::SetParam &), {protected: bool Gma3UI::TimecodeEditor::OnSGResizeEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SGResizeEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF24DF0": {
      "name": "TimecodeBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::TimecodeBar::EncoderFunction>::`vftable'",
          "name": "EncoderFunction",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "TimecodeEncoderFunction"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Gma3UI::TimecodeGrid>>::`vftable'",
          "name": "Grid",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF21A90": {
      "name": "TimecodeWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeWindow::*)(class DB::Object *, class DB::SetParam &), {protected: bool Gma3UI::TimecodeWindow::OnSGResizeStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SGResizeStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeWindow::*)(class DB::Object *, class DB::SetParam &, short, short), {protected: bool Gma3UI::TimecodeWindow::OnSGResizeMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "SGResizeMove",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeWindow::*)(class DB::Object *, class DB::SetParam &), {protected: bool Gma3UI::TimecodeWindow::OnSGResizeEnd(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SGResizeEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RT_ResizeEnd(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FEC2860": {
      "name": "TimecodeGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEFC220": {
      "name": "TimecodeGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "TimeCursorColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Timecode.TimeCursor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct DB::TimeView>::`vftable'",
          "name": "CurrentTimeView",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionResetView(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetView",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionZoomIn(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ZoomIn",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionZoomOut(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ZoomOut",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCBackward(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeBackward",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCRecord(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeRecord",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCForward(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeForward",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCStop(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeStop",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCPause(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodePause",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCPlay(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodePlay",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCPrevMarker(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodePrevMarker",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCNextMarker(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeNextMarker",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCCopy(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectionCopy",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCCut(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectionCut",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCPaste(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectionPaste",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCAddEvent(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeAddEvent",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:TCAddEvent(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCAddMultiEvents(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeAddMultiEvents",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:TCAddMultiEvents(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCAddTimeRange(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeAddTimeRange",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:TCAddTimeRange(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TimecodeGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TimecodeGrid::ActionTCAddTimeMarker(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TimecodeAddTimeMarker",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:TCAddTimeMarker(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEC1D40": {
      "name": "TimeMarkerTimelineCell",
      "base": "0x7FF73FED6B70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF403D0": {
      "name": "TrackGroupTimelineCell",
      "base": "0x7FF73FEE4F30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that is supposed to visualize a timeline for a timecode group track",
      "properties": []
    },
    "0x7FF73FED6B70": {
      "name": "TrackTimelineCell",
      "base": "0x7FF73FEE4F30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that is supposed to visualize a timeline for a timecode track",
      "properties": []
    },
    "0x7FF73FFDDBE0": {
      "name": "TimelineHeaderCell",
      "base": "0x7FF73FEFD8D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component that represents timeline for time code",
      "properties": []
    },
    "0x7FF73FEE4F30": {
      "name": "TimelineDataCell",
      "base": "0x7FF73FEFD8D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEFD8D0": {
      "name": "TimelineCell",
      "base": "0x7FF73FD9E740",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFD9110": {
      "name": "SpecialExecutorKey",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A base class for all special dialogs",
      "properties": []
    },
    "0x7FF73FF81320": {
      "name": "OutputTest",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A test of performance",
      "properties": []
    },
    "0x7FF73FED4ED0": {
      "name": "PSRTabs",
      "base": "0x7FF73FF917E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC1C00",
      "properties": []
    },
    "0x7FF73FFCD950": {
      "name": "ResultPoolWindow",
      "base": "0x7FF73FFC8350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "An abstract pool UI component",
      "properties": []
    },
    "0x7FF73FED40F0": {
      "name": "PSRResultShowGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FED4680": {
      "name": "PSRImportGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE2000": {
      "name": "PSRImportMainDialog",
      "base": "0x7FF73FFB7260",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to import elements from PSR",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PSR::ImportMainDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PSR::ImportMainDialog::OnSelectedTreeItem(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSelectedTreeItem",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSelectedTreeItem(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PSR::ImportMainDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PSR::ImportMainDialog::OnScrolledTreeItem(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnScrolledTreeItem",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnScrolledTreeItem(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF4B560": {
      "name": "PsrImportPoolWindow",
      "base": "0x7FF73FFC8350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC8350",
      "properties": []
    },
    "0x7FF73FF23D30": {
      "name": "PsrPoolGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC8350",
      "properties": []
    },
    "0x7FF73FF048A0": {
      "name": "PSRPatchMainDialog",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to merge the PSR patch",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::PSR::PatchSheetSettings>>::`vftable'",
          "name": "Settings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::SetAllTLocal(void), 0}>::`vftable'",
          "name": "SetAllToLocal",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::SetAllToPsr(void), 0}>::`vftable'",
          "name": "SetAllToPsr",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::MergePSR(void), 0}>::`vftable'",
          "name": "MergePsr",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::MergeLocal(void), 0}>::`vftable'",
          "name": "MergeLocal",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::ChooseNone(void), 0}>::`vftable'",
          "name": "ChooseNone",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::ChooseSelected(void), 0}>::`vftable'",
          "name": "ChooseSelected",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::ToggleSelected(void), 0}>::`vftable'",
          "name": "ToggleSelected",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::ResetFixtureMatch(void), 0}>::`vftable'",
          "name": "ResetFixtureMatch",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::PSR::PatchMainDialog::*)(void), {public: void Gma3UI::PSR::PatchMainDialog::CreateFilterLists(void), 0}>::`vftable'",
          "name": "CreateFilterLists",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF85B50": {
      "name": "PSRPatchGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEAEF50": {
      "name": "TitleAutoLayout",
      "base": "0x7FF73FDCBBE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "WindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoSetWindowSettings",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEC6210": {
      "name": "EditTitlebarButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF36050": {
      "name": "TitlebuttonControl",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFAEF10": {
      "name": "UIDmxCurveEditor",
      "base": "0x7FF73FEF8730",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF9C240": {
      "name": "DeleteCueMessageBox",
      "base": "0x7FF73FEFB830",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Customized message box for cue delete operation",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "MoveValueToPart",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MoveValueToPart"
        }
      ]
    },
    "0x7FF73FFAA840": {
      "name": "StoreCueMessageBox",
      "base": "0x7FF73FEFB830",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Customized message box for cue store operation",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::StoreMode>::`vftable'",
          "name": "CueStoreOp",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "StoreMode"
        }
      ]
    },
    "0x7FF73FF5FBD0": {
      "name": "CopyCueMessageBox",
      "base": "0x7FF73FEFB830",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Customized message box for cue copy configuring purposes",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueSrc",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueCopySrc"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueDst",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueCopyDst"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueDstOp",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueCopyDstMode"
        }
      ]
    },
    "0x7FF73FEFB830": {
      "name": "CopyStoreCueMessageBoxBase",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Customized message box for cue copy/store configuring purposes",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::TrackingShield>::`vftable'",
          "name": "TrackingShield",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Tracking shield option",
          "Enum": "TrackingShieldPopup"
        },
        {
          "CTypeName": "const DB::Property<enum DB::CueOperationMode>::`vftable'",
          "name": "CueOperationMode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Cue Only",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueOperationMode"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DimmerCueOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "CueOnly",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "CueOnly"
        }
      ]
    },
    "0x7FF73FFA9D20": {
      "name": "MainDlgLeaveSessionButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF48FA0": {
      "name": "MainDlgJoinSessionButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF6E630": {
      "name": "MainDlgDismissStationButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF06CD0": {
      "name": "MainDlgInviteStationButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF6B080": {
      "name": "UiStationGrid",
      "base": "0x7FF73FE02180",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF902C0": {
      "name": "ShaperEncoderControl",
      "base": "0x7FF73FDD7F70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB1F10": {
      "name": "PhaserEncoderControl",
      "base": "0x7FF73FF80390",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC94F0": {
      "name": "PhaserStepSheet",
      "base": "0x7FF73FEB42E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF573F0": {
      "name": "PhaserBar",
      "base": "0x7FF73FF48A10",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFBD000": {
      "name": "PhaserEditorBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::PhaserUI::Bar::EncoderFunction>::`vftable'",
          "name": "EncoderFunction",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PhaserEncoderFunction"
        }
      ]
    },
    "0x7FF73FFDB020": {
      "name": "PhaserLayoutGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FunctionMode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "FunctionMode"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PhaserUI::LayoutGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PhaserUI::LayoutGrid::OnToggleAtFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ToggleAtFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ToggleAtFilter(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFCE9A0": {
      "name": "UIPhaserTimeLineGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC8F60": {
      "name": "UIPhaserTimeLine",
      "base": "0x7FF73FEF8730",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEC8440": {
      "name": "PhaserUICenter",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF8730": {
      "name": "GraphEditor",
      "base": "0x7FF73FFBFFC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFBAD00": {
      "name": "PhaserPathEditor",
      "base": "0x7FF73FF72590",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF61550": {
      "name": "PhaserSpeedEditor",
      "base": "0x7FF73FF72590",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF209E0": {
      "name": "PhaserPhaseEditor",
      "base": "0x7FF73FF72590",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC89D0": {
      "name": "PhaserWidthEditor",
      "base": "0x7FF73FF72590",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF72590": {
      "name": "EditorBase",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::EditorBase::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::EditorBase::OnEditorFunction(class DB::Object *, class DB::SetParam &), 0, 0, 0}>::`vftable'",
          "name": "OnFunction",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnFunction(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEEA200": {
      "name": "AppearanceTitleBar",
      "base": "0x7FF73FEB9820",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": []
    },
    "0x7FF73FEB9820": {
      "name": "NormedTitleBar",
      "base": "0x7FF73FE1CB50",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "TitleBar normed to 1/2 of one screen height grid",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RasterHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RasterWidth",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FED01A0": {
      "name": "DialogTrackpad",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFBD590": {
      "name": "TrackpadPanTiltControl",
      "base": "0x7FF73FF80390",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC1200": {
      "name": "TrackpadMouseControl",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Cursor",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "cursor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEED360": {
      "name": "MouseButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::Input::MouseButtonType>::`vftable'",
          "name": "MouseButtonType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MouseButtonTypes"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MouseButton::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::MouseButton::ActionResetMouse(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResetMouse",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MB_ResetMouse(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FED0A00": {
      "name": "InfoNotesText",
      "base": "0x7FF73FFD32C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC3D80",
      "properties": []
    },
    "0x7FF73FF157A0": {
      "name": "InfoNotesLevel",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC3D80",
      "properties": []
    },
    "0x7FF73FEB9290": {
      "name": "InfoNotesLabel",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC3D80",
      "properties": []
    },
    "0x7FF73FFC3D80": {
      "name": "InfoNotesWrapper",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF66A10",
      "properties": []
    },
    "0x7FF73FF66A10": {
      "name": "InfoNotesGridScroller",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FFC3D80",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA9790": {
      "name": "ReferencesContainer",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ReferencesContainer::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ReferencesContainer::ActionToggleListRef(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ToggleListRef",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ToggleListRef(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Toggle the presence of the 'ListReference' command in the command line"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::ReferencesContainer::*, 1552>::`vftable'",
          "name": "OnListRefDone",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF8EC80": {
      "name": "ReferencesGrid",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFAA2B0": {
      "name": "SettingsBox",
      "base": "0x7FF73FE53A90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::SettingsBox::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::SettingsBox::SaveToDefaultAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SaveToDefault",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::SettingsBox::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::SettingsBox::LoadFromDefaultAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "LoadFromDefault",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF715F0": {
      "name": "TouchTarget",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB5260": {
      "name": "TouchConfigurator",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FFD5A20",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFD5A20": {
      "name": "TouchMonitor",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TouchMonitor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TouchMonitor::ActionMapClicked(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "MapClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Handle of a map button click event"
        }
      ]
    },
    "0x7FF73FF4FE30": {
      "name": "DialogPrivacyPolicy",
      "base": "0x7FF73FF1C050",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "PrivacyPolicyUrl",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF37170": {
      "name": "DialogTrademarks",
      "base": "0x7FF73FF1C050",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TrademarksUrl",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEE8E20": {
      "name": "DialogReleaseNotes",
      "base": "0x7FF73FF1C050",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ReleaseNotesUrl",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF1C050": {
      "name": "DialogHelp",
      "base": "0x7FF73FE9E040",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::DialogHelp::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::DialogHelp::ActionSearch(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Search",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:WV_Search(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF95B10": {
      "name": "HelpPopup",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFB1500": {
      "name": "LayoutBar",
      "base": "0x7FF73FFD8B80",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF07D80": {
      "name": "LayoutCanvas",
      "base": "0x7FF73FE9D510",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionFrame",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "WindowCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IndicatorIconBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.IndicatorIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IndicatorIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::LayoutCanvas::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::LayoutCanvas::OnZoomToFit(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnZoomToFit",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnZoomToFit(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::LayoutCanvas::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::LayoutCanvas::OnSetRecalcCenterOfGravity(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSetRecalcCenterOfGravity",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSetRecalcCenterOfGravity(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::LayoutCanvas::*)(class DB::Object *, class DB::SetParam &, double), {public: bool Gma3UI::LayoutCanvas::OnForceScale(class DB::Object *, class DB::SetParam &, double), 0}>::`vftable'",
          "name": "ForceScale",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ForceScale(s;d;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<class DB::Handle<class DB::LayoutElement> (Gma3UI::LayoutCanvas::*)(unsigned int), {public: class DB::Handle<class DB::LayoutElement> Gma3UI::LayoutCanvas::GetSelectedElement(unsigned int), 0}>::`vftable'",
          "name": "GetSelectedObject",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<unsigned int (Gma3UI::LayoutCanvas::*)(void), {public: unsigned int Gma3UI::LayoutCanvas::GetSelectedObjectCount(void), 0}>::`vftable'",
          "name": "GetSelectedObjectCount",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutCanvas::*)(void), {public: void Gma3UI::LayoutCanvas::SelectionToGrid(void), 0}>::`vftable'",
          "name": "SelectionToGrid",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutCanvas::*)(void), {public: void Gma3UI::LayoutCanvas::OnAlignSelected(void), 0}>::`vftable'",
          "name": "AlignSelected",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "ScaleAll",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<double>::`vftable'",
          "name": "RatioAll",
          "TypeNameStr": "Double",
          "subtype": 3,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFAB500": {
      "name": "LayoutView",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Layout>>::`vftable'",
          "name": "Layout",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::LayoutView::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::LayoutView::OnEditCurrentLayout(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnEditCurrentLayout",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnEditCurrentLayout(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEA7B90": {
      "name": "RecipeWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE5880": {
      "name": "SpecialWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF2B430": {
      "name": "CloneFilterButton",
      "base": "0x7FF73FDF3E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF16B80": {
      "name": "CloneAtFilterSelector",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FECE960": {
      "name": "CloningDialog",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionChangeCloningViewMode(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangeCloningViewMode",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionDoClone(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DoClone",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenSequenceFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenSequenceFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenGroupFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenGroupFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenPresetFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenPresetFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenWorldFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenWorldFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenLayoutFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenLayoutFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionAllItemsToAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "AllItemsToAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionAllItemsToNone(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "AllItemsToNone",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionInitTargetList(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "InitTargetList",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionFlipLeftRight(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "FlipLeftRight",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Graphics::CloneGrid>>::`vftable'",
          "name": "CloneSourceGrid",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Graphics::CloneGrid>>::`vftable'",
          "name": "CloneDestinationGrid",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloningDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloningDialog::ActionOpenAtFilter(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OpenAtFilter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to open AtFilter overlay"
        }
      ]
    },
    "0x7FF73FF57C50": {
      "name": "CloneFilterGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEDCAB0": {
      "name": "CloneFilterGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FF75880": {
      "name": "CloneGrid",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::ReTriggerInit(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "ReTriggerInit",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to reinit clone grid"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::AddSelectedFixtures(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "AddSelectedFixtures",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to add selected fixtures to clone grid"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::ClearGrid(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "ClearGrid",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to empty clone grid"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridMoveUp(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridMoveUp",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridMoveDown(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridMoveDown",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridCopy(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridCopy",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridPaste(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridPaste",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridAdd(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridAdd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridDelete(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridDelete",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridCut(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridCut",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridFillUp(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridFillUp",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to modify clone grid content"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Graphics::CloneGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Graphics::CloneGrid::GridUnify(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "GridUnify",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to unify clone grid content"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsCloneDestination",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::CloningWindowSettings>>::`vftable'",
          "name": "Settings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class Graphics::CloneGrid>>::`vftable'",
          "name": "ScrollBuddy",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF77F90": {
      "name": "CloneGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF5F0B0": {
      "name": "CloneGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FFE74D0": {
      "name": "ShaperWindowContent",
      "base": "0x7FF73FF2C3B0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF503C0": {
      "name": "DatumInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::DatumMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DatumMode"
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Hour",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Minute",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Second",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<signed char>::`vftable'",
          "name": "Day",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Time::Month>::`vftable'",
          "name": "Month",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Month"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "Year",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::DatumInput::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::DatumInput::SetDateToday(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetDateToday",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::DatumInput::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::DatumInput::SetTimeNow(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetTimeNow",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF0D900": {
      "name": "AgendaMonthsGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFD6CD0": {
      "name": "AgendaDaysGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::GridModeAgenda>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "GridModeAgenda"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceSmallMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowVisibleDay",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEE2B60": {
      "name": "WindowAgenda",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::WindowAgenda::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::WindowAgenda::DeleteOld(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DeleteOld",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::WindowAgenda::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::WindowAgenda::OnToolOperate(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnToolOperate",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::WindowAgenda::*)(void), {public: bool Gma3UI::WindowAgenda::CanPaste(void), 0}>::`vftable'",
          "name": "CanPaste",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FFEB490": {
      "name": "ShaperTestView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEBC7E0": {
      "name": "CustomMasterLayoutGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CustomMasterLayoutGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CustomMasterLayoutGrid::OnTitleClickAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnTitleClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        }
      ]
    },
    "0x7FF73FECC790": {
      "name": "WindowTrackpad",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF59300": {
      "name": "ColorTestView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEEF7F0": {
      "name": "ColorPickerContent",
      "base": "0x7FF73FF2C3B0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF2C3B0": {
      "name": "SpecialWindowContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "WindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to a settings object"
        }
      ]
    },
    "0x7FF73FF42480": {
      "name": "BladeView",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FF7D0B0",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF48020": {
      "name": "WindowInfo",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE98A0": {
      "name": "XKeysViewWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEAAFA0": {
      "name": "XKeysViewExecutorBar",
      "base": "0x7FF73FF0E880",
      "child": "0x7FF73FDA7350",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF5F640": {
      "name": "XKeysHardwareButton",
      "base": "0x7FF73FF80930",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA8DA0": {
      "name": "XKeysHardwareMiniEncoder",
      "base": "0x7FF73FECE100",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEFE850": {
      "name": "PlaybackViewWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFBF490": {
      "name": "WindowHelpViewer",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show html help",
      "properties": []
    },
    "0x7FF73FF0E2F0": {
      "name": "ClockWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show clock",
      "properties": []
    },
    "0x7FF73FED2EA0": {
      "name": "DateClock",
      "base": "0x7FF73FFD0770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show a date clock",
      "properties": []
    },
    "0x7FF73FEBBDF0": {
      "name": "TimerClock",
      "base": "0x7FF73FF61DC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show a timer clock",
      "properties": []
    },
    "0x7FF73FF61DC0": {
      "name": "TimecodeSlotClock",
      "base": "0x7FF73FFD0770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show  a timecode slot clock",
      "properties": []
    },
    "0x7FF73FF75030": {
      "name": "AnalogClock",
      "base": "0x7FF73FFD2D30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show analog clock",
      "properties": []
    },
    "0x7FF73FFD0770": {
      "name": "DigitalClock",
      "base": "0x7FF73FFD2D30",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show digital clock",
      "properties": []
    },
    "0x7FF73FFD2D30": {
      "name": "BaseClock",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show analog clock",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseSpecialTimezone",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFEBA20": {
      "name": "PixelSymbol",
      "base": "0x7FF73FF9F930",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD0770",
      "description": "A UI component used to show some symbol",
      "properties": []
    },
    "0x7FF73FF00750": {
      "name": "SeparatorSymbol",
      "base": "0x7FF73FF9F930",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD0770",
      "description": "A UI component used to show separator btween digits",
      "properties": []
    },
    "0x7FF73FF9F930": {
      "name": "BaseSymbol",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD0770",
      "description": "A UI component used to show separator btween digits",
      "properties": []
    },
    "0x7FF73FEF9980": {
      "name": "SystemMonitorWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI component used to show ansi-colored system messages",
      "properties": []
    },
    "0x7FF73FEC7060": {
      "name": "PhaserViewWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF39010": {
      "name": "StepControl",
      "base": "0x7FF73FDCBBE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE85F0": {
      "name": "PosCalibrationView",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC0C70": {
      "name": "PosCalibGridData",
      "base": "0x7FF73C26B520",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FFC6E30": {
      "name": "SelectionViewWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFBC7A0": {
      "name": "SoundBeatView",
      "base": "0x7FF73FFBFFC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FECB6E0": {
      "name": "SoundWaveView",
      "base": "0x7FF73FFBFFC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF42E70": {
      "name": "SoundLevelView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LevelColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Level",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PeakColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Peak",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEC22D0": {
      "name": "SoundBandView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Band",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "All",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SoundValues"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "LevelColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Level",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "TriggerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Trigger",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TriggerTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "PhaserBeam",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF18500": {
      "name": "SyncTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEFDE60": {
      "name": "NetworkTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF9120": {
      "name": "ChannelTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB16B0": {
      "name": "FaderTestView",
      "base": "0x7FF73FD88760",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF46830": {
      "name": "PerformanceView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "GridColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Grid1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEC37E0": {
      "name": "StatusWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An abstract status UI component",
      "properties": []
    },
    "0x7FF73FFBFFC0": {
      "name": "SignalView",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "GridColor1",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Grid1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "GridColor2",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Grid2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SignalColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Oscilloscope.Signal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SignalTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "tiny_cross",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "Border",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF45A40": {
      "name": "ShowCreatorTypeControl",
      "base": "0x7FF73FE5ABB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF3BD10": {
      "name": "ShowCreatorSubpoolSelectorList",
      "base": "0x7FF73FED9290",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FED16C0": {
      "name": "ShowCreatorPoolGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC8350",
      "properties": []
    },
    "0x7FF73FEE5920": {
      "name": "ShowCreatorFTPresetsMainDialog",
      "base": "0x7FF73FFB7260",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A dialog for storing / creating ft presets",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FTPresetCollect",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ShowCreatorFTPresetsMainDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ShowCreatorFTPresetsMainDialog::OnFixtureSourceChanged(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnFixtureSourceChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnFixtureSourceChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::ShowCreatorFTPresetsMainDialog::*)(void), {public: void Gma3UI::ShowCreatorFTPresetsMainDialog::SetFTPresetGridTarget(void), 0}>::`vftable'",
          "name": "SetFTPresetGridTarget",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::ShowCreatorFTPresetsMainDialog::*)(void), {public: void Gma3UI::ShowCreatorFTPresetsMainDialog::SetChannelSetGridTarget(void), 0}>::`vftable'",
          "name": "SetChannelSetGridTarget",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FFB7260": {
      "name": "ShowCreatorMainDialogBase",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::ShowCreatorSettings>>::`vftable'",
          "name": "Settings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ShowCreatorMainDialogBase::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ShowCreatorMainDialogBase::OnCheckSubPoolSelector(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCheckSubPoolSelector",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCheckSubPoolSelector(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AllIndexesCollected",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::ShowCreatorMainDialogBase::ShowCreatorType>::`vftable'",
          "name": "ShowCreatorType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ShowCreatorType"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ShowCreatorMainDialogBase::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ShowCreatorMainDialogBase::OnSelectDataPool(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSelectDataPool",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSelectDataPool(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ShowCreatorMainDialogBase::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ShowCreatorMainDialogBase::OnCollectAllIndexes(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCollectAllIndexes",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCollectAllIndexes(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF31F70": {
      "name": "OSMidiSelect",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsMidiOut",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF1F340": {
      "name": "OSMidiGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF87790": {
      "name": "TimezoneInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEAF940": {
      "name": "TimezoneGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF9EF40": {
      "name": "DBObjectTab",
      "base": "0x7FF73FE788E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "TargetObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to an object that should be taken as a source for the tabs"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IncludeTarget",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines if a target object itself should be a tab",
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF38220": {
      "name": "ObjTreeViewFrame",
      "base": "0x7FF73FFDAA90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF3AD90": {
      "name": "PSRTreeViewFrame",
      "base": "0x7FF73FFDAA90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::TreeView::PSRFrame::*, 2168>::`vftable'",
          "name": "Scrolled",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:str"
        }
      ]
    },
    "0x7FF73FF74370": {
      "name": "TreeNameButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFACBB0",
      "properties": []
    },
    "0x7FF73FFCEF30": {
      "name": "SelectButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF74370",
      "properties": []
    },
    "0x7FF73FEFA770": {
      "name": "TreeExpandButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFACBB0",
      "properties": []
    },
    "0x7FF73FFACBB0": {
      "name": "TreeViewRow",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF2AA40",
      "properties": []
    },
    "0x7FF73FF2AA40": {
      "name": "TreeViewRows",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FFACBB0",
      "parent": "0x7FF73FFDAA90",
      "properties": []
    },
    "0x7FF73FFDAA90": {
      "name": "TreeViewFrame",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ExpandedTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "triangle_down",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ContractedTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "triangle_right",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "LineHeightAdd",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "10",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "LineSpacing",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "2",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TreeView::Frame::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TreeView::Frame::OnExpandAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnExpandAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnExpandAll(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TreeView::Frame::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TreeView::Frame::OnCollapseAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCollapseAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCollapseAll(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TreeView::Frame::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TreeView::Frame::OnExpandSelected(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnExpandSelected",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnExpandSelected(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::TreeView::Frame::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::TreeView::Frame::OnClearSelection(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnClearSelection",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClearSelection(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEF4120": {
      "name": "WindowTypeGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF76C10": {
      "name": "WindowTypeGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF632D0": {
      "name": "SelectedGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEC4E90": {
      "name": "SelectedGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEDE0F0": {
      "name": "OopsGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFB7F20": {
      "name": "FTInfoGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct DB::FTInfo::Channel, struct Container::CollectPolicies<struct DB::FTInfo::Channel>>>::`vftable'",
          "name": "Channels",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF9A730": {
      "name": "FixtureTypeGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF45FD0": {
      "name": "FixtureTypeGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFDF9C0": {
      "name": "CueInputGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEB6050": {
      "name": "CueInputGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "HiglightActiveCue",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEEBE50": {
      "name": "LayoutEditorGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutEditorGrid::*)(void), {public: void Gma3UI::LayoutEditorGrid::PreselectEntries(void), 0}>::`vftable'",
          "name": "PreselectEntries",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FFC4310": {
      "name": "AgendaGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::AgendaGrid::*, 20400>::`vftable'",
          "name": "LassoFinished",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:LassoFinished(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF54300": {
      "name": "ProgrammerGridCell",
      "base": "0x7FF73FF5A830",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEDDB60": {
      "name": "ProgrammerGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF32A90": {
      "name": "ProgUpdateGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ProgUpdateGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Gma3UI::ProgUpdateGrid::ActionScrollToRow(class DB::Object *, class DB::SetParam &, unsigned int), 0}>::`vftable'",
          "name": "ScrollToRow",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to scroll to row"
        }
      ]
    },
    "0x7FF73FF05950": {
      "name": "MeshLineEdit",
      "base": "0x7FF73FE7E100",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Mesh>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFC37F0": {
      "name": "MeshMaterialGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FFAF4A0": {
      "name": "NormedGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An UILayoutGrid that is normed to the screen-grid",
      "properties": [
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RasterHeight",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "RasterWidth",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEAA020": {
      "name": "GelGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF099B0": {
      "name": "GelGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "GelGridSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF4F310": {
      "name": "ContentView",
      "base": "0x7FF73FDCF4E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDCF4E0",
      "properties": []
    },
    "0x7FF73FEA8120": {
      "name": "ContentWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowManualCueSelection",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ContentChanged",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF101F0": {
      "name": "SequenceWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Sequence>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFA7FB0": {
      "name": "SequenceCmdRunButton",
      "base": "0x7FF73FE21440",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FD963E0",
      "properties": []
    },
    "0x7FF73FFD7540": {
      "name": "SequenceGridCell",
      "base": "0x7FF73FF5A830",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEFF240": {
      "name": "SequenceGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::SequenceGrid::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Gma3UI::SequenceGrid::ActionSelectionChanged(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "SelectionChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73FEAD040": {
      "name": "OutputConfigGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF2BE20": {
      "name": "OutputConfigGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF4CFB0": {
      "name": "TagGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF68A40": {
      "name": "ContentSheetGridCell",
      "base": "0x7FF73FF7FE00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FEEE870": {
      "name": "ContentSheetGridScroller",
      "base": "0x7FF73FDF4390",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Cue>>::`vftable'",
          "name": "ShownCue",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ContentSheetGridScroller::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ContentSheetGridScroller::ActionObtainCurrentCue(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ObtainCurrentCue",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73FEAA5B0": {
      "name": "ContentSheet",
      "base": "0x7FF73FFD8060",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FF9FEC0": {
      "name": "ContentCheckBox",
      "base": "0x7FF73FDF1D40",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB0460": {
      "name": "GridPatchContentFilterEditor",
      "base": "0x7FF73FF1F8D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF1F8D0": {
      "name": "GridContentFilterEditor",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::GridContentFilter>>::`vftable'",
          "name": "ContentFilter",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GridContentFilterEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GridContentFilterEditor::ActionDeleteFilterItem(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DeleteFilterItem",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:DeleteFilterItem(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GridContentFilterEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GridContentFilterEditor::ActionAddFilterItem(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "AddFilterItem",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:AddFilterItem(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFD8060": {
      "name": "FixtureSheet",
      "base": "0x7FF73FEB42E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": []
    },
    "0x7FF73FF7FE00": {
      "name": "FixtureSheetGridCell",
      "base": "0x7FF73FF33480",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF08E90": {
      "name": "TrackSheetGridCell",
      "base": "0x7FF73FF33480",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF33480": {
      "name": "PhaserGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "Indicator",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "white",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IndicatorBack",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "transp",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "IndicatorFrame",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "frame_indicator_rect",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "IndicatorBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "MaxIndicatorSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "20",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF8CD70": {
      "name": "DmxSheetGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF51610": {
      "name": "DMXSheet",
      "base": "0x7FF73FEB42E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::DmxSheet::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::DmxSheet::OnUniverseUpClickedAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnUniverseUpClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnUniverseUpClicked(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:button type uint8_t, 2:X pixel_t, 3:Y pixel_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::DmxSheet::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::DmxSheet::OnUniverseDownClickedAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnUniverseDownClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnUniverseDownClicked(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:button type uint8_t, 2:X pixel_t, 3:Y pixel_t"
        }
      ]
    },
    "0x7FF73FEB42E0": {
      "name": "GenericSheet",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF5A830": {
      "name": "DBObjectGridCell",
      "base": "0x7FF73FE08BD0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF99ED0": {
      "name": "PatchFixtureGrid",
      "base": "0x7FF73FEE3550",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEE3550": {
      "name": "DBObjectGrid",
      "base": "0x7FF73FD93DB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF7C6C0": {
      "name": "ProgressButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF3D550": {
      "name": "MessageCenterWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF3B320",
      "properties": []
    },
    "0x7FF73FF94FF0": {
      "name": "MessageCenterInfoButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF3B90": {
      "name": "MessageCenterButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEAD8A0",
      "properties": []
    },
    "0x7FF73FEAD8A0": {
      "name": "UiMessageCenter",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FEF3B90",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF84A80": {
      "name": "DeskLightsFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB3D50": {
      "name": "GrandMasterFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF55D40": {
      "name": "ShaperPovFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFC2730": {
      "name": "ShaperEditorFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF91D70",
      "properties": []
    },
    "0x7FF73FF91D70": {
      "name": "ShaperEditorFaderGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF05EE0": {
      "name": "ColorPickerFader",
      "base": "0x7FF73FF7D640",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DrawInbetweenValues",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF7D640": {
      "name": "ColorInterfaceFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::ColorInterfaceFader::*, 1864>::`vftable'",
          "name": "OnCreateNewAppearance",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FEB8D00": {
      "name": "UserEncoderPageSelector",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFC0820": {
      "name": "EncoderBankRadioButton",
      "base": "0x7FF73FEF3070",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FEDB2D0": {
      "name": "EncoderBankSelector",
      "base": "0x7FF73FED9290",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EditEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFCBBC0": {
      "name": "AttributeRadioButton",
      "base": "0x7FF73FEF3070",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FF242C0": {
      "name": "AttributeRadioButtonList",
      "base": "0x7FF73FED9290",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEBB590": {
      "name": "FeatureRadioButtonList",
      "base": "0x7FF73FED9290",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FED9290": {
      "name": "ChildRadioButtonList",
      "base": "0x7FF73FE8A3F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseCommandlineClick",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEF3070": {
      "name": "RadioItemButtonWithIndicator",
      "base": "0x7FF73FE484D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ProgIndicator",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "rect_indicator",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ProgIndicatorBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF04310": {
      "name": "MainDlgCommandControl",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A window with a representation of hardware button controls and assigned functionality",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MainDlgCommandControl::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::MainDlgCommandControl::ActionOnHardkeyMouseUp(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "HardkeyMouseUp",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MainDlgCommandControl::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::MainDlgCommandControl::ActionOnHardkeyMouseDown(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "HardkeyMouseDown",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73FFE0DB0": {
      "name": "MainDlgDErrorReport",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A dialog UI component that represents 'error report'",
      "properties": []
    },
    "0x7FF73FF93820": {
      "name": "MainDlgFixtureSetup",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to edit objects in the fixture setup",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::MainDlgFixtureSetup::SetupType>::`vftable'",
          "name": "SetupType",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Undefined",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SetupType"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Destination",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Defines the starting destination in the root for this dialog"
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::DmxCurveEditTool>::`vftable'",
          "name": "EditTools",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DmxCurveEditTool"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CloseProhibited",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF56E60": {
      "name": "PatchToOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "Special case of an overlay for PatchTo function",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PatchToOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PatchToOverlay::OnPatchToClickedAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnPatchToClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnPatchToClicked(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PatchToOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PatchToOverlay::OnShowUnpatchedAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnShowUnpatchedClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnShowUnpatchedClicked(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowUnpatchedOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FFC2CC0": {
      "name": "ColorMeasurementOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FixtureToMeasure",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum ColorMeasurement::UprColorMeasuringDevice::MeasurementStatus>::`vftable'",
          "name": "MeasurementStatus",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Idle",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "MeasurementStatus"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ColorMeasurementOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ColorMeasurementOverlay::MeasureColor(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "MeasureColor",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MeasureColor(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ColorMeasurementOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ColorMeasurementOverlay::DarkCalibrate(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DarkCalibrate",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:DarkCalibrate(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ColorMeasurementOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ColorMeasurementOverlay::FindDevice(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "FindDevice",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:FindDevice(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEFAD00": {
      "name": "ObjectView",
      "base": "0x7FF73FDCF4E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDCF4E0",
      "description": "A view UI control that can display DBObject in two columns.",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "TargetObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "LevelLimit",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ObjectView::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ObjectView::ActionUpdate(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Update",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSelectedRow(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        }
      ]
    },
    "0x7FF73FF32500": {
      "name": "RunningPlaybacksPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FF9D1D0",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PoolColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "PoolWindow.Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFEA100": {
      "name": "RunningPlaybacksWindow",
      "base": "0x7FF73FFC8350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<unsigned __int64, struct Container::CollectPolicies<unsigned __int64>>>::`vftable'",
          "name": "RunningPlaybacks",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFCC9A0": {
      "name": "SequenceEditBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::SequenceEditBar::EncoderFunction>::`vftable'",
          "name": "EncoderFunction",
          "TypeNameStr": "Int8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EncoderFunction"
        }
      ]
    },
    "0x7FF73FFD8B80": {
      "name": "StageViewBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::FactoryDefaults(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "FactoryDefaults",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:FactoryDefaults(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "FactoryDefaultsProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::RotateToCircleCenter(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "RotateToCircleCenter",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RotateToCircleCenter(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "RotateToCircleCenterProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::Rotate90ToLine(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "Rotate90ToLine",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Rotate90ToLine(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Rotate90ToLineProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::ResetUnusedAxis(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ResetUnusedAxis",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResetUnusedAxis(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ResetUnusedAxisProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::ResetRotation(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ResetRotation",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResetRotation(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ResetRotationProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::ResetPosition(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ResetPosition",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResetPosition(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ResetPositionProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::Show3DSettings(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "Show3DSettings",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Show3DSettings(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Show3DSettings"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::CenterPosition(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "CenterPosition",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CenterPosition(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "CenterPositionProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::ArrangePosition(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ArrangePosition",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ArrangePosition(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ArrangePositionProperty"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::StageViewBar::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {private: bool Gma3UI::StageViewBar::Oops(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "Oops",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Oops(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "OopsProperty"
        }
      ]
    },
    "0x7FF73FF7EFB0": {
      "name": "ViewBar",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FF11F70",
      "parent": "0x7FF73FE84320",
      "description": "A list of user stored views",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ViewBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ViewBar::ActionSetToTop(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SetToTop",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ViewBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ViewBar::ActionScrollPageDown(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ScrollPageDown",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF11F70": {
      "name": "ViewBarButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF22A10": {
      "name": "EnableMasterFaderButton",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OnColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OffColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Off",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "AlwaysOnColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.AlwaysOn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DisabledColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.Disabled",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF0C380": {
      "name": "OffMenuOverlay",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::OffMenuOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::OffMenuOverlay::OnClearCmdline(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnClearCmdline",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClearCmdline(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEA91D0": {
      "name": "PoolScreen",
      "base": "0x7FF73FF3B320",
      "child": "0x7FF73FFC8350",
      "parent": "0x7FF73FFA8810",
      "properties": []
    },
    "0x7FF73FFA8810": {
      "name": "PoolOverlay",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PoolOverlay::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::PoolOverlay::OnClickAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClick(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEEFD80": {
      "name": "AllPoolFiller",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD1F40",
      "description": "An abstract pool UI component",
      "properties": []
    },
    "0x7FF73FF6D580": {
      "name": "PoolFiller",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "An abstract pool UI component",
      "properties": []
    },
    "0x7FF73FF38A80": {
      "name": "TimecodePoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF44AB0": {
      "name": "PluginPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF70800": {
      "name": "MacroPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FEDD040": {
      "name": "FilterPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF69F60": {
      "name": "SequencePoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF983C0": {
      "name": "TimerPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFCA6B0": {
      "name": "TimePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF3F450": {
      "name": "TimerPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF65360": {
      "name": "TimecodeSlotPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF53250": {
      "name": "TimecodeSlotPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF26B00": {
      "name": "TimecodeSlotLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEDBCC0": {
      "name": "SmartViewPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FED9C80": {
      "name": "SmartViewPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FED58C0": {
      "name": "SoundPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FFC9460": {
      "name": "SoundPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFAE980": {
      "name": "SoundPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFB6400": {
      "name": "EncoderBarPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEF5370": {
      "name": "EncoderBarPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF9DA30": {
      "name": "UserPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEAC1F0": {
      "name": "UserPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF29D80": {
      "name": "UniversePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEE9C70": {
      "name": "UniversePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEFB290": {
      "name": "GeneratorBitmapPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFC9CC0": {
      "name": "GeneratorRandomPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB4CD0": {
      "name": "GeneratorPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEC56F0": {
      "name": "LayoutPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF67530": {
      "name": "TimecodePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF3DAE0": {
      "name": "TimecodePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF62D40": {
      "name": "MeshPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF7ABB0": {
      "name": "MeshPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEB0E50": {
      "name": "MatricksPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF8D300": {
      "name": "MatricksPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE44A0": {
      "name": "MaterialPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFCE410": {
      "name": "MaterialPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA3620": {
      "name": "RenderQualityPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FECD180": {
      "name": "RenderQualityPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FECA760": {
      "name": "CameraPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF1E3C0": {
      "name": "CameraPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF4D540": {
      "name": "GelPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEDD5D0": {
      "name": "GelPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF1BAC0": {
      "name": "GelPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF71060": {
      "name": "ScribblePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEAFED0": {
      "name": "ScribblePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC9D70": {
      "name": "AppearancePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF86550": {
      "name": "AppearancePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF81A0": {
      "name": "TagPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF98950": {
      "name": "TagPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF3600": {
      "name": "SymbolPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF1CB70": {
      "name": "GoboPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF09420": {
      "name": "GoboPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF44250": {
      "name": "VideoPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF9E420": {
      "name": "VideoPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFB3260": {
      "name": "VideoPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA86B0": {
      "name": "ImagePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEC5C80": {
      "name": "ImagePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF1AFA0": {
      "name": "ConfigurationPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEBD1D0": {
      "name": "ConfigurationPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF7A1C0": {
      "name": "DataPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEF0310": {
      "name": "DataPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF86AE0": {
      "name": "MenuPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFA6E90": {
      "name": "MenuPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF84220": {
      "name": "PluginPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF73DE0": {
      "name": "PluginPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF64510": {
      "name": "FilterPoolButton",
      "base": "0x7FF73FEF6230",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEC3250": {
      "name": "FilterPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF6230": {
      "name": "WorldPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEE0F20": {
      "name": "WorldPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA3BB0": {
      "name": "ViewPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF1EDB0": {
      "name": "ViewPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEEEE00": {
      "name": "SequencePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF67AC0": {
      "name": "SequencePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA7600": {
      "name": "PresetPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF35AC0": {
      "name": "PresetPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FEA7600",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PresetPoolType",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "DynamicPresetPool"
        }
      ]
    },
    "0x7FF73FECACF0": {
      "name": "PagePoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FF557B0": {
      "name": "PagePoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF5C600": {
      "name": "QuickeyPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFA0CC0": {
      "name": "QuickeyPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEF08A0": {
      "name": "MacroPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FFD01E0": {
      "name": "MacroPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF40960": {
      "name": "GroupPoolButton",
      "base": "0x7FF73FF9D1D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "properties": []
    },
    "0x7FF73FEB5AC0": {
      "name": "GroupPoolLayoutGrid",
      "base": "0x7FF73FEDC520",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFC8350": {
      "name": "PoolWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "An abstract pool UI component",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "PoolObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FFD85F0": {
      "name": "AllPoolWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "description": "An abstract pool UI component",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "PoolObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FFD1F40": {
      "name": "AllPoolLayoutGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An abstract pool UI component",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PoolColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "PoolWindow.Sequences",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::PoolSizeFactor>::`vftable'",
          "name": "SizeX",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PoolSizeFactor"
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::PoolSizeFactor>::`vftable'",
          "name": "SizeY",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PoolSizeFactor"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SwipeMenu",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "PoolSwipeDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "PoolObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NoEmptyNames",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TitleButtonIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AllPoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::AllPoolLayoutGrid::OnClickAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClick(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AllPoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Gma3UI::AllPoolLayoutGrid::OnCharAction(class DB::Object *, class DB::SetParam &, unsigned int), 0}>::`vftable'",
          "name": "OnChar",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CharInput(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AllPoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AllPoolLayoutGrid::ActionOnSwipeMenu(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSwipeMenu",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSwipeMenu(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::PoolSettings>>::`vftable'",
          "name": "PoolSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::PoolType>::`vftable'",
          "name": "PoolType",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Sequence",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "Pooltype"
        }
      ]
    },
    "0x7FF73FEDC520": {
      "name": "PoolLayoutGrid",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An abstract pool UI component",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PoolColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "PoolWindow.Default",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::PoolSizeFactor>::`vftable'",
          "name": "SizeX",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PoolSizeFactor"
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::PoolSizeFactor>::`vftable'",
          "name": "SizeY",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Normal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "PoolSizeFactor"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "SwipeMenu",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "PoolSwipeDefault",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "PoolObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "NoEmptyNames",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "TitleButtonIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::PoolLayoutGrid::OnClickAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnClick(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &, unsigned int), {public: bool Gma3UI::PoolLayoutGrid::OnCharAction(class DB::Object *, class DB::SetParam &, unsigned int), 0}>::`vftable'",
          "name": "OnChar",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CharInput(s;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PoolLayoutGrid::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PoolLayoutGrid::ActionOnSwipeMenu(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSwipeMenu",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSwipeMenu(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::PoolSettings>>::`vftable'",
          "name": "PoolSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToRecipeEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF3A260": {
      "name": "PresetPoolTitleButton",
      "base": "0x7FF73FF49990",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF35AC0",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF855A0": {
      "name": "AllPoolTitleContextButton",
      "base": "0x7FF73FDEC010",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFDBB40",
      "description": "The clickable context area of a pool button.",
      "properties": []
    },
    "0x7FF73FFDBB40": {
      "name": "AllPoolTitleButton",
      "base": "0x7FF73FE66390",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD1F40",
      "description": "Allpool title button derived from pooltitlebuttons",
      "properties": []
    },
    "0x7FF73FF33E70": {
      "name": "PoolTitleContextButton",
      "base": "0x7FF73FDEC010",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF49990",
      "description": "The clickable context area of a pool button.",
      "properties": []
    },
    "0x7FF73FF49990": {
      "name": "PoolTitleButton",
      "base": "0x7FF73FE66390",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A pool title bar UI control (derived from a button class) with an icon and a defined default font",
      "properties": []
    },
    "0x7FF73FF537E0": {
      "name": "AllPoolButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD1F40",
      "description": "A button which is linked to an object and wich displays its own properties",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ObjectIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF9D1D0": {
      "name": "PoolButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEDC520",
      "description": "A button which is linked to an object and wich displays its own properties",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ObjectIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Window.EditMixIn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInNotOwnerBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Window.EditMixInNotOwner",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFA46D0": {
      "name": "TagsEditContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::TagsEditContent::*)(void), {public: void Gma3UI::TagsEditContent::DoAssign(void), 0}>::`vftable'",
          "name": "DoAssign",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::TagsEditContent::*)(void), {public: void Gma3UI::TagsEditContent::DoUnassign(void), 0}>::`vftable'",
          "name": "DoUnassign",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF8C240": {
      "name": "AppearanceEditContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "AppearanceTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TargetIsAppearance",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AppearanceEditContent::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AppearanceEditContent::OnCreateNewAppearance(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCreateNewAppearance",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCreateNewAppearance(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FEF4DE0": {
      "name": "ScribbleEditContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "ScribbleTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "TargetIsScribble",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ScribbleEditContent::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ScribbleEditContent::OnApplyScribble(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ApplyScribble",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ApplyScribble(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ScribbleEditContent::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ScribbleEditContent::OnRevertScribble(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RevertScribble",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RevertScribble(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ScribbleEditContent::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ScribbleEditContent::OnCreateNewScribble(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCreateNewScribble",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCreateNewScribble(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF07260": {
      "name": "TimerEditor",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF83830": {
      "name": "LayoutEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "SelectedElements",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutEditor::*)(class DB::HandleBase, class DB::HandleBase), {public: void Gma3UI::LayoutEditor::SaveAsDefault(class DB::HandleBase, class DB::HandleBase), 0}>::`vftable'",
          "name": "SaveAsDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutEditor::*)(class DB::HandleBase, class DB::HandleBase), {public: void Gma3UI::LayoutEditor::LoadFromDefault(class DB::HandleBase, class DB::HandleBase), 0}>::`vftable'",
          "name": "LoadFromDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF00CE0": {
      "name": "LayoutElementEditorOverlay",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutElementEditorOverlay::*)(class DB::HandleBase, class DB::HandleBase), {public: void Gma3UI::LayoutElementEditorOverlay::SaveAsDefault(class DB::HandleBase, class DB::HandleBase), 0}>::`vftable'",
          "name": "SaveAsDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::LayoutElementEditorOverlay::*)(class DB::HandleBase, class DB::HandleBase), {public: void Gma3UI::LayoutElementEditorOverlay::LoadFromDefault(class DB::HandleBase, class DB::HandleBase), 0}>::`vftable'",
          "name": "LoadFromDefault",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FED3430": {
      "name": "InsertFixturesWizard",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::DMXMode>>::`vftable'",
          "name": "DmxMode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FixtureName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureLayer>>::`vftable'",
          "name": "FixtureLayer",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureClass>>::`vftable'",
          "name": "FixtureClass",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureQuantity",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EmptyAsZero"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::FixtureIDs>>::`vftable'",
          "name": "FixtureIDType",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureFID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EmptyAsZeroFID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureCID",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "EmptyAsZeroFID"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "PatchOffset",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF1AA10": {
      "name": "RenderQualityEditor",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::RenderQualityEditor::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::RenderQualityEditor::ActionOnReloadRenderQuality(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ReloadRenderQuality",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ReloadRenderQuality(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        }
      ]
    },
    "0x7FF73FFE17A0": {
      "name": "XlrPortInput",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFB2CD0": {
      "name": "KeyboardShortcutEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to edit keyboard shortcuts",
      "properties": []
    },
    "0x7FF73FF62350": {
      "name": "FixtureEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE4E90": {
      "name": "StageEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF581E0": {
      "name": "ColorPickHSRect",
      "base": "0x7FF73FFABEF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::ColorPickHSRect::*, 1408>::`vftable'",
          "name": "OnCreateNewAppearance",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        }
      ]
    },
    "0x7FF73FF25380": {
      "name": "ColorPickXYZ",
      "base": "0x7FF73FFABEF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF928A0": {
      "name": "ColorPickHSCircle",
      "base": "0x7FF73FFABEF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFABEF0": {
      "name": "ColorPickBase",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "System",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "RGB",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFB0C80": {
      "name": "GenericSettingsEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ShowFullSettings",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF2DED0": {
      "name": "PositionCalibration",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnStoreP1Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "StoreP1",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:StoreP1(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnCallP1Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CallP1",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CallP1(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnStoreP2Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "StoreP2",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:StoreP2(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnCallP2Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CallP2",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CallP2(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnStoreP3Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "StoreP3",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:StoreP3(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnCallP3Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CallP3",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CallP3(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnStoreP4Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "StoreP4",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:StoreP4(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnCallP4Action(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CallP4",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CallP4(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PositionCalibration::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PositionCalibration::OnSolveAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Solve",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Solve(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        }
      ]
    },
    "0x7FF73FEF5900": {
      "name": "AppearanceEditor",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF06740": {
      "name": "ScribbleEditor",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEAE560": {
      "name": "UIDMXPatch",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), {public: bool Gma3UI::UiDmxPatch::OnBreakSelectedAction(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), 0}>::`vftable'",
          "name": "OnBreakSelected",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnBreakSelected(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:column id uint64_t, 2:row id uint64_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), {public: bool Gma3UI::UiDmxPatch::OnBreakPatchedAction(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), 0}>::`vftable'",
          "name": "OnBreakPatched",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnBreakPatched(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:column id uint64_t, 2:row id uint64_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), {public: bool Gma3UI::UiDmxPatch::OnAddressSelectedAction(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), 0}>::`vftable'",
          "name": "OnAddressSelected",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnAddressSelected(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:column id uint64_t, 2:row id uint64_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::UiDmxPatch::OnUnpatchClickedAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnUnpatchClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnUnpatchClicked(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:button type uint8_t, 2:X pixel_t, 3:Y pixel_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::UiDmxPatch::OnPatchToClickedAction(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "OnPatchToClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnPatchToClicked(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:button type uint8_t, 2:X pixel_t, 3:Y pixel_t"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &, int), {public: bool Gma3UI::UiDmxPatch::OnSelectAbsoluteAddressAction(class DB::Object *, class DB::SetParam &, int), 0}>::`vftable'",
          "name": "SelectAbsoluteAddress",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;i4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:abs addr"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::UiDmxPatch::OnPatchToNextFreeAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnPatchToNextFree",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:PatchToNextFree(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::UiDmxPatch::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::UiDmxPatch::OnMoveToUniverseAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnMoveToUniverse",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BreakIdx",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FixtureCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::DMXMode>>::`vftable'",
          "name": "DMXMode",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<int>::`vftable'",
          "name": "PatchOffset",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF27B50": {
      "name": "CameraEditor",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CameraEditor::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::CameraEditor::ActionOnReloadCamera(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ReloadCamera",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ReloadCamera(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Description"
        }
      ]
    },
    "0x7FF73FEF1820": {
      "name": "GeneratorBitmapEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEC0280": {
      "name": "SpecialExecConfigInput",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SpecialExecOffset",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF1B530": {
      "name": "ExecConfigSwipe",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Mask",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF82E40": {
      "name": "ExecConfigInput",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "Mask",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::Handle<class Graphics::Texture>, struct Container::CollectPolicies<class DB::Handle<class Graphics::Texture>>>>::`vftable'",
          "name": "Icons",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<struct Gma3UI::IconsGrid>::`vftable'",
          "name": "IconsGrid",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "default": "1,1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<struct Gma3UI::IconsGridAnchors, struct Container::CollectPolicies<struct Gma3UI::IconsGridAnchors>>>::`vftable'",
          "name": "IconsGridAnchors",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF52000": {
      "name": "AllExecEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AllExecEditor::*)(class DB::Object *, class DB::SetParam &, class DB::HandleBase, class Text::TString<char>, unsigned __int64), {public: bool Gma3UI::AllExecEditor::OnObjectSelectedAction(class DB::Object *, class DB::SetParam &, class DB::HandleBase, class Text::TString<char>, unsigned __int64), 0}>::`vftable'",
          "name": "OnObjectSelected",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnObjectSelected(s;o;s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:column id uint64_t, 2:row id uint64_t"
        }
      ]
    },
    "0x7FF73FEECDD0": {
      "name": "MainDlgDmxModeEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to edit a dmx mode",
      "properties": []
    },
    "0x7FF73FED2910": {
      "name": "MainDlgFixtureTypeEditor",
      "base": "0x7FF73FF6FA20",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A main dialog to edit fixture type in the patch",
      "properties": []
    },
    "0x7FF73FFBBC80": {
      "name": "SpecialWindowContext",
      "base": "0x7FF73FF63CC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::SpecialWindowContext::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::SpecialWindowContext::ChangedActiveTab(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ChangedActiveTab",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFD4370": {
      "name": "MeshSettings",
      "base": "0x7FF73FF78DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF37700": {
      "name": "Settings3dContext",
      "base": "0x7FF73FF63CC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Settings3dContext::*)(class DB::Object *, class DB::SetParam &, unsigned char, short, short), {public: bool Gma3UI::Settings3dContext::ActionSetPriority(class DB::Object *, class DB::SetParam &, unsigned char, short, short), 0}>::`vftable'",
          "name": "ActionSetPriority",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ActionSetPriority(s;u1;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "ActionSetPriority"
        }
      ]
    },
    "0x7FF73FFCAC40": {
      "name": "KeybSCInput",
      "base": "0x7FF73FDC5710",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFD7AD0": {
      "name": "MacrolineTextInput",
      "base": "0x7FF73FDC5710",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEBFCF0": {
      "name": "MacrolinePreview",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF9B120": {
      "name": "MacrolineEdit",
      "base": "0x7FF73FDFA020",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF01530": {
      "name": "CueNumberInput",
      "base": "0x7FF73FDC5710",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF63CC0": {
      "name": "GenericContext",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase> Gma3UI::GenericContext::*, 2240>::`vftable'",
          "name": "OnSetEditTarget",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "EditTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A read-only property that identifies the object being edited"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "WindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A read-only property that identifies the main window settings"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "SubWindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A read-only property that identifies the sub window settings"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditTitlebar",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Container::MapTpl<struct Container::DefaultMapItemDescr<class Text::TString<char>, class Container::Collect<class Gma3UI::TitlebuttonControl *, struct Container::CollectPolicies<class Gma3UI::TitlebuttonControl *>>, class ContainerInternal::MapCompare<class Text::TString<char>>>>>::`vftable'",
          "name": "AllTitlebuttons",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericContext::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericContext::ActionOnDeleteClicked(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DeleteClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:DeleteClicked(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Default action for deleting the window"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericContext::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericContext::OnTBDeleteAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TBDeleteAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericContext::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericContext::OnTBLoadDefaults(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "TBLoadDefaults",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF78DE0": {
      "name": "GenericEditorOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase> Gma3UI::GenericEditorOverlay::*, 10704>::`vftable'",
          "name": "OnSetEditTarget",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class Text::TString<char>> Gma3UI::GenericEditorOverlay::*, 10712>::`vftable'",
          "name": "OnUpdateTitle",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "EditTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "EditTargetList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DefaultTitle",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericEditorOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericEditorOverlay::OnSaveEditTarget(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SaveEditTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SaveEditTarget(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericEditorOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericEditorOverlay::OnRevertEditTarget(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RevertEditTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RevertEditTarget(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "InitialSaveEditTarget",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditTargetHasChanged",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF6FA20": {
      "name": "GenericEditor",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase> Gma3UI::GenericEditor::*, 10840>::`vftable'",
          "name": "OnSetEditTarget",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;o;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class Text::TString<char>> Gma3UI::GenericEditor::*, 10848>::`vftable'",
          "name": "OnUpdateTitle",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "EditTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Container::Collect<class DB::HandleBase, struct Container::CollectPolicies<class DB::HandleBase>>>::`vftable'",
          "name": "EditTargetList",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ForcedInitialTab",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ChangeDestination",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UpdateSettingsVisibility",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "SubDestination",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericEditor::OnContext(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Context",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Context(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericEditor::OnSaveEditTarget(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SaveEditTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SaveEditTarget(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericEditor::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericEditor::OnRevertEditTarget(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RevertEditTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:RevertEditTarget(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "InitialSaveEditTarget",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "EditTargetHasChanged",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEEDE80": {
      "name": "GenericAssignmentInput",
      "base": "0x7FF73FF0BDF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentInput::*)(class DB::Object *, class DB::SetParam &, class DB::HandleBase, class Text::TString<char>, unsigned __int64), {public: bool Gma3UI::GenericAssignmentInput::OnAssignTarget(class DB::Object *, class DB::SetParam &, class DB::HandleBase, class Text::TString<char>, unsigned __int64), 0}>::`vftable'",
          "name": "OnAssignTarget",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;o;s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:Object *pCaller, 1:SetParam& p, 2:const HandleBase Target, 3:String TargetPropertyName, 4:uint64_t rowId"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentInput::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericAssignmentInput::OnSpecialButtonClicked(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSpecialButtonClicked",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SpecialClicked(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF77730": {
      "name": "AssignmentUITab",
      "base": "0x7FF73FE788E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF79370",
      "properties": []
    },
    "0x7FF73FF79370": {
      "name": "GenericAssignmentSelector",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ActiveSource",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Index of active element"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The target to assign"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TargetPropertyName",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The property to assign"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "AutoClose",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The Dialog closes by itself when selection is done.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned short>::`vftable'",
          "name": "ProvideEmpty",
          "TypeNameStr": "UInt16",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "The Dialog provides the option 'empty'.",
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EmptyName",
          "TypeNameStr": "String",
          "subtype": 0,
          "default": "Empty",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentSelector::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), {public: bool Gma3UI::GenericAssignmentSelector::OnDBObjectSelectedAction(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned __int64), 0}>::`vftable'",
          "name": "OnDBObjectSelected",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnDBObjectSelected(s;u8;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str, 1:column id uint64_t, 2:row id uint64_t"
        },
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<class DB::HandleBase, class Text::TString<char>, unsigned __int64> Gma3UI::GenericAssignmentSelector::*, 1832>::`vftable'",
          "name": "OnAssignTargetSelected",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:OnAssignTargetSelected(s;o;s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Target is selected for assignment"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentSelector::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericAssignmentSelector::OnDataPoolChangedAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnDataPoolChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnDataPoolChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "When the DataPool-selection has changed"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentSelector::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericAssignmentSelector::OnStageChangedAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnStageChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnStageChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "When the Stage-selection has changed"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::GenericAssignmentSelector::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::GenericAssignmentSelector::OnSetSelectorVisibilityAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnSetSelectorVisibility",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnSetSelectorVisibility(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Sets the visibilty of DataPool- and Stage-selector"
        }
      ]
    },
    "0x7FF73FEC17B0": {
      "name": "TagButtonList",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FF88180",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF88180": {
      "name": "TagButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFE5E10": {
      "name": "RevertButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF7D0B0": {
      "name": "BladeViewButton",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF42480",
      "properties": []
    },
    "0x7FF73FEF74E0": {
      "name": "SelectionIndicatorButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OverridesIndicatorBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "SelectionGrid.SetupActiveIndicator",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "XYZTextColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "SelectionGrid.XyzTextColor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFBB6F0": {
      "name": "DriveStatusButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::Drive>>::`vftable'",
          "name": "Drive",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Blink",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "WarningTooltip",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFC7960": {
      "name": "DisplayButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF85010": {
      "name": "EncoderLinkButton",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFDD1F0": {
      "name": "BlinkingFadeButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button that indicates active fade",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BlinkBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Fader.On",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum Gma3UI::BlinkingButtonMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "Prog",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "BlinkingButtonMode"
        }
      ]
    },
    "0x7FF73FF10D20": {
      "name": "AgendaDayButton",
      "base": "0x7FF73FDE6340",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD6CD0",
      "properties": []
    },
    "0x7FF73FF37C90": {
      "name": "PopupItemButtonExt",
      "base": "0x7FF73FE44320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "description": "Button to be used for popups on console/onpc/pu",
      "properties": []
    },
    "0x7FF73FEF0E30": {
      "name": "ValueFadeControl",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseDefaultValue",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<enum DB::ScrollType>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "Horizontal",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ScrollType"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceFastFade",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "IncrementFactor",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF5DCD0": {
      "name": "MatricksContainer",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FDA7350",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE3250": {
      "name": "MatricksIndicatorButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "OverridesIndicator",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "rect_indicator",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "OverridesIndicatorBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEFD340": {
      "name": "MatricksToggleButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "MatricksAreaActiveBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "MAtricks.BackgroundActive",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the background color that should be used if the corresponding MAtrick-area is active. Defined in the 'theme.xml' file"
        }
      ]
    },
    "0x7FF73FF5CB90": {
      "name": "MatricksRadioButton",
      "base": "0x7FF73FE484D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FF1C5E0": {
      "name": "ValueRadioControl",
      "base": "0x7FF73FE5ABB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "RadioButtonSmallOn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "DeselectedIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "RadioButtonSmallOff",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "SelectedIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "RadioItemButton.Selected",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DeselectedIconColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.IndicatorIcon",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEEC840": {
      "name": "TimerPauseButton",
      "base": "0x7FF73FF27090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF0F3A0": {
      "name": "TimerStopButton",
      "base": "0x7FF73FF27090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF21500": {
      "name": "TimerPlayButton",
      "base": "0x7FF73FF27090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "CountDownIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "PlaybackBackward",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "StopwatchIcon",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "PlaybackForward",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF27090": {
      "name": "TimerButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF26040": {
      "name": "TimecodeSlotPauseButton",
      "base": "0x7FF73FF8AF90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF88CA0": {
      "name": "TimecodeSlotStopButton",
      "base": "0x7FF73FF8AF90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF68050": {
      "name": "TimecodeSlotPlayButton",
      "base": "0x7FF73FF8AF90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF8AF90": {
      "name": "TimecodeSlotButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "SlotIndex",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF112B0": {
      "name": "OSCActivityButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "Direction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFB1A90": {
      "name": "ExecConfigColButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF43400": {
      "name": "ExecConfigRowButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEAB800": {
      "name": "CommandlineHistoryTextView",
      "base": "0x7FF73FE95EC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A view UI control that can display a list of lines that is provided by a history provider object. Scrollable horizontally and vertically.",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CommandlineHistoryTextView::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CommandlineHistoryTextView::ActionAutoScroll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "AutoScroll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:CommandlineHistoryTextView_AutoScroll(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFD32C0": {
      "name": "NoteTextEdit",
      "base": "0x7FF73FE7E100",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73C266850",
      "description": "UI Editor for Notes.",
      "properties": []
    },
    "0x7FF73FF0EE10": {
      "name": "ZoomFactorPopup",
      "base": "0x7FF73FD970A0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF22020": {
      "name": "ImagePopup",
      "base": "0x7FF73FD970A0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::ImageSource>::`vftable'",
          "name": "ImageSource",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ImageSource"
        }
      ]
    },
    "0x7FF73FFD19B0": {
      "name": "ImageImport",
      "base": "0x7FF73FF0BDF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDE5090",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "SelectedRow",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByName",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF51080": {
      "name": "FixtureTypeImport",
      "base": "0x7FF73FF0BDF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A dialog for importing fixture types",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByManufacturer",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByName",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByDescription",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FilterByUsedOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Filter",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "FilterMask",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "VisibleFixturesCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::FixtureTypeImport::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::FixtureTypeImport::ActionSelectedManufacturer(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectedManufacturer",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::FixtureTypeImport::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::FixtureTypeImport::ActionSelectedFixture(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectedFixture",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::FixtureTypeImport::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::FixtureTypeImport::ActionRememberSelection(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "RememberSelection",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::FixtureTypeImport::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::FixtureTypeImport::ActionInitGrids(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "InitGrids",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF0BDF0": {
      "name": "GenericImport",
      "base": "0x7FF73FDFB130",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A generic dialog for importing stuff",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::GenericImport::*, 2312>::`vftable'",
          "name": "FilterChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "FilterComposed",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEE06C0": {
      "name": "FixturetypeItemList",
      "base": "0x7FF73FE1B770",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF72000": {
      "name": "FixtureTypeItemButton",
      "base": "0x7FF73FE8BF10",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA48A0",
      "properties": []
    },
    "0x7FF73FEDEEE0": {
      "name": "AtFilterPreview",
      "base": "0x7FF73FD97900",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Expanded",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFCC410": {
      "name": "AtFilterDialog",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::FeatureMask>::`vftable'",
          "name": "Features",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::FeatureGroupMask>::`vftable'",
          "name": "FeatureGroups",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "FeatureGroupsOnly",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AtFilterDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AtFilterDialog::OnSelectAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SelectAll(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AtFilterDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AtFilterDialog::OnSelectNothing(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SelectNothing",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SelectNothing(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AtFilterDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AtFilterDialog::OnSwitchExpansion(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "SwitchExpansion",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:SwitchExpansion(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Should be called when UserExpanded has changed within this dialog"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AtFilterDialog::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AtFilterDialog::OnCollapseAll(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnCollapseAll",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:OnCollapseAll(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Should be called all buttons shall collapse/expand"
        }
      ]
    },
    "0x7FF73FFADA00": {
      "name": "PlaybackControls",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::PlaybackWindowSettings>>::`vftable'",
          "name": "PlaybackWindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to a settings object"
        }
      ]
    },
    "0x7FF73FFAE3F0": {
      "name": "PlaybackControlModularContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FixedExecutorBlockCount",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLabelsByDefault",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowExecutorsByDefault",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF7BCD0": {
      "name": "PlaybackControlContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned char>::`vftable'",
          "name": "FixedExecutorBlockCount",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowLabelsByDefault",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ShowExecutorsByDefault",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FFDC990": {
      "name": "PlaybackViewExecutorBar",
      "base": "0x7FF73FFE29F0",
      "child": "0x7FF73FF053C0",
      "parent": "0x7FF73FDA7350",
      "properties": []
    },
    "0x7FF73FF92E30": {
      "name": "PlaybackHardwareFader",
      "base": "0x7FF73FF237A0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FECD710": {
      "name": "PlaybackHardwareButton",
      "base": "0x7FF73FF80930",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE3C40": {
      "name": "PlaybackHardwareMiniEncoder",
      "base": "0x7FF73FECE100",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF80930": {
      "name": "HardwareButton",
      "base": "0x7FF73FDC1F80",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A button which can simulate a hardware executor button",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0xffffffff",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpecialExecIndex>::`vftable'",
          "name": "SpecialExecIndex",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        }
      ]
    },
    "0x7FF73FECE100": {
      "name": "HardwareMiniEncoder",
      "base": "0x7FF73FE5C590",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0xffffffff",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpecialExecIndex>::`vftable'",
          "name": "SpecialExecIndex",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        }
      ]
    },
    "0x7FF73FF237A0": {
      "name": "HardwareFader",
      "base": "0x7FF73FD8F410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecutorIndex",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0xffffffff",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<enum DB::SpecialExecIndex>::`vftable'",
          "name": "SpecialExecIndex",
          "TypeNameStr": "Int32",
          "subtype": 1,
          "default": "None",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "SpecialExecutor"
        }
      ]
    },
    "0x7FF73FFB2020": {
      "name": "NetworkSpeedTestOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFB84B0": {
      "name": "NetworkSpeedTestGrid",
      "base": "0x7FF73FE01BF0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFEA960": {
      "name": "NetworkSpeedTestGridCell",
      "base": "0x7FF73FE24800",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE4A170",
      "properties": []
    },
    "0x7FF73FF5E260": {
      "name": "NetworkSpeedTestGridData",
      "base": "0x7FF73C339A70",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73FB27FC0",
      "properties": []
    },
    "0x7FF73FF7E030": {
      "name": "CloneOverlay",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloneOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloneOverlay::ActionDoReset(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "DoReset",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::CloneOverlay::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::CloneOverlay::ActionInitFirst(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "InitFirst",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:text"
        }
      ]
    },
    "0x7FF73FF29390": {
      "name": "EncoderOverlay",
      "base": "0x7FF73FDE5090",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF6E0A0": {
      "name": "ThemeMergeToolBar",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF960A0": {
      "name": "ThemeMergeDialog",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "PrimaryHasFocus",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsInExport",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "false",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ThemeMergeDialog::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Gma3UI::ThemeMergeDialog::JumpToNextLine(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "JumpToNextLine",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select the next line that differs"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ThemeMergeDialog::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Gma3UI::ThemeMergeDialog::JumpToPreviousLine(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "JumpToPreviousLine",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to select the previews line that differs"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ThemeMergeDialog::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Gma3UI::ThemeMergeDialog::AddMissingLines(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "AddMissingLines",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to add missing lines"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ThemeMergeDialog::*)(class DB::Object *, class DB::SetParam &, unsigned __int64), {public: bool Gma3UI::ThemeMergeDialog::AddSelectedLines(class DB::Object *, class DB::SetParam &, unsigned __int64), 0}>::`vftable'",
          "name": "AddSelectedLines",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Action to add selected lines"
        }
      ]
    },
    "0x7FF73FFB0420": {
      "name": "BackupMenu",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum Gma3UI::ShowfileSelectorMode>::`vftable'",
          "name": "Mode",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowFileSegmentsMask",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowFileSegmentShowData",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowFileSegmentLocalSettings",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowFileSegmentOutputStations",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<unsigned __int64>::`vftable'",
          "name": "ShowFileSegmentDmxProtocols",
          "TypeNameStr": "UInt64",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF8FD30": {
      "name": "MainDlgUpdateMenu",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "CurrentUpdateObject",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MainDlgUpdateMenu::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::MainDlgUpdateMenu::CheckAutoCloseA(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "CheckAutoClose",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFA50C0": {
      "name": "AudioPreview",
      "base": "0x7FF73FDD97B0",
      "child": "0x7FF73FDD97B0",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "TargetPath",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::SoundFile>>::`vftable'",
          "name": "TargetSound",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Duration",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::TimePropertyValue>::`vftable'",
          "name": "Position",
          "TypeNameStr": "Int64Time",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "IsPlaying",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AudioPreview::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AudioPreview::ActionPlay(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Play",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AudioPreview::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AudioPreview::ActionPause(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Pause",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AudioPreview::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::AudioPreview::ActionStop(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Stop",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::AudioPreview::*)(class DB::Object *, class DB::SetParam &, double), {public: bool Gma3UI::AudioPreview::ActionSeek(class DB::Object *, class DB::SetParam &, double), 0}>::`vftable'",
          "name": "Seek",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;d;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEBB000": {
      "name": "AppearancePreview",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Appearance>>::`vftable'",
          "name": "Appearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FECC200": {
      "name": "EditorSubCategoryButton",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FF5B090": {
      "name": "EditorCategoryButton",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FF09F40": {
      "name": "EditorSwipeButton",
      "base": "0x7FF73FE79CE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FED1C50": {
      "name": "EditorPropertyButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FF66020": {
      "name": "EditorNoteButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FF8F210": {
      "name": "EditorTagButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FF20F70": {
      "name": "EditorAppearanceButton",
      "base": "0x7FF73FEDFA00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FED8960": {
      "name": "EditorScribbleButton",
      "base": "0x7FF73FF52CC0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FEFA1E0": {
      "name": "EditorNameButton",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFA23D0",
      "properties": []
    },
    "0x7FF73FFA23D0": {
      "name": "EditorPropertyButtons",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "BigMode",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoCreateFromProperties",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseEditorTarget",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ForceHideCategories",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::HandleBase>::`vftable'",
          "name": "Target",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BigModeColumns",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "BigModeRows",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF47430": {
      "name": "MainDialogDest",
      "base": "0x7FF73FF479C0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "Destination",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF6CB90": {
      "name": "MainDlgLoginButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFBDB20": {
      "name": "MainDlgGridSelectDown",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FECBC70": {
      "name": "MainDlgGridSelectUp",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEA7070": {
      "name": "MainDlgMergeToggleButton",
      "base": "0x7FF73FF8D890",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE0820": {
      "name": "MainDlgNewLineToggleButton",
      "base": "0x7FF73FF8D890",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF8D890": {
      "name": "MainDlgGridToggleButton",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF34F90": {
      "name": "MainDlgExportEditorButton",
      "base": "0x7FF73FEE1910",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FEE1910": {
      "name": "MainDlgExportButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WorkWithGrid",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF97D60": {
      "name": "MainDlgImportEditorButton",
      "base": "0x7FF73FF4E7F0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF4E7F0": {
      "name": "MainDlgImportButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ChangeDestination",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "WorkWithGrid",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ImportOptions",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<void (Gma3UI::MainDlgImportButton::*)(void), {public: void Gma3UI::MainDlgImportButton::DefaultClickAction(void), 0}>::`vftable'",
          "name": "DefaultClickAction",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FF53D70": {
      "name": "MainDlgSelectButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF8F7A0": {
      "name": "MainDlgEditButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFDA0A0": {
      "name": "MainDlgUndoButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF89950": {
      "name": "MainDlgPasteButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF55220": {
      "name": "MainDlgCopyButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF7EA20": {
      "name": "MainDlgCutButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF4C020": {
      "name": "MainDlgDelButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA4140": {
      "name": "MainDlgBlindButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFAFE90": {
      "name": "MainDlgInsertButton",
      "base": "0x7FF73FF3E4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "UseComposedText",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "DummyComposedText",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF3E4D0": {
      "name": "MainDlgButtonBase",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "AutoEnabled",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF0B860": {
      "name": "CmdDlgFunctionButtonsLeft",
      "base": "0x7FF73FF6FFB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA5650": {
      "name": "CmdDlgFunctionButtonsRight",
      "base": "0x7FF73FF6FFB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF6FFB0": {
      "name": "CmdDlgFunctionButtonsBase",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF077F0": {
      "name": "MainDialogFunctionButtons",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA0730": {
      "name": "MainDialogSubMenu",
      "base": "0x7FF73FD90D90",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF771A0": {
      "name": "MainDialogSubMenuScrollBox",
      "base": "0x7FF73FE65410",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF001C0": {
      "name": "MainDialogSubMenuContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF6DB10": {
      "name": "MainDialogPlaceHolder",
      "base": "0x7FF73FE65E00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": []
    },
    "0x7FF73FF4AB70": {
      "name": "MainDialogContent",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": []
    },
    "0x7FF73FF917E0": {
      "name": "MainDialogArrowTabs",
      "base": "0x7FF73FFC1210",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC1C00",
      "properties": []
    },
    "0x7FF73FFC1210": {
      "name": "MainDialogSubTabs",
      "base": "0x7FF73FEEAA60",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC1C00",
      "properties": []
    },
    "0x7FF73FFDE5D0": {
      "name": "MainDialogMainTabs",
      "base": "0x7FF73FEEAA60",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC1C00",
      "properties": []
    },
    "0x7FF73FEEAA60": {
      "name": "MainDialogTabsBase",
      "base": "0x7FF73FE788E0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFC1C00",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::MainDialogTabsBase::*)(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int), {public: bool Gma3UI::MainDialogTabsBase::ActionCallSubMenu(class DB::Object *, class DB::SetParam &, unsigned __int64, unsigned int), 0}>::`vftable'",
          "name": "CallSubMenu",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;u8;u4;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF8A1B0": {
      "name": "MainDialogSecondaryMenu",
      "base": "0x7FF73FFC1C00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": []
    },
    "0x7FF73FF699D0": {
      "name": "MainDialogPrimaryMenu",
      "base": "0x7FF73FFC1C00",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": []
    },
    "0x7FF73FFC1C00": {
      "name": "MainDialogMenuBase",
      "base": "0x7FF73FDCBBE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "Local",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FEC41D0": {
      "name": "MainDialogDummy",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF479C0",
      "properties": []
    },
    "0x7FF73FF479C0": {
      "name": "MainDialog",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CanBeEmbedded",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "Yes",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "CalledFromCmdline",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "InitialTab",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "InitialSubTab",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyMethodT<class DB::HandleBase (Gma3UI::MainDialog::*)(class Text::TString<char> const &), {public: class DB::HandleBase Gma3UI::MainDialog::SwitchMenu(class Text::TString<char> const &), 0}>::`vftable'",
          "name": "SwitchMenu",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<class DB::HandleBase (Gma3UI::MainDialog::*)(class Text::TString<char> const &, class DB::HandleBase), {public: class DB::HandleBase Gma3UI::MainDialog::SwitchMenuWithTarget(class Text::TString<char> const &, class DB::HandleBase), 0}>::`vftable'",
          "name": "SwitchMenuWithTarget",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        }
      ]
    },
    "0x7FF73FEE7E90": {
      "name": "CommandLineOutput",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFCB630": {
      "name": "CommandLineWindow",
      "base": "0x7FF73FFD3DE0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An abstract pool UI component",
      "properties": []
    },
    "0x7FF73FFD3DE0": {
      "name": "Window",
      "base": "0x7FF73FE9EB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "An abstract window UI component that can be created and placed on the screen",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowSettings>>::`vftable'",
          "name": "WindowSettings",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to a settings object"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowAppearance>>::`vftable'",
          "name": "WindowAppearance",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to an appearance object"
        },
        {
          "CTypeName": "const DB::Property<class DB::SmartPointer<class DB::WindowScrollPositions>>::`vftable'",
          "name": "WindowScrollPositions",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A reference to a scroll position object"
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "EditEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class Text::TString<char>>::`vftable'",
          "name": "ControlEncoderBar",
          "TypeNameStr": "String",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::RelativeHandle<class DB::Object>>::`vftable'",
          "name": "ScrollTarget",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToPreview",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ReactToEdit",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "SmallResizeArea",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "No",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "PreviewMixInColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Window.PreviewMixIn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Window.EditMixIn",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "EditMixInNotOwnerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Window.EditMixInNotOwner",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::Window::OnResizeStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "ResizeStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Gma3UI::Window::OnResizeMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "ResizeMove",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeMove(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &, bool), {public: bool Gma3UI::Window::OnResizeEnd(class DB::Object *, class DB::SetParam &, bool), 0}>::`vftable'",
          "name": "ResizeEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:ResizeEnd(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::Window::OnMoveStart(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "MoveStart",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MoveStart(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &, short, short), {public: bool Gma3UI::Window::OnMove(class DB::Object *, class DB::SetParam &, short, short), 0}>::`vftable'",
          "name": "Move",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Move(s;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &, bool), {public: bool Gma3UI::Window::OnMoveEnd(class DB::Object *, class DB::SetParam &, bool), 0}>::`vftable'",
          "name": "MoveEnd",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:MoveEnd(s;b;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::Window::OnContext(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "Context",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:Context(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &, short, short, short, short), {public: bool Gma3UI::Window::OnTitleGestureClick(class DB::Object *, class DB::SetParam &, short, short, short, short), 0}>::`vftable'",
          "name": "GestureClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:TitleGestureClick(s;i2;i2;i2;i2;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "your description here"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::Window::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::Window::UpdateEncoderBarAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "UpdateEncoderBar",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:UpdateEncoderBar(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF3B320": {
      "name": "UiScreen",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FFD3DE0",
      "parent": "0x7FF73FE84320",
      "description": "An area where a user can arrange different views (objects of types derived from a Window class)",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "DelimiterTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "DelimiterColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Screen.DelimiterColor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ActiveDelimiterColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Screen.ActiveDelimiterColor",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "DelimiterSize",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "3",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "SelectionFrame",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "SelectionFrame",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "BlockerTexture",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "corner0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "BlockerColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Global.Inactive",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Rect>::`vftable'",
          "name": "WindowRect",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ViewW",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RequestedSize"
        },
        {
          "CTypeName": "const DB::Property<short>::`vftable'",
          "name": "ViewH",
          "TypeNameStr": "Int16",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "RequestedSize"
        }
      ]
    },
    "0x7FF73FF17570": {
      "name": "ShaperEditBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF93DB0": {
      "name": "DmxTesterBar",
      "base": "0x7FF73FF6BA70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::SelectAllDmxTesterAddresses(void), 0}>::`vftable'",
          "name": "AllSelection",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::ReleaseCurrentSelectedDmxTesterAddresses(void), 0}>::`vftable'",
          "name": "ReleaseCurrent",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::ReleaseOthersNotSelectedDmxTesterAddresses(void), 0}>::`vftable'",
          "name": "ReleaseOthers",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::ReleaseAllDmxTesterAddresses(void), 0}>::`vftable'",
          "name": "ReleaseAll",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::ParkCurrentValueToAddresses(void), 0}>::`vftable'",
          "name": "ParkCurrent",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::PropertyMethodT<bool (Gma3UI::DmxTesterBar::*)(void), {public: bool Gma3UI::DmxTesterBar::UnparkCurrentValueToAddresses(void), 0}>::`vftable'",
          "name": "UnparkCurrent",
          "TypeNameStr": "Method",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": true,
          "ImportIgnore": true
        },
        {
          "CTypeName": "const DB::Property<class DB::DMXPropertyAddress>::`vftable'",
          "name": "SelectedAddr",
          "TypeNameStr": "Custom",
          "subtype": 0,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FFA3090": {
      "name": "ColorEditBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<enum DB::ColorPickerSettings::ColorEncoderFunction>::`vftable'",
          "name": "ColorEncoderFunction",
          "TypeNameStr": "UInt8",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "ColorEncoderFunction"
        }
      ]
    },
    "0x7FF73FF48A10": {
      "name": "PresetBar",
      "base": "0x7FF73FF6BA70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PresetBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PresetBar::OnFunctionSelectorChanged(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "FunctionSelectorChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:PresetBarFunctionSelectorChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Reaction on the change of the function selector"
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::PresetBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::PresetBar::OnEncoderReadoutSelectorChanged(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "EncoderReadoutSelectorChanged",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:PresetBarEncoderResolutionChanged(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "Reaction on the change of the encoder resolution selector"
        }
      ]
    },
    "0x7FF73FF0E880": {
      "name": "ExecutorBarXKeys",
      "base": "0x7FF73FFE29F0",
      "child": "0x7FF73FDA7350",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFE29F0": {
      "name": "ExecutorBar",
      "base": "0x7FF73FE8E140",
      "child": "0x7FF73FDA7350",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecFrom",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "255",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::PropertyInvokableT<bool (Gma3UI::ExecutorBar::*)(class DB::Object *, class DB::SetParam &), {public: bool Gma3UI::ExecutorBar::OnTitleClickAction(class DB::Object *, class DB::SetParam &), 0}>::`vftable'",
          "name": "OnTitleClick",
          "TypeNameStr": "Action",
          "subtype": 0,
          "default": "in:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "0:dummy str"
        }
      ]
    },
    "0x7FF73FFD0D00": {
      "name": "SpecialExecSection",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FECF350",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecBarToDraw",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "None"
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "FirstRow",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "LastRow",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF39CD0": {
      "name": "ExecutorSectionXKeys",
      "base": "0x7FF73FF053C0",
      "child": "0x7FF73FEB9DB0",
      "parent": "0x7FF73FF0E880",
      "properties": []
    },
    "0x7FF73FF053C0": {
      "name": "ExecutorSection",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FEB9DB0",
      "parent": "0x7FF73FFE29F0",
      "properties": [
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecRowCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<unsigned int>::`vftable'",
          "name": "ExecColCount",
          "TypeNameStr": "UInt32",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF19EE0": {
      "name": "AllExecContent",
      "base": "0x7FF73FE84320",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FECF350",
      "properties": []
    },
    "0x7FF73FF289A0": {
      "name": "ExecTitleButton",
      "base": "0x7FF73FED71D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FEB9DB0",
      "properties": []
    },
    "0x7FF73FFBE0B0": {
      "name": "SpecialExecTitleButton",
      "base": "0x7FF73FED71D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FECF350",
      "properties": []
    },
    "0x7FF73FED71D0": {
      "name": "AllExecTitleButton",
      "base": "0x7FF73FE25AB0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FECF350",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "NumberColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Exec.TitleNumbers",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be used for the main numbers of this object."
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "MinorNumberColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Exec.MinorTitleNumbers",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "description": "A name reference of the color that should be used for the minor numbers of this object."
        }
      ]
    },
    "0x7FF73FFD3850": {
      "name": "LastSelectedExecDisplay",
      "base": "0x7FF73FECF350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD0D00",
      "properties": []
    },
    "0x7FF73FF3C2A0": {
      "name": "SpecialExecutorDisplay",
      "base": "0x7FF73FECF350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FFD0D00",
      "properties": []
    },
    "0x7FF73FEB9DB0": {
      "name": "ExecutorDisplay",
      "base": "0x7FF73FECF350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FF053C0",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::ExecProxy>>::`vftable'",
          "name": "ExecProxy",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "ExportIgnore": true,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FECF350": {
      "name": "AllExecDisplay",
      "base": "0x7FF73FDA7350",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FDA7350",
      "properties": []
    },
    "0x7FF73FF52CC0": {
      "name": "ScribbleInput",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::ScribbleInput::*, 10320>::`vftable'",
          "name": "ScribbleTargetChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEDFA00": {
      "name": "AppearanceInput",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::PropertyConnectibleT<class DB::SmartSignalPtr<> Gma3UI::AppearanceInput::*, 10320>::`vftable'",
          "name": "AppearanceTargetChanged",
          "TypeNameStr": "Signal",
          "subtype": 0,
          "default": "out:(s;)",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FEED8F0": {
      "name": "GelColorPropertyInput",
      "base": "0x7FF73FF66FA0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF66FA0": {
      "name": "ColorPropertyInput",
      "base": "0x7FF73FD99540",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "DrawContent",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "1",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "BackgroundButtonStyle",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        },
        {
          "CTypeName": "const DB::Property<bool>::`vftable'",
          "name": "ContentStyle",
          "TypeNameStr": "Bool",
          "subtype": 1,
          "default": "0",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false,
          "Enum": "YesNo"
        }
      ]
    },
    "0x7FF73FF6BA70": {
      "name": "Gma3EncoderBar",
      "base": "0x7FF73FD9BB70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A GMA3-UI component that represents an encoder bar",
      "properties": []
    },
    "0x7FF73FEE1EA0": {
      "name": "Gma3EncoderControl",
      "base": "0x7FF73FDD7F70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFD27A0": {
      "name": "NumInputEdit",
      "base": "0x7FF73FDFA020",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI control (dervied from LineEdit) especially for calculator",
      "properties": []
    },
    "0x7FF73FEDE680": {
      "name": "KeybSCEdit",
      "base": "0x7FF73FDFA020",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A UI control (dervied from LineEdit) especially for editing keyboard shortcuts",
      "properties": []
    },
    "0x7FF73FF01AC0": {
      "name": "AttributeToggleButton",
      "base": "0x7FF73FF60890",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FF60890": {
      "name": "AtFilterControl",
      "base": "0x7FF73FDC0470",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": [
        {
          "CTypeName": "const DB::Property<class DB::Handle<class Graphics::Texture>>::`vftable'",
          "name": "ProgIndicator",
          "TypeNameStr": "Texture",
          "subtype": 0,
          "default": "rect_indicator",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        },
        {
          "CTypeName": "const DB::Property<class DB::Handle<class DB::Color>>::`vftable'",
          "name": "ProgIndicatorBackColor",
          "TypeNameStr": "Handle",
          "subtype": 0,
          "default": "Button.Background",
          "ExportIgnore": false,
          "ReadOnly": false,
          "ImportIgnore": false
        }
      ]
    },
    "0x7FF73FF80390": {
      "name": "PresetEncoderControl",
      "base": "0x7FF73FDD7F70",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "properties": []
    },
    "0x7FF73FFA64A0": {
      "name": "CommandLineHistory",
      "base": "0x7FF73FE6F4D0",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A window for displaying a command line history",
      "properties": []
    },
    "0x7FF73FFD4900": {
      "name": "CmdlineEdit",
      "base": "0x7FF73FDFA020",
      "child": "0x7FF73FE84320",
      "parent": "0x7FF73FE84320",
      "description": "A command line UI control (dervied from LineEdit) with a special predefined default look'n'feel and configured signals/actions",
      "properties": []
    },
    "0x7FF73FF96AA0": {
      "name": "Pult",
      "base": "0x7FF73FE98C80",
      "child": "0x7FF73C266850",
      "parent": "0x7FF73F893E80",
      "properties": []
    }
  },
  "class_token_map": {
    "DB::PSR::ImportFakeObject": "ImportFakeObject",
    "DB::PSR::ImportObjectCollect": "ImportObjectCollect",
    "DB::PSR::PatchSheetContentFilter": "PSRPatchSheetContentFilter",
    "DB::PSR::PatchSheetSettings": "PSRPatchSheetSettings",
    "DB::PSR::PatchGridData": "PSRPatchGridData",
    "DB::PSR::ConvertTask": "ConvertTask",
    "DB::PSR::PatchFakeObject": "PatchFakeObject",
    "DB::PSR::PatchFakeCollect": "PatchFakeCollect",
    "DB::MVR::FileCollect": "MVRFileCollect",
    "DB::MVR::File": "MVRFile",
    "DB::MVR::FileComment": "MVRLocalFile",
    "DB::MVR::ServiceCollect": "MVRServiceCollect",
    "DB::MVR::Service": "MVRService",
    "DB::MVR::ServiceInterface": "MVRServiceInterface",
    "DB::MVR::TempExchange": "TempMVRExchange",
    "DB::MVR::Exchange": "MVRxchange",
    "DB::Generator::PatternChannel": "PatternChannel",
    "DB::Generator::PatternChannelCollect": "PatternChannels",
    "DB::Generator::PatternObj": "Pattern",
    "DB::Generator::PatternPool": "Patterns",
    "DB::Generator::BitmapChannel": "BitmapChannel",
    "DB::Generator::BitmapChannelCollect": "BitmapChannels",
    "DB::Generator::BitmapConfig": "BitmapConfig",
    "DB::Generator::BitmapConfigCollect": "BitmapConfigs",
    "DB::Generator::BitmapObj": "Bitmap",
    "DB::Generator::BitmapPool": "Bitmaps",
    "DB::Generator::RandomChannel": "RandomChannel",
    "DB::Generator::RandomChannelCollect": "RandomChannels",
    "DB::Generator::RandomObject": "Random",
    "DB::Generator::RandomPool": "Generators",
    "DB::Generator::BaseChannel": "GeneratorBaseChannel",
    "DB::Generator::BaseChannelCollect": "GeneratorChannels",
    "DB::Generator::BaseConfig": "GeneratorConfiguration",
    "DB::Generator::BaseConfigCollect": "GeneratorConfigurations",
    "DB::Generator::BaseObject": "GeneratorBaseObject",
    "DB::Generator::PoolCollect": "GeneratorTypes",
    "DB::StorePreferencesViews": "StorePreferencesViews",
    "DB::ShowCreatorGridObjectContentFilter": "ShowCreatorGridObjectContentFilter",
    "DB::ShowCreatorSheetSettings": "ShowCreatorSheetSettings",
    "DB::ShowCreatorSettings": "ShowCreatorSettings",
    "DB::SmartViewSettings": "SmartViewSettings",
    "DB::SmartViewSettingsCollect": "SmartViewSettingsCollect",
    "DB::RunningPlaybacksGridContentFilter": "RunningPlaybacksGirdContentFilter",
    "DB::RunningPlaybacksSettings": "RunningPlaybacksSettings",
    "DB::RunningPlaybacksSettingsCollect": "RunningPlaybacksSettingsCollect",
    "DB::RunningPlaybacksSheetSettings": "RunningPlaybacksSheetSettings",
    "DB::SoundPoolSettings": "SoundPoolSettings",
    "DB::SoundPoolSettingsCollect": "SoundPoolSettingsCollect",
    "DB::VideoPoolSettings": "VideoPoolSettings",
    "DB::VideoPoolSettingsCollect": "VideoPoolSettingsCollect",
    "DB::TimecodeSlotPoolSettings": "TimecodeSlotPoolSettings",
    "DB::TimecodeSlotPoolSettingsCollect": "TimecodeSlotPoolSettingsCollect",
    "DB::PresetVideoPoolSettings": "PresetVideoPoolSettings",
    "DB::PresetVideoPoolSettingsCollect": "PresetVideoPoolSettingsCollect",
    "DB::PresetShapersPoolSettings": "PresetShapersPoolSettings",
    "DB::PresetShapersPoolSettingsCollect": "PresetShapersPoolSettingsCollect",
    "DB::PresetControlPoolSettings": "PresetControlPoolSettings",
    "DB::PresetControlPoolSettingsCollect": "PresetControlPoolSettingsCollect",
    "DB::PresetFocusPoolSettings": "PresetFocusPoolSettings",
    "DB::PresetFocusPoolSettingsCollect": "PresetFocusPoolSettingsCollect",
    "DB::PresetBeamPoolSettings": "PresetBeamPoolSettings",
    "DB::PresetBeamPoolSettingsCollect": "PresetBeamPoolSettingsCollect",
    "DB::PresetColorPoolSettings": "PresetColorPoolSettings",
    "DB::PresetColorPoolSettingsCollect": "PresetColorPoolSettingsCollect",
    "DB::PresetGoboPoolSettings": "PresetGoboPoolSettings",
    "DB::PresetGoboPoolSettingsCollect": "PresetGoboPoolSettingsCollect",
    "DB::PresetPositionPoolSettings": "PresetPositionPoolSettings",
    "DB::PresetPositionPoolSettingsCollect": "PresetPositionPoolSettingsCollect",
    "DB::PresetDimmerPoolSettings": "PresetDimmerPoolSettings",
    "DB::PresetDimmerPoolSettingsCollect": "PresetDimmerPoolSettingsCollect",
    "DB::PresetAllPoolSettings": "PresetAllPoolSettings",
    "DB::PresetAllPoolSettingsCollect": "PresetAllPoolSettingsCollect",
    "DB::PresetDynamicPoolSettings": "PresetDynamicPoolSettings",
    "DB::PresetDynamicPoolSettingsCollect": "PresetDynamicPoolSettingsCollect",
    "DB::PresetPoolSettings": "PresetPoolSettings",
    "DB::PresetPoolSettingsCollect": "PresetPoolSettingsCollect",
    "DB::WorldPoolSettings": "WorldPoolSettings",
    "DB::WorldPoolSettingsCollect": "WorldPoolSettingsCollect",
    "DB::TimerPoolSettings": "TimerPoolSettings",
    "DB::TimerPoolSettingsCollect": "TimerPoolSettingsCollect",
    "DB::TimecodePoolSettings": "TimecodePoolSettings",
    "DB::TimecodePoolSettingsCollect": "TimecodePoolSettingsCollect",
    "DB::SequencePoolSettings": "SequencePoolSettings",
    "DB::SequencePoolSettingsCollect": "SequencePoolSettingsCollect",
    "DB::QuickeyPoolSettings": "QuickeyPoolSettings",
    "DB::QuickeyPoolSettingsCollect": "QuickeyPoolSettingsCollect",
    "DB::PluginPoolSettings": "PluginPoolSettings",
    "DB::PluginPoolSettingsCollect": "PluginPoolSettingsCollect",
    "DB::PagePoolSettings": "PagePoolSettings",
    "DB::PagePoolSettingsCollect": "PagePoolSettingsCollect",
    "DB::MatricksPoolSettings": "MatricksPoolSettings",
    "DB::MatricksPoolSettingsCollect": "MatricksPoolSettingsCollect",
    "DB::MacroPoolSettings": "MacroPoolSettings",
    "DB::MacroPoolSettingsCollect": "MacroPoolSettingsCollect",
    "DB::LayoutPoolSettings": "LayoutPoolSettings",
    "DB::LayoutPoolSettingsCollect": "LayoutPoolSettingsCollect",
    "DB::GroupPoolSettings": "GroupPoolSettings",
    "DB::GroupPoolSettingsCollect": "GroupPoolSettingsCollect",
    "DB::GeneratorPoolSettings": "GeneratorPoolSettings",
    "DB::GeneratorPoolSettingsCollect": "GeneratorPoolSettingsCollect",
    "DB::GelPoolSettings": "GelPoolSettings",
    "DB::GelPoolSettingsCollect": "GelPoolSettingsCollect",
    "DB::FilterPoolSettings": "FilterPoolSettings",
    "DB::FilterPoolSettingsCollect": "FilterPoolSettingsCollect",
    "DB::ExecConfigPoolSettings": "ExecConfigPoolSettings",
    "DB::ExecConfigPoolSettingsCollect": "ExecConfigPoolSettingsCollect",
    "DB::BitmapPoolSettings": "BitmapPoolSettings",
    "DB::BitmapPoolSettingsCollect": "BitmapPoolSettingsCollect",
    "DB::PoolSettings": "PoolSettings",
    "DB::PoolSettingsCollect": "PoolSettingsCollect",
    "DB::ViewButtonScreen": "ViewButtonScreen",
    "DB::ViewButtonScreenCollect": "ViewButtonScreens",
    "DB::ViewButton": "ViewButton",
    "DB::ScreenContentCollect": "ScreenContents",
    "DB::ScreenContent": "ScreenContent",
    "DB::View": "View",
    "DB::ViewPool": "Views",
    "DB::ViewWidget": "ViewWidget",
    "DB::PresetSheetFilter": "PresetSheetFilter",
    "DB::PresetEditorSettings": "PresetEditorSettings",
    "DB::LayoutElementDefaults": "LayoutElementDefaults",
    "DB::LayoutElementDefaultsCollect": "LayoutElementDefaultsCollect",
    "DB::LayoutViewSettings": "LayoutViewSettings",
    "DB::LayoutViewSettingsCollect": "LayoutViewSettingsCollect",
    "DB::LayoutElement": "Element",
    "DB::Layout": "Layout",
    "DB::LayoutPool": "Layouts",
    "DB::LayoutCameraObject": "LayoutCameraObject",
    "DB::RemoteDC": "DCRemote",
    "DB::RemoteDCCollect": "DCRemotes",
    "DB::RemoteMidi": "MIDIRemote",
    "DB::RemoteMidiCollect": "MIDIRemotes",
    "DB::RemoteDmx": "DmxRemote",
    "DB::RemoteDmxCollect": "DmxRemotes",
    "DB::Remote": "Remote",
    "DB::RemoteCollect": "RemoteCollect",
    "DB::RemoteTypeCollect": "Remotes",
    "DB::Agenda": "AgendaEvent",
    "DB::AgendaCollect": "Agendas",
    "DB::StorePreferencesTimecode": "StorePreferencesTimecode",
    "DB::TimecodeGridColumnFilter": "TimecodeGridColumnFilter",
    "DB::TimecodeWindowSettings": "TimecodeWindowSettings",
    "DB::TimecodeWindowSettingsCollect": "TimecodeWindowSettingsCollect",
    "DB::TimecodeWindowSharedData": "TimecodeWindowSharedData",
    "DB::TimecodeWindowSharedContainer": "TimecodeWindowSharedContainer",
    "DB::TimecodeGridMainSelection": "TimecodeGridMainSelection",
    "DB::TimecodeGridSelection": "TimecodeGridSelection",
    "DB::TimecodeGridData": "TimecodeGridData",
    "DB::TimecodeGridColumnConfiguration": "TimecodeGridColumnConfiguration",
    "DB::FaderEvent": "FaderEvent",
    "DB::CmdEvent": "CmdEvent",
    "DB::Event": "Event",
    "DB::FaderSubTrack": "FaderSubTrack",
    "DB::CmdSubTrack": "CmdSubTrack",
    "DB::SubTrack": "SubTrack",
    "DB::Marker": "Marker",
    "DB::MarkerTrack": "MarkerTrack",
    "DB::TimeRange": "TimeRange",
    "DB::Track": "Track",
    "DB::TrackGroup": "TrackGroup",
    "DB::Timecode": "Timecode",
    "DB::TimecodePool": "Timecodes",
    "DB::MacroLine": "MacroLine",
    "DB::Macro": "Macro",
    "DB::MacroPool": "Macros",
    "DB::FIDGridData": "FIDGridData",
    "DB::ContentSheetSettings": "ContentSheetSettings",
    "DB::ContentSheetColumnFilter": "ContentSheetColumnFilter",
    "DB::ContentSheetSettingsCollect": "ContentSheetSettingsCollect",
    "DB::RecipeSheetFilter": "RecipeSheetFilter",
    "DB::RecipeSheetSettings": "RecipeSheetSettings",
    "DB::SequenceSheetRowFilter": "SequenceSheetRowFilter",
    "DB::SequenceSheetColumnFilter": "SequenceSheetColumnFilter",
    "DB::SequenceSheetSettings": "SequenceSheetSettings",
    "DB::SequenceSheetSettingsCollect": "SequenceSheetSettingsCollect",
    "DB::EditKeybShortcutGridData": "EditKeybShortcutGridData",
    "DB::PsrFixtureGridData": "PsrFixtureGridData",
    "DB::TimecodeTextGridData": "TimecodeTextGridData",
    "DB::CueUpdateGridData": "CueUpdateGridData",
    "DB::UpdateGridData": "UpdateGridData",
    "DB::FixtureEditorSettings": "FixtureEditorSettings",
    "DB::MvrServicesGridData": "MvrServicesGridData",
    "DB::PhaserLayerGridDataExpanded": "PhaserLayerGridDataExpanded",
    "DB::PhaserLayerGridData": "PhaserLayerGridData",
    "DB::PhaserLayerGridDataBase": "PhaserLayerGridDataBase",
    "DB::PhaserStepGridData": "PhaserStepGridData",
    "DB::FixtureSheetGridData": "FixtureSheetGridData",
    "DB::ContentSheetGridSelection": "ContentSheetGridSelection",
    "DB::CuePartGridData": "CuePartGridData",
    "DB::PresetGridData": "PresetGridData",
    "DB::ExpandedPresetGridData": "ExpandedPresetGridData",
    "DB::FixtureChannelGridData": "FixtureChannelGridData",
    "DB::FixtureChannelGridColumnConfiguration": "FixtureChannelGridColumnConfiguration",
    "DB::FixtureSheetRowFilter": "FixtureSheetRowFilter",
    "DB::FixtureSheetColumnAttributeFilter": "FixtureSheetColumnAttributeFilter",
    "DB::FixtureSheetSettings": "FixtureSheetSettings",
    "DB::FixtureSheetSettingsCollect": "FixtureSheetSettingsCollect",
    "DB::AttributeGridData": "AttributeGridData",
    "DB::TrackSheetGridSelection": "TrackSheetGridSelection",
    "DB::TrackSheetGridData": "TrackSheetGridData",
    "DB::TrackSheetGridColumnConfiguration": "TrackSheetGridColumnConfiguration",
    "DB::ProgrammerPart": "ProgPart",
    "DB::RecipeEditor": "RecipeEditor",
    "DB::Programmer": "Programmer",
    "DB::TagFakeObject": "TagFakeObject",
    "DB::TagFakeCollect": "TagFakeCollect",
    "DB::ObjectTagAssignmentFake": "TagReference",
    "DB::ObjectTag": "Tag",
    "DB::ObjectTagPool": "Tags",
    "DB::ScreenEncoderDirection": "ScreenEncoderDirection",
    "DB::ScreenEncoder": "ScreenEncoder",
    "DB::Color": "Color",
    "DB::ColorGroup": "ColorGroup",
    "DB::ColorCollect": "ColorGroups",
    "DB::ColorDef": "ColorDef",
    "DB::ColorDefGroup": "ColorDefGroup",
    "DB::ColorDefCollect": "ColorDefCollect",
    "DB::ColorThemeContent": "ColorThemeContent",
    "DB::ColorTheme": "ColorTheme",
    "DB::WebSocketsConnection": "WebSocketsConnection",
    "DB::WebServer": "WebServer",
    "DB::Pult": "Pult",
    "DB::PultCollect": "PultCollect",
    "DB::MessageGridSettings": "MessageGridSettings",
    "DB::MessageGridSettingsCollect": "MessageGridSettingsCollect",
    "DB::MessageGridData": "MessageGridData",
    "DB::MessageCenter": "MessageCenter",
    "DB::MessageCategory": "MessageCategory",
    "DB::MessagePriority": "MessagePriority",
    "DB::RdmWindowSettings": "RdmWindowSettings",
    "DB::RdmWindowSettingsCollect": "RdmWindowSettingsCollect",
    "DB::CloningWindowSettings": "CloningWindowSettings",
    "DB::ExecEditorSettings": "ExecEditorSettings",
    "DB::WindowAgendaSettings": "WindowAgendaSettings",
    "DB::WindowAgendaSettingsCollect": "WindowAgendaSettingsCollect",
    "DB::MatricksWindowSettings": "MatricksWindowSettings",
    "DB::CommandWingBarSettings": "CommandWingBarSettings",
    "DB::EncoderBarWindowSettings": "EncoderBarWindowSettings",
    "DB::EncoderBarWindowSettingsCollect": "EncoderBarWindowSettingsCollect",
    "DB::CustomMasterSectionWindowSettings": "CustomMasterSectionWindowSettings",
    "DB::WindowTrackpadSettings": "WindowTrackpadSettings",
    "DB::PhaserSheetRowFilter": "PhaserSheetRowFilter",
    "DB::WindowPhaserEditorSettings": "WindowPhaserEditorSettings",
    "DB::WindowPhaserEditorSettingsCollect": "WindowPhaserEditorSettingsCollect",
    "DB::SelectionViewSettings": "SelectionViewSettings",
    "DB::SelectionViewSettingsCollect": "SelectionViewSettingsCollect",
    "DB::HelpViewerWindowSettings": "HelpViewerWindowSettings",
    "DB::HelpViewerWindowSettingsCollect": "HelperWindowSettingsCollect",
    "DB::XKeysWindowSettings": "XkeysWindowSettings",
    "DB::ModularPlaybackWindowSettings": "ModularPlaybackWindowSettings",
    "DB::ModularPlaybackWindowSettingsCollect": "ModularPlaybackWindowSettingsCollect",
    "DB::PlaybackWindowSettings": "PlaybackWindowSettings",
    "DB::PlaybackWindowSettingsCollect": "PlaybackWindowSettingsCollect",
    "DB::SysteminfoWindowSettings": "SysteminfoWindowSettings",
    "DB::SysteminfoWindowSettingsCollect": "SysteminfoWindowSettingsCollect",
    "DB::SysmonWindowSettings": "SysmonWindowSettings",
    "DB::SysmonWindowSettingsCollect": "SysmonWindowSettingsCollect",
    "DB::CommandlineWindowSettings": "CommandlineWindowSettings",
    "DB::CommandlineWindowSettingsCollect": "CommandlineWindowSettingsCollect",
    "DB::View3DSettings": "View3DSettings",
    "DB::View3DSettingsCollect": "View3DSettingsCollect",
    "DB::SpecialWindowSettings": "SpecialWindowSettings",
    "DB::SpecialWindowSettingsCollect": "SpecialWindowSettingsCollect",
    "DB::ColorPickerSettings": "ColorPickerSettings",
    "DB::ColorPickerSettingsCollect": "ColorPickerSettingsCollect",
    "DB::ShaperWindowSettings": "ShaperWindowSettings",
    "DB::ClockWindowSettings": "ClockWindowSettings",
    "DB::ClockWindowSettingsCollect": "ClockWindowSettingsCollect",
    "DB::Certificate": "Certificate",
    "DB::CertificateCollect": "Certificates",
    "DB::Root": "Root",
    "DB::DeviceConfigurations": "DeviceConfigurations",
    "DB::LocalSettings": "LocalSettings",
    "DB::ExecutorKeyStatus": "ExecutorKeyStatus",
    "DB::HardwareStatus": "HardwareStatus",
    "DB::BatteryStatus": "BatteryStatus",
    "DB::SoundFile": "Sound",
    "DB::SoundFilePool": "Sounds",
    "Hardware::UsbNotifier": "UsbNotifier",
    "Hardware::UsbContainerMouse": "MouseDevices",
    "Hardware::UsbContainerUnknown": "Unknown",
    "Hardware::UsbContainerMA3": "grandMA3Modules",
    "Hardware::UsbContainerStorage": "Storage",
    "Hardware::UsbContainerTouch": "TouchDevices",
    "Hardware::UsbContainerHID": "HID",
    "Hardware::UsbDeviceContainer": "USBDeviceContainer",
    "Hardware::UsbDeviceMouse": "UsbDeviceMouse",
    "Hardware::UsbDeviceTouch": "USBDeviceTouch",
    "Hardware::UsbDeviceUnknown": "USBDeviceUnknown",
    "Hardware::UsbDeviceStorage": "USBDeviceStorage",
    "Hardware::UsbDeviceHID": "USBDeviceHID",
    "Hardware::UsbDeviceMA3": "UsbDeviceMA3",
    "Hardware::UsbDevice": "USBDevice",
    "DB::OutputStationCollectCollect": "OutputStations",
    "DB::OutputStation": "OutputStation",
    "DB::OutputStationCollect": "OutputStationCollect",
    "DB::OutputConfiguration": "OutputConfiguration",
    "DMXProtocol::DMXProtocolCollect": "DMXProtocols",
    "DMXProtocol::KlingNet": "KlingNet",
    "DMXProtocol::KiNet": "KiNet",
    "DMXProtocol::ShowNet": "ShowNet",
    "DMXProtocol::PathPort": "PathPort",
    "DMXProtocol::Etc": "ETC",
    "DMXProtocol::sACNDiscoveryCollect": "sACNDiscoveryCollect",
    "DMXProtocol::sACNDataCollect": "sACNDataCollect",
    "DMXProtocol::sACN": "sACN",
    "DMXProtocol::sACNNodePage": "Page-Nr",
    "DMXProtocol::sACNNode": "sACN-Node",
    "DMXProtocol::sACNData": "sACNData",
    "DMXProtocol::ArtNetNodeCollect": "ArtNetNodeCollect",
    "DMXProtocol::ArtNetDataCollect": "ArtNetDataCollect",
    "DMXProtocol::ArtNet": "ArtNet",
    "DMXProtocol::ArtNetData": "Art-Net-Data",
    "DMXProtocol::ArtNetIpNode": "Art-Net-Node",
    "DMXProtocol::ArtNetNode": "BindIndex",
    "DMXProtocol::Protocol": "DMXProtocol",
    "DB::Drive": "Drive",
    "DB::DriveCollect": "DriveCollect",
    "DB::TempCollect": "Temp",
    "DB::UserImageLibraryFile": "UserImageLibraryFile",
    "DB::VideoLibraryFile": "VideoLibraryFile",
    "DB::SoundLibraryFile": "AudioLibraryFile",
    "DB::CachedObjLibraryFile": "CachedObjLibraryFile",
    "DB::FixtureTypeLocalModeLibFile": "FixtureTypeLocalModeLibFile",
    "DB::FixtureTypeShareLibraryFile": "FixtureTypeShareLibraryFile",
    "DB::FixtureTypeLocalLibraryFile": "FixtureTypeLocalLibraryFile",
    "DB::FixtureTypeModeLibFile": "FixtureTypeModeFile",
    "DB::FixtureTypeLibraryFile": "FixtureTypeFile",
    "DB::LibraryFileCollect": "Library",
    "DB::LibraryFile": "File",
    "DB::NtpMonitor": "NtpMonitor",
    "DB::TimeLogBuffer": "TimeLogBuffer",
    "DB::TimeLog": "LogInterface",
    "DB::Quickey": "Quickey",
    "DB::QuickeyPool": "Quickeys",
    "LUA::Menu": "Menu",
    "LUA::MenuPool": "Menus",
    "LUA::UserPlugin": "UserPlugin",
    "LUA::Plugin": "Plugin",
    "LUA::PluginPool": "Plugins",
    "LUA::PluginComponentMultilanguage": "ComponentMultiLanguage",
    "LUA::PluginComponentSound": "ComponentSound",
    "LUA::PluginComponentTexture": "ComponentTexture",
    "LUA::PluginComponentXML": "ComponentXML",
    "LUA::PluginComponentLua": "ComponentLua",
    "LUA::PluginComponent": "Component",
    "DB::AddonVariables": "AddonVariables",
    "DB::Addon": "Addon",
    "DB::AddonApiVariables": "ApiVariables",
    "DB::AddonApiObject": "ApiObject",
    "DB::AddonApiPSN": "ApiPSN",
    "DB::AddonApiDMX": "ApiDMX",
    "DB::AddonApiMessageBox": "ApiMessageBox",
    "DB::AddonApiProgress": "ApiProgress",
    "DB::AddonApiGeneral": "ApiGeneral",
    "DB::AddonApi": "AddonApi",
    "DB::AddonCollect": "Addons",
    "DB::OutputConfigGridData": "OutputConfigGridData",
    "DB::DmxPatchFixtureGridData": "DMXPatchFixtureGridData",
    "DB::DmxSheetGridData": "DMXSheetGridData",
    "DB::DmxSheetListGridData": "DMXSheetListGridData",
    "DB::DmxSheetSettings": "DMXSheetSettings",
    "DB::DmxSheetSettingsCollect": "DmxSheetSettingsCollect",
    "DB::KeyboardShortcut": "KeyboardShortcut",
    "DB::KeyboardShortcutsConfig": "KeyboardShortCuts",
    "DB::WindowType": "WindowType",
    "DB::WindowTypeCollect": "WindowTypes",
    "DB::ScreenConfig": "ScreenConfig",
    "DB::ScreenConfigCollect": "ScreenConfigurations",
    "DB::TimezoneCollect": "Timezones",
    "DB::Timezone": "Timezone",
    "DB::ReferencesGridData": "ReferencesGridData",
    "DB::StorePreferencesPreset": "StorePreferencesPreset",
    "DB::SequencePool": "Sequences",
    "DB::Sequence": "Sequence",
    "DB::Cue": "Cue",
    "DB::CuePart": "Part",
    "DB::PresetPool": "Presets",
    "DB::PresetPoolCollect": "PresetPools",
    "DB::Recipe": "Recipe",
    "DB::Preset": "Preset",
    "DB::Encoder": "Encoder",
    "DB::UserEncoderPage": "EncoderPage",
    "DB::EncoderBank": "EncoderBank",
    "DB::EncoderBar": "EncoderBar",
    "DB::EncoderBarPool": "EncoderBarPool",
    "DB::AudioInDeviceDescriptionCollect": "AudioInDescriptions",
    "DB::AudioInDeviceDescription": "AudioInDeviceDescription",
    "DB::MIDIOutDeviceDescriptionCollect": "MidiOutDescriptions",
    "DB::MIDIInDeviceDescriptionCollect": "MidiInDescriptions",
    "DB::MIDIDeviceDescription": "MIDIDeviceDescription",
    "DB::LivePatch3dSelection": "LivePatch3dSelection",
    "DB::Patch3dSelection": "Patch3dSelection",
    "DB::Selection": "Selection",
    "DB::FixtureFilterRuleParent": "FixtureFilterRuleParent",
    "DB::FixtureFilterRuleParentItem": "FixtureFilterRuleParentItem",
    "DB::FixtureFilterRuleNameItem": "FixtureFilterRuleNameItem",
    "DB::FixtureFilterRuleName": "FixtureFilterRuleName",
    "DB::FixtureFilterRulePatch": "FixtureFilterRulePatch",
    "DB::FixtureFilterRuleCID": "FixtureFilterRuleCID",
    "DB::FixtureFilterRuleFID": "FixtureFilterRuleFID",
    "DB::FixtureFilterRuleRotZ": "FixtureFilterRuleRotZ",
    "DB::FixtureFilterRuleRotY": "FixtureFilterRuleRotY",
    "DB::FixtureFilterRuleRotX": "FixtureFilterRuleRotX",
    "DB::FixtureFilterRulePosZ": "FixtureFilterRulePosZ",
    "DB::FixtureFilterRulePosY": "FixtureFilterRulePosY",
    "DB::FixtureFilterRulePosX": "FixtureFilterRulePosX",
    "DB::FixtureFilterRuleNumericRanges": "FixtureFilterRuleNumericRanges",
    "DB::FixtureFilterRuleFixtureType": "FixtureFilterRuleFixtureType",
    "DB::FixtureFilterRuleFixtureTypeItem": "FixtureFilterRuleFixtureTypeItem",
    "DB::FixtureFilterRuleIDTypeItem": "IdType",
    "DB::FixtureFilterRuleIDType": "FixtureFilterRuleIDType",
    "DB::FixtureFilterRuleClass": "FixtureFilterRuleClass",
    "DB::FixtureFilterRuleClassItem": "FixtureFilterRuleClassItem",
    "DB::FixtureFilterRuleLayer": "FixtureFilterRuleLayer",
    "DB::FixtureFilterRuleLayerItem": "FixtureFilterRuleLayerItem",
    "DB::FixtureFilterRuleItemIndex": "FixtureFilterRuleItemIndex",
    "DB::FixtureFilterRuleIndices": "FixtureFilterRuleIndices",
    "DB::FixtureFilterRule": "FilterRuleFixture",
    "DB::FixtureFilterRuleItemBase": "FixtureFilterRuleItemBase",
    "DB::FixtureFilterRules": "FixtureFilterRules",
    "DB::FilterPool": "Filters",
    "DB::FilterObj": "Filter",
    "DB::WorldPool": "Worlds",
    "DB::World": "World",
    "DB::GroupPool": "Groups",
    "DB::Group": "Group",
    "DB::MatricksPool": "MAtricks",
    "DB::Matricks": "MAtrick",
    "DB::TagGridData": "TagGridData",
    "DB::AssignmentEditorGridData": "AssignmentEditorGridData",
    "DB::AssignmentEditorFilterItem": "AssignmentEditorFilterItem",
    "DB::TempStoreSettings": "TempStoreSettings",
    "DB::ThemeMergeGridData": "ThemeMergeGridData",
    "DB::RunningPlaybacksDBObjectGridData": "RunningPlaybacksDBObjectGridData",
    "DB::AgendaGridData": "AgendaGridData",
    "DB::LayoutGridData": "LayoutGridData",
    "DB::RecipeGridData": "RecipeGridData",
    "DB::RdmGridData": "RdmGridData",
    "DB::ColumnSetGridData": "ColumnSetGridData",
    "DB::OopsGridData": "OopsGridData",
    "DB::GelGridData": "GelGridData",
    "DB::GelGridSettings": "GelGridSettings",
    "DB::DBObjectGridData": "DBObjectGridData",
    "DB::DBObjectGridLineFakeObject": "DBObjectGridLine",
    "DB::DBObjectGridColumnConfiguration": "DBObjectGridColumnConfiguration",
    "DB::PatchFilterItem": "PatchFilterItem",
    "DB::PatchFilter": "PatchFilter",
    "DB::Patch": "Patch",
    "DB::DmxCurveFakePoint": "DmxCurvePoint",
    "DB::DmxCurve": "DmxCurve",
    "DB::DmxCurveCollect": "DmxCurves",
    "DB::FakeMultiPatchBase": "MultiPatchBase",
    "DB::Fixture": "Fixture",
    "DB::FixtureCollect": "Fixtures",
    "DB::StageElement": "StageElement",
    "DB::Space": "Space",
    "DB::SpaceCollect": "Spaces",
    "DB::Stage": "Stage",
    "DB::StageCollect": "Stages",
    "DB::FixtureLayerCollect": "Layers",
    "DB::FixtureLayer": "FixtureLayer",
    "DB::FixtureClassCollect": "Classes",
    "DB::FixtureClass": "Class",
    "DB::FixtureIDs": "IDs",
    "DB::FixtureIDCollect": "IDTypes",
    "DB::Subfixture": "SubFixture",
    "DB::ChannelUICollect": "UIChannels",
    "DB::ChannelUIFakeObject": "UIChannel",
    "DB::ChannelRTCollect": "RTChannels",
    "DB::ChannelRTFakeObject": "RTChannel",
    "DB::MaterialPool": "Materials",
    "DB::MeshPool": "Meshes",
    "DB::UserMesh": "UserMesh",
    "DB::Mesh": "Mesh",
    "DB::UserMaterial": "UserMaterial",
    "DB::MaterialContent": "MaterialContent",
    "DB::Material": "Material",
    "DB::CameraPool": "Cameras",
    "DB::Camera": "Camera",
    "DB::StorePreferencesTimer": "StorePreferencesTimer",
    "DB::TimerPool": "Timers",
    "DB::Timer": "Timer",
    "DB::Output": "Output",
    "DB::PlaybackTable": "PlaybackTable",
    "DB::PSN::Tracker": "Tracker",
    "DB::PSN::Protocol": "PSNProtocol",
    "DB::PSN::System": "System",
    "DB::DMX::FakeAddress": "DMXAddress",
    "DB::DMX::Addresses": "DmxAddresses",
    "DB::DMX::DmxFakeObject": "DMX",
    "DB::DMX::Universe": "DmxUniverse",
    "DB::DMX::UniverseCollect": "DmxUniverses",
    "DB::DMX::Root": "DMXRoot",
    "DB::DMXModeFake": "DMXModeFake",
    "DB::FixtureTypeFake": "FixtureTypeFake",
    "DB::FixtureTypeOverview": "FixtureTypesOverview",
    "DB::FixtureTypeCollect": "FixtureTypes",
    "DB::FixtureType": "FixtureType",
    "DB::PowerConsumption": "PowerConsumption",
    "DB::Connector": "Connector",
    "DB::ConnectorCollect": "Connectors",
    "DB::CRI": "CRI",
    "DB::CRIGroup": "CRIGroup",
    "DB::CRICollect": "CRIs",
    "DB::Gamut": "Gamut",
    "DB::GamutCollect": "GamutCollect",
    "DB::ColorSpaceData": "ColorSpaceData",
    "DB::ColorSpaceCollect": "ColorSpaceCollect",
    "DB::MeasurementPoint": "MeasurementPoint",
    "DB::MeasurementFilter": "MeasurementFilter",
    "DB::MeasurementEmitter": "MeasurementEmitter",
    "DB::Measurement": "Measurement",
    "DB::FTFilter": "FTFilter",
    "DB::FTFilterCollect": "FTFilters",
    "DB::Emitter": "Emitter",
    "DB::EmitterCollect": "Emitters",
    "DB::PhysicalPropertiesData": "PhysicalPropertiesData",
    "DB::PhysicalProperties": "PhysicalProperties",
    "DB::PhysicalDescriptions": "PhysicalDescriptions",
    "DB::RelationCollect": "Relations",
    "DB::DMXModeCollect": "DMXModes",
    "DB::DMXMode": "DMXMode",
    "DB::FTSubfixtureFakeObject": "FTSubfixture",
    "DB::FTSubfixtureFakeObjectCollect": "SubfixtureOverview",
    "DB::Relation": "Relation",
    "DB::GeometryCollect": "Geometries",
    "DB::GeometryDisplay": "GeometryDisplay",
    "DB::PinPatch": "PinPatch",
    "DB::WiringObject": "WiringObject",
    "DB::Support": "Support",
    "DB::Structure": "Structure",
    "DB::Magnet": "Magnet",
    "DB::LaserProtocol": "LaserProtocol",
    "DB::Laser": "Laser",
    "DB::Inventory": "Inventory",
    "DB::MediaServerMaster": "MediaServerMaster",
    "DB::MediaServerCamera": "MediaServerCamera",
    "DB::MediaServerLayer": "MediaServerLayer",
    "DB::FilterShaper": "FilterShaper",
    "DB::FilterBeam": "FilterBeam",
    "DB::FilterColor": "FilterColor",
    "DB::FilterGobo": "FilterGobo",
    "DB::Beam": "Beam",
    "DB::Axis": "Axis",
    "DB::DmxBreakOffset": "Break",
    "DB::GeometryReference": "GeometryReference",
    "DB::SoftwareVersion": "SoftwareVersion",
    "DB::SoftwareVersionCollect": "SoftwareVersions",
    "DB::DMXChannel": "DMXChannel",
    "DB::DMXChannelCollect": "DMXChannels",
    "DB::GeometryBase": "Geometry",
    "DB::LogicalChannel": "LogicalChannel",
    "DB::ChannelFunction": "ChannelFunction",
    "DB::ChannelSet": "ChannelSet",
    "DB::ModelCollect": "Models",
    "DB::Model": "Model",
    "DB::WheelCollect": "Wheels",
    "DB::Wheel": "Wheel",
    "DB::WheelSlot": "Slot",
    "DB::Facet": "Facet",
    "DB::SupportedProtocols": "Protocols",
    "DB::RDM::FixtureType": "RDMFixtureType",
    "DB::RDM::Personality": "Personality",
    "DB::RDM::PersonalityCollect": "FTRDMPersonalityCollect",
    "DB::RDM::NotificationCollect": "Notifications",
    "DB::RDM::NotificationSensor": "RDMSensorNotification",
    "DB::RDM::NotificationParameter": "RDMParameterNotification",
    "DB::RDM::NotificationAbsent": "RDMAbsentNotification",
    "DB::RDM::ParameterCollect": "Parameters",
    "DB::RDM::Parameter": "Parameter",
    "DB::FTMacroCollect": "FTMacros",
    "DB::FTMacro": "FTMacro",
    "DB::FTMacroDMXValue": "MacroDMXValue",
    "DB::FTMacroDMXStep": "MacroDMXStep",
    "DB::FTMacroDMX": "MacroDMX",
    "DB::FTPresetValue": "FTPresetValue",
    "DB::FTPresetChannel": "FTPresetChannel",
    "DB::FTPreset": "FTPreset",
    "DB::FTPresetType": "FTPresetType",
    "DB::FTPresetCollect": "FTPresets",
    "DB::RevisionCollect": "Revisions",
    "DB::Revision": "Revision",
    "DB::PsrExtraData": "PsrExtraData",
    "DB::AttributeDefinition": "AttributeDefinitions",
    "DB::AttributeCollect": "Attributes",
    "DB::Attribute": "Attribute",
    "DB::ActivationGroupCollect": "ActivationGroups",
    "DB::ActivationGroup": "ActivationGroup",
    "DB::FeatureGroupCollect": "FeatureGroups",
    "DB::FeatureGroup": "FeatureGroup",
    "DB::Feature": "Feature",
    "DB::DeactivationGroupCollect": "DeactivationGroups",
    "DB::DeactivationGroup": "DeactivationGroup",
    "DB::SpecialExecutor": "SpecialExecutor",
    "DB::SpecialExecutorPage": "SpecialExecutors",
    "DB::SpecialExecutorPageCollect": "SpecialExecutorPages",
    "DB::ExecPagePool": "Pages",
    "DB::Exec": "Exec",
    "DB::ExecProxy": "Proxy",
    "DB::ExecPage": "Page",
    "DB::ExecConfigPool": "Configurations",
    "DB::ExecConfig": "Configuration",
    "DB::ExecConfigEntry": "ConfigEntry",
    "DB::MVR::FakeFixture": "PsrFakeFixture",
    "DB::MVR::FixtureCollect": "PsrFixtures",
    "DB::UdpProtocol": "UdpProtocol",
    "DB::OSC::Data": "OSCData",
    "DB::OSC::Base": "OSCBase",
    "DB::ShowSettings": "ShowSettings",
    "DB::ShowDeletedData": "ShowDeletedData",
    "DB::ShowMetaDataFileCollect": "ShowMetaDataCollect",
    "DB::ShowMetaDataFile": "MetaFile",
    "DB::ShowMetaData": "ShowMetaData",
    "DB::ShowVariables": "Variables",
    "DB::TimecodeStatuses": "TimecodeStatuses",
    "DB::SoundChannel": "SoundChannel",
    "DB::SoundChannels": "SoundChannels",
    "DB::SoundSettings": "SoundSettings",
    "DB::MidiSettings": "MidiSettings",
    "DB::GlobalSettings": "GlobalSettings",
    "DB::DefaultPlaybackSettings": "DefaultPlaybackSettings",
    "DB::ShowData": "ShowData",
    "DB::DataPool": "Pool",
    "DB::DataPoolCollect": "DataPools",
    "DB::StationSettings": "StationSettings",
    "DB::ExtensionConfig": "ExtensionConfig",
    "DB::ExtensionConfigCollect": "ExtensionConfigurations",
    "DB::DeskLightsSet": "DeskLightsSet",
    "DB::DeskLightsCollect": "DeskLightsCollect",
    "DB::DefaultDisplayPosition": "DefaultDisplayPosition",
    "DB::DefaultDisplayPositions": "DefaultDisplayPositions",
    "DB::DefaultDisplayPositionsCollect": "DefaultDisplayPositionsCollect",
    "DB::DisplaySurfaceCollect": "DisplaySurfaces",
    "DB::DisplaySurface": "DisplaySurface",
    "DB::TimeConfig": "TimeConfig",
    "DB::KeyRegistry": "KeyRegistry",
    "DB::Key": "Key",
    "Manet::Socket": "MAnetSocket",
    "Manet::CloudMember": "CloudMember",
    "Manet::Cloud": "Cloud",
    "Manet::NetworkStation": "NetworkStation",
    "Manet::NetworkStationCollect": "NetworkStations",
    "Manet::NetworkHostTypeCollect": "HostTypes",
    "Manet::NetworkSession": "Session",
    "Manet::NetworkSessionCollect": "Sessions",
    "DB::TempNetworkInterfaceCollect": "TempNetworkInterfaces",
    "DB::TempNetworkRemoteInterfaceCollect": "TempNetworkRemoteInterfaceCollect",
    "DB::TempRemoteIP": "IP",
    "DB::TempRemoteNetworkInterface": "NetworkInterface",
    "DB::NetworkIP": "NetworkIP",
    "DB::NetworkInterface": "Interface",
    "DB::NetworkInterfaceCollect": "Interfaces",
    "DB::RDM::FixtureTypeCollect": "RDMFixtureTypes",
    "DB::RDM::Port": "RDMPort",
    "DB::RDM::PortCollect": "RDMPorts",
    "DB::RDM::Data": "RDMData",
    "DB::RDM::Fixture": "RDMFixture",
    "DB::RDM::FakeValueSensor": "FakeValueSensor",
    "DB::RDM::ValueSensor": "ValueSensor",
    "DB::RDM::ValueRealtimeClock": "Value_REAL_TIME_CLOCK",
    "DB::RDM::ValueDefaultSlotValue": "Value_Default_Slot_Value",
    "DB::RDM::ValueSlotInfo": "Value_SLOT_INFO",
    "DB::RDM::ValueSensorDefinition": "Value_SENSOR_DEFINITION",
    "DB::RDM::ValueDmxPersonalityDescription": "Value_DMX_PERSONALITY_DESCRIPTION",
    "DB::RDM::ValueString": "Value_ASCII",
    "DB::RDM::ValueInt32": "Value_SIGNED_DWORD",
    "DB::RDM::ValueUint32": "Value_UNSIGNED_DWORD",
    "DB::RDM::ValueInt16": "Value_SIGNED_WORD",
    "DB::RDM::ValueUint16": "Value_UNSIGNED_WORD",
    "DB::RDM::ValueInt8": "RDMValue_SIGNED_BYTE",
    "DB::RDM::ValueUint8": "RDMValue_UNSIGNED_BYTE",
    "DB::RDM::ValueBool": "ValueBool",
    "DB::RDM::ValueBase": "ValueBase",
    "DB::HardwareConfiguration": "HardwareConfiguration",
    "DB::HardwareConfigurationCollect": "HardwareConfigurations",
    "DB::HardwareIoConnectors": "HardwareIoConnectors",
    "DB::FaderDefinition": "FaderDefinition",
    "DB::FaderDefinitions": "FaderDefinitions",
    "DB::LedDefinition": "LedDefinition",
    "DB::LedDefinitions": "LedDefinitions",
    "DB::HardKey": "Hardkey",
    "DB::HardKeys": "Hardkeys",
    "DB::BigCmdline": "Cmdline",
    "DB::BigCmdlineCollect": "Cmdlines",
    "DB::CmdlineCollect": "Cmdlines",
    "DB::Cmdline": "Cmdline",
    "DB::EncoderDefinition": "EncoderDefinition",
    "DB::EncoderDefinitionCollect": "EncoderDefinitions",
    "DB::ProgUpdateCue": "CueUpdate",
    "DB::ProgUpdateCueCollect": "CueUpdates",
    "DB::ProgUpdatePreset": "PresetUpdate",
    "DB::ProgUpdatePresetCollect": "PresetUpdates",
    "DB::ProgUpdate": "ProgUpdate",
    "DB::ProgUpdateCollect": "ProgUpdateCollect",
    "DB::VKValue": "VKValue",
    "DB::VirtualKey": "VirtualKey",
    "DB::VirtualKeyCollect": "VirtualKeys",
    "DB::Undo": "Undo",
    "DB::UndoCollect": "Undos",
    "DB::MAPacket": "MAPacket",
    "DB::ReleaseFile": "ReleaseFile",
    "DB::Collection": "Collection",
    "DB::ObjectSelection": "SequenceSelection",
    "DB::MasterPoolCollect": "Masters",
    "DB::MasterPoolTiming": "MasterPoolTiming",
    "DB::MasterTiming": "MasterTiming",
    "DB::MasterPoolPlayback": "MasterPoolPlayback",
    "DB::MasterPlayback": "MasterPlayback",
    "DB::MasterPoolGrand": "MasterPoolGrand",
    "DB::MasterGrand": "MasterGrand",
    "DB::MasterPoolSelected": "MasterPoolSelected",
    "DB::MasterSelected": "MasterSelected",
    "DB::MasterPool": "MasterPool",
    "DB::Master": "Master",
    "DB::LoadedPlaybacks": "LoadedPlaybacks",
    "DB::MyRunningSoundFiles": "MyRunningSoundFiles",
    "DB::RunningSoundFiles": "RunningSoundFiles",
    "DB::MyRunningTimers": "MyRunningTimers",
    "DB::RunningTimers": "RunningTimers",
    "DB::MyRunningPresets": "MyRunningPresets",
    "DB::RunningPresets": "RunningPresets",
    "DB::MyRunningTimecodes": "MyRunningTimecodes",
    "DB::RunningTimecodes": "RunningTimecodes",
    "DB::MyRunningMacros": "MyRunningMacros",
    "DB::RunningMacros": "RunningMacros",
    "DB::MyRunningSequences": "MyRunningSequences",
    "DB::RunningSequences": "RunningSequences",
    "DB::RunningPlaybacksCollect": "RunningPlaybacksCollect",
    "DB::RunningPlaybacks": "RunningPlaybacks",
    "DB::FakeUserAttribute": "UserAttribute",
    "DB::UserAttributePreferences": "UserAttributePreferences",
    "DB::SmartViewPool": "SmartViewPool",
    "DB::UserEnvironment": "UserEnvironment",
    "DB::UserEnvironmentCollect": "Environments",
    "DB::UserCollect": "Users",
    "DB::User": "User",
    "DB::UserProfileCollect": "UserProfiles",
    "DB::UserProfile": "UserProfile",
    "DB::ExecutorFixation": "ExecutorFixation",
    "DB::PluginPreferences": "PluginPreferences",
    "DB::PluginPreferencesCollect": "PluginPreferencesCollect",
    "DB::AtFilter": "AtFilter",
    "DB::AutoCreateSettings": "AutoCreateSettings",
    "DB::StorePreferences": "StorePreferences",
    "DB::StorePreferencesGroup": "StorePreferencesGroup",
    "DB::StorePreferencesExec": "StorePreferencesExec",
    "DB::StorePreferencesSequence": "StorePreferencesSequence",
    "DB::RenderQualityPool": "RenderQualities",
    "DB::RenderQuality": "RenderQuality",
    "DB::KeyModifier": "KeyModifier",
    "DB::KeyboardKey": "KeyboardKey",
    "DB::KeyboardLayout": "KeyboardLayout",
    "DB::KeyboardLayoutCollect": "KeyboardLayouts",
    "DB::MultiRowGridSelection": "MultiRowGridSelection",
    "DB::OopsGridSelection": "OopsGridSelection",
    "DB::SingleRowGridSelection": "SingleRowGridSelection",
    "DB::SingleCellGridSelection": "SingleCellGridSelection",
    "DB::ColumnGridSelection3dLivePatch": "ColumnGridSelection3dLivePatch",
    "DB::ColumnGridSelection3d": "ColumnGridSelection3d",
    "DB::ColumnGridSelection": "ColumnGridSelection",
    "DB::FlexGridSelection": "FlexGridSelection",
    "DB::UnassignedTagGridFilter": "UnassignedTagGridFilter",
    "DB::AtFilterSettings": "AtFilterSettings",
    "DB::SoftwareGridFilter": "SoftwareGridFilter",
    "DB::SessionGridFilter": "SessionGridFilter",
    "DB::NetworkGridFilter": "NetworkGridFilter",
    "DB::PatchRowFilter": "PatchRowFilter",
    "DB::PatchLiveSettings": "PatchLiveSettings",
    "DB::PatchEditorSettings": "PatchEditorSettings",
    "DB::PatchSettings": "PatchSettings",
    "DB::GridPatchContentFilterItem": "GridPatchContentFilterItem",
    "DB::GridPatchContentFilter": "GridPatchContentFilter",
    "DB::GridObjectContentFilterItem": "GridObjectContentFilterItem",
    "DB::GridObjectContentFilter": "GridObjectContentFilter",
    "DB::TabRegistry": "TabRegistry",
    "DB::WindowInfoSettings": "WindowInfoSettings",
    "DB::WindowInfoSettingsCollect": "WindowInfoSettingsCollect",
    "DB::GridLineFakeObject": "GridLine",
    "DB::GridColumnConfiguration": "GridColumnConfiguration",
    "DB::GridColumnRegistry": "GridColumnRegistry",
    "DB::GridColumnConfigurationCollect": "GridColumnConfigurationCollect",
    "DB::GridBase": "GridBase",
    "DB::SheetSettings": "GridSettings",
    "DB::GridContentFilterSettings": "GridContentFilterSettings",
    "DB::GridContentFilterItem": "GridContentFilterItem",
    "DB::GridContentFilter": "GridContentFilter",
    "DB::GridContentFilterBase": "GridContentFilterBase",
    "DB::WindowScrollPositions": "WindowScrollPositions",
    "DB::WindowSoundSettings": "WindowSoundSettings",
    "DB::WindowAppearance": "WindowAppearance",
    "DB::WindowSettings": "WindowSettings",
    "DB::WindowSettingsCollect": "WindowSettingsCollect",
    "DB::TemporaryWindowSettings": "TemporaryWindowSettings",
    "DB::GridColumnFilterCollect": "GridColumnFilterCollect",
    "DB::GridColumnBitFilter": "GridColumnBitFilter",
    "DB::GridColumnNamesFilter": "GridColumnNamesFilter",
    "DB::GridColumnFilter": "GridColumnFilter",
    "DB::GridColumn": "GridColumn",
    "DB::GridSelection": "GridSelection",
    "DB::GridData": "GridData",
    "DB::Input::GestureManager": "GestureManager",
    "DB::Input::Touch": "Touch",
    "DB::Input::MouseCollect": "MouseCollect",
    "DB::Input::Mouse": "Mouse",
    "DB::Input::Keyboard": "Keyboard",
    "DB::Input::Device": "Device",
    "DB::Input::Devices": "Devices",
    "DB::Scribble": "Scribble",
    "DB::ScribblePool": "Scribbles",
    "DB::ScribbleEdit": "ScribbleEdit",
    "DB::TimecodeSlotCollect": "TimecodeSlots",
    "DB::TimecodeSlot": "TCSlot",
    "DB::VideoFile": "Video",
    "DB::VideoFilePool": "Videos",
    "DB::NDISource": "NDISource",
    "DB::NDI": "NDI",
    "DB::Gel": "Gel",
    "DB::GelPool": "GelPool",
    "DB::GelPoolCollect": "GelPools",
    "DB::MeshImage": "MeshImage",
    "DB::MeshImagePool": "MeshImagePool",
    "DB::UserImage": "UserImage",
    "DB::UserImagePool": "Images",
    "DB::SymbolImage": "SymbolImage",
    "DB::GoboImage": "GoboImage",
    "DB::Image": "Image",
    "DB::SymbolImagePool": "Symbols",
    "DB::ImageGoboPool": "GoboImages",
    "DB::ImagePool": "ImagePool",
    "DB::MediaPools": "MediaPools",
    "DB::ProgLayerObj": "ProgLayer",
    "DB::ProgLayerCollect": "ProgLayers",
    "DB::CachedObj": "CachedObj",
    "DB::CachedObjectPool": "CachedObjectPool",
    "DB::Appearance": "Appearance",
    "DB::AppearancePool": "Appearances",
    "DB::GuidObject": "GuidObject",
    "DB::GenericPool": "GenericPool",
    "DB::TypedNamedObj": "TypedNamedObj",
    "DB::NamedObj": "NamedObj",
    "DB::TestRGBInterface": "TestRGBInterface",
    "DB::TypedObject": "TypedObject",
    "DB::IllegalObject": "IllegalObject",
    "DB::Object": "Object",
    "Graphics::FanRpmView": "FanRpmView",
    "Graphics::SysTempView": "SysTempView",
    "Graphics::GpuTempView": "GpuTempView",
    "Graphics::CpuTempView": "CpuTempView",
    "Graphics::ShowDataMemTestView": "ShowDataMemTestView",
    "Graphics::MemTestView": "MemTestView",
    "Graphics::CPUTestView": "CPUTestView",
    "Graphics::SampleTableView": "SampleTableView",
    "Graphics::SensorView": "SensorView",
    "Graphics::NotificationIcon": "NotificationIcon",
    "Graphics::NotificationText": "NotificationText",
    "Graphics::NotificationTitle": "NotificationTitle",
    "Graphics::NotificationsWrapper": "NotificationsWrapper",
    "Graphics::NotificationsGridScroller": "NotificationsGridScroller",
    "Graphics::NotificationArea": "NotificationArea",
    "Graphics::Navigator": "Navigator",
    "Graphics::MessageBoxA": "MessageBox",
    "Graphics::Toolbar": "Toolbar",
    "Graphics::PropertyBox": "PropertyBox",
    "Graphics::StatusBar": "StatusBar",
    "Graphics::VirtualKeyboardButton": "VirtualKeyboardButton",
    "Graphics::VirtualKeyboard": "VirtualKeyboard",
    "Graphics::ImageInput": "ImageInput",
    "Graphics::ViewInput": "ViewInput",
    "Graphics::ColorInput": "ColorInput",
    "Graphics::NumericInput": "NumericInput",
    "Graphics::PopupList": "PopupList",
    "Graphics::Popup": "Popup",
    "Graphics::MultiLineTextInput": "MultiLineTextInput",
    "Graphics::TextInput": "TextInput",
    "Graphics::UITab": "UITab",
    "Graphics::UIArrowButton": "UIArrowButton",
    "Graphics::UITabButton": "UITabButton",
    "Graphics::BatteryControl": "BatteryControl",
    "Graphics::CalculatorChannelSetControl": "CalculatorChannelSetControl",
    "Graphics::DisplaySelectButton": "DisplaySelectButton",
    "Graphics::ListItemButton": "ListItemButton",
    "Graphics::InfoButton": "InfoButton",
    "Graphics::PropertyRadioButtonList": "PropertyRadioButtonList",
    "Graphics::RadioButtonList": "RadioButtonList",
    "Graphics::RadioItemButtonV2": "RadioItemButtonV2",
    "Graphics::RadioItemButton": "RadioItemButton",
    "Graphics::StateItemButton": "StateItemButton",
    "Graphics::PopupItemButton": "PopupItemButton",
    "Graphics::ScrollableItemList": "ScrollableItemList",
    "Graphics::BaseItemButtons": "BaseItemButtons",
    "Graphics::BaseItemButton": "BaseItemButton",
    "Graphics::StationGridCell": "StationGridCell",
    "Graphics::StationGrid": "StationGrid",
    "Graphics::DBObjectGridBase": "DBObjectGridBase",
    "Graphics::DBObjectGridCell": "DBObjectGridCell",
    "Graphics::ShowHistoryGrid": "ShowHistoryGrid",
    "Graphics::ShowHistoryGridData": "ShowHistoryGridData",
    "Graphics::ShowHistoryGridCell": "ShowHistoryGridCell",
    "Graphics::FilebrowserView": "FilebrowserView",
    "Graphics::FileGridData": "FileGridData",
    "Graphics::FileGridCell": "FileGridCell",
    "Graphics::MultiSyncGridScroller": "MultiSyncGridScroller",
    "Graphics::MultiScroller": "MultiScroller",
    "Graphics::UIGrid": "UIGrid",
    "Graphics::UIGridCell": "UIGridCell",
    "Graphics::UIGridCellBase": "UIGridCellBase",
    "Graphics::UIGridEditModeButton": "UIGridEditModeButton",
    "Graphics::UIGridConfigButton": "UIGridConfigButton",
    "Graphics::UIGridConfigLayout": "UIGridConfigLayout",
    "Graphics::UIGridButtons": "UIGridButtons",
    "Graphics::UIGridButtonsCollect": "UIGridButtonsCollect",
    "Graphics::UIGridLevelButton": "UIGridLevelButton",
    "Graphics::UIGridButton": "UIGridButton",
    "Graphics::UIGridInternals": "UIGridInternals",
    "Graphics::UIGridFilterBlock": "UIGridFilterBlock",
    "Graphics::ExpandableButton": "ExpandableButton",
    "Graphics::RotationButton": "RotationButton",
    "Graphics::BandFader": "BandFader",
    "Graphics::DCRemoteInfo": "DCRemoteInfo",
    "Graphics::TimecodeSlotInfo": "TimecodeSlotInfo",
    "Graphics::WebView": "WebView",
    "Graphics::ColorView": "ColorView",
    "Graphics::ScribbleEditView": "ScribbleEditView",
    "Graphics::ScrollContainerPageScrollItemList": "ScrollContainerPageScrollItemList",
    "Graphics::ScrollContainerPage": "ScrollContainerPage",
    "Graphics::ScrollContainerPageBase": "ScrollContainerPageBase",
    "Graphics::ScrollContainer": "ScrollContainer",
    "Graphics::ScrollBox": "ScrollBox",
    "Graphics::SplitView": "SplitView",
    "Graphics::AutoLayout": "AutoLayout",
    "Graphics::ShowMoreButton": "ShowMoreButton",
    "Graphics::DialogContainer": "DialogContainer",
    "Graphics::ObjectProperties": "ObjectProperties",
    "Graphics::UI2DView": "UI2DView",
    "Graphics::ResizeCorner": "ResizeCorner",
    "Graphics::Dialog": "Dialog",
    "Graphics::TextView": "TextView",
    "Graphics::LineEditExt": "LineEditExt",
    "Graphics::LineEdit": "LineEdit",
    "Graphics::ShowVKButton": "ShowVKButton",
    "Graphics::UiFader": "UiFader",
    "Graphics::DimmerWheelButton": "DimmerWheelButton",
    "Graphics::KeyboardShortcutControl": "KeyboardShortcutControl",
    "Graphics::HardkeyButton": "HardkeyButton",
    "Graphics::PropertyLabel": "PropertyLabel",
    "Graphics::TitleBar": "TitleBar",
    "Graphics::XlrModeButton": "XlrModeButton",
    "Graphics::EjectButton": "EjectButton",
    "Graphics::DriveSelector": "DriveSelector",
    "Graphics::ObjectSelector": "ObjectSelector",
    "Graphics::ProgressBar": "ProgressBar",
    "Graphics::TitleButton": "TitleButton",
    "Graphics::DeleteWindowButton": "DeleteWindowButton",
    "Graphics::CloseButton": "CloseButton",
    "Graphics::ContextButton": "ContextButton",
    "Graphics::WarningInfoButton": "WarningInfoButton",
    "Graphics::LogoButton": "LogoButton",
    "Graphics::SwipeButtonList": "SwipeButtonList",
    "Graphics::SwipeButton": "SwipeButton",
    "Graphics::ToggleButtonList": "ToggleButtonList",
    "Graphics::ToggleButton": "ToggleButton",
    "Graphics::BaseStateButton": "BaseStateButton",
    "Graphics::EncoderOverlayPlaceholder": "EncoderOverlayPlaceholder",
    "Graphics::PopupPlaceholder": "PopupPlaceholder",
    "Graphics::CheckBox": "CheckBox",
    "Graphics::StateButton": "StateButton",
    "Graphics::PropertyInput": "PropertyInput",
    "Graphics::ScreenSelectorButton": "ScreenSelectorButton",
    "Graphics::DialogButton": "DialogButton",
    "Graphics::ScreenEncoderControl": "ScreenEncoderControl",
    "Graphics::EncoderControl": "EncoderControl",
    "Graphics::ValueControl": "ValueControl",
    "Graphics::UIToggleButton": "UIToggleButton",
    "Graphics::KBShortcutButton": "KBShortcutButton",
    "Graphics::IndicatorButton": "IndicatorButton",
    "Graphics::IndicatorControl": "IndicatorControl",
    "Graphics::PropertyControl": "PropertyControl",
    "Graphics::ScrollBarButtonH": "ScrollBarButtonH",
    "Graphics::ScrollBarButtonV": "ScrollBarButtonV",
    "Graphics::ScrollBarButton": "ScrollBarButton",
    "Graphics::ScrollBarH": "ScrollBarH",
    "Graphics::ScrollBarV": "ScrollBarV",
    "Graphics::ScrollBar": "ScrollBar",
    "Graphics::MovableButton": "MovableButton",
    "Graphics::Button": "Button",
    "LUA::UIPluginComponentXML": "ComponentXML",
    "Graphics::TextEdit": "TextEdit",
    "Graphics::RemoteInputLock": "RemoteInputLock",
    "Graphics::DeskLock": "DeskLock",
    "Graphics::MiniEncoder": "MiniEncoder",
    "Graphics::LinearResizer": "LinearResizer",
    "Graphics::SplitterV": "SplitterV",
    "Graphics::SplitterH": "SplitterH",
    "Graphics::Splitter": "Splitter",
    "Graphics::BaseInput": "BaseInput",
    "Graphics::GraphicsRoot": "GraphicsRoot",
    "Graphics::UIPult": "Pult",
    "Graphics::Display": "Display",
    "Graphics::DisplayCollect": "DisplayCollect",
    "Graphics::ScreenEncoderBar": "ScreenEncoderBar",
    "Graphics::EncoderBarSlot": "EncoderBarSlot",
    "Graphics::EncoderBarPlaceHolder": "EncoderBarPlaceHolder",
    "Graphics::GraphicsEncoderBar": "GraphicsEncoderBar",
    "Graphics::Bar": "Bar",
    "Graphics::SwipeMenuOverlay": "SwipeMenuOverlay",
    "Graphics::RecurringOverlay": "RecurringOverlay",
    "Graphics::ContentOverlay": "ContentOverlay",
    "Graphics::DialogFrame": "DialogFrame",
    "Graphics::ShadedOverlay": "ShadedOverlay",
    "Graphics::Overlay": "Overlay",
    "Graphics::FrameBufferObject": "FrameBufferObject",
    "Graphics::Drawable": "Drawable",
    "Graphics::Resolution": "Resolution",
    "Graphics::Monitor": "Monitor",
    "Graphics::MonitorCollect": "MonitorCollect",
    "Graphics::UiLayout::Item": "Item",
    "Graphics::UiLayout::ItemCollectColumns": "ItemCollectColumns",
    "Graphics::UiLayout::ItemCollectRows": "ItemCollectRows",
    "Graphics::UiLayout::ItemCollect": "ItemCollect",
    "Graphics::UILayoutGrid": "UILayoutGrid",
    "Graphics::ModalPlaceholder": "ModalPlaceholder",
    "Graphics::PlaceHolder": "PlaceHolder",
    "Graphics::PlaceHolderBase": "PlaceHolderBase",
    "Graphics::UIObjectFake": "UIObjectFake",
    "Graphics::UIObject": "UIObject",
    "Graphics::ContentManager": "ContentManager",
    "Graphics::Backdrop": "Backdrop",
    "Graphics::SecureTexture": "SecureTexture",
    "Graphics::Texture": "Texture",
    "Graphics::Shader": "Shader",
    "Graphics::ShaderProgram": "ShaderProgram",
    "Graphics::ShaderProgramCollect": "ShaderProgramCollect",
    "Graphics::Font": "Font",
    "Graphics::TextureFont": "Fonts",
    "Graphics::TextureContainer": "Textures",
    "Graphics::TextureCollect": "TextureCollect",
    "Graphics::GraphicsObject": "GraphicsObject",
    "Graphics::GlWebView": "WebView",
    "Graphics::GlTexPageDebugView": "TexPageDebugView",
    "Graphics::GlWindowBase": "GlWindowBase",
    "Graphics::GlMonitor": "Monitor",
    "Graphics::GlMonitorCollect": "MonitorCollect",
    "Graphics::GlUIPult": "Pult",
    "Graphics::GlUI2DView": "UI2DView",
    "Graphics::GlFrameBufferObject": "FrameBufferObject",
    "Graphics::WingLocalDisplay": "WingLocalDisplay",
    "Graphics::GlDisplayCollect": "DisplayCollect",
    "Graphics::GlDisplay": "Display",
    "Graphics::GlGraphicsRoot": "GraphicsRoot",
    "Graphics::GlShader": "Shader",
    "Graphics::GlShaderProgram": "ShaderProgram",
    "Graphics::GlShaderProgramCollect": "ShaderProgramCollect",
    "Graphics::GlContentManager": "ContentManager",
    "Graphics::GlTextureFont": "Fonts",
    "Graphics::GlTextureContainer": "Textures",
    "Graphics::GlTextureCollect": "TextureCollect",
    "Gma3UI::MainDlgFixtureSetupGl": "MainDlgFixtureSetup",
    "Gma3UI::Gma3PultGl": "Pult",
    "Gma3UI::WindowFixturetypeVisualizer": "WindowFixturetypeVisualizer",
    "Gma3UI::MeshPreview": "MeshPreview",
    "Gma3UI::LayoutCanvasGl": "LayoutCanvas",
    "Gma3UI::ColorEngineDebugView": "ColorEngineDebugView",
    "Gma3UI::WindowMeshStatistics": "WindowMeshStatistics",
    "Gma3UI::WindowTextureStatistics": "WindowTextureStatistics",
    "Gma3UI::SelectionView": "SelectionView",
    "Gma3UI::LivePatchView3D": "LivePatchView3D",
    "Gma3UI::PatchView3D": "PatchView3D",
    "Gma3UI::View3D": "View3D",
    "Gma3UI::CommandWingBarContainer": "CommandWingBarContainer",
    "Gma3UI::CommandWingBarWindow": "CommandWingBarWindow",
    "Gma3UI::CommandWingBarPlaybackContent": "CommandWingBarPlaybackContent",
    "Gma3UI::WindowEncoderBar": "WindowEncoderBar",
    "Gma3UI::AuxValueControl": "AuxValueControl",
    "Gma3UI::TimecodeTextGridCell": "TimecodeTextGridCell",
    "Gma3UI::TimecodeTextGrid": "TimecodeTextGrid",
    "Gma3UI::TCTimeButton": "TCTimeButton",
    "Gma3UI::TimecodeEditor": "TimecodeEditor",
    "Gma3UI::TimecodeBar": "TimecodeBar",
    "Gma3UI::TimecodeWindow": "TimecodeWindow",
    "Gma3UI::TimecodeGridCell": "TimecodeGridCell",
    "Gma3UI::TimecodeGrid": "TimecodeGrid",
    "Gma3UI::TimeMarkerTimelineCell": "TimeMarkerTimelineCell",
    "Gma3UI::TrackGroupTimelineCell": "TrackGroupTimelineCell",
    "Gma3UI::TrackTimelineCell": "TrackTimelineCell",
    "Gma3UI::TimelineHeaderCell": "TimelineHeaderCell",
    "Gma3UI::TimelineDataCell": "TimelineDataCell",
    "Gma3UI::TimelineCell": "TimelineCell",
    "Gma3UI::SpecialExecutorKey": "SpecialExecutorKey",
    "Gma3UI::OutputTest": "OutputTest",
    "Gma3UI::PSR::PSRTabs": "PSRTabs",
    "Gma3UI::PSR::ResultPoolWindow": "ResultPoolWindow",
    "Gma3UI::PSR::ResultShowGrid": "PSRResultShowGrid",
    "Gma3UI::PSR::ImportGrid": "PSRImportGrid",
    "Gma3UI::PSR::ImportMainDialog": "PSRImportMainDialog",
    "Gma3UI::PSR::ImportPoolWindow": "PsrImportPoolWindow",
    "Gma3UI::PSR::PoolGrid": "PsrPoolGrid",
    "Gma3UI::PSR::PatchMainDialog": "PSRPatchMainDialog",
    "Gma3UI::PSR::PatchGrid": "PSRPatchGrid",
    "Gma3UI::TitleAutoLayout": "TitleAutoLayout",
    "Gma3UI::EditTitlebarButton": "EditTitlebarButton",
    "Gma3UI::TitlebuttonControl": "TitlebuttonControl",
    "Gma3UI::DmxCurveEditor": "UIDmxCurveEditor",
    "Gma3UI::DeleteCueMessageBox": "DeleteCueMessageBox",
    "Gma3UI::StoreCueMessageBox": "StoreCueMessageBox",
    "Gma3UI::CopyCueMessageBox": "CopyCueMessageBox",
    "Gma3UI::CopyStoreCueMessageBoxBase": "CopyStoreCueMessageBoxBase",
    "Gma3UI::MainDlgLeaveSessionButton": "MainDlgLeaveSessionButton",
    "Gma3UI::MainDlgJoinSessionButton": "MainDlgJoinSessionButton",
    "Gma3UI::MainDlgDismissStationButton": "MainDlgDismissStationButton",
    "Gma3UI::MainDlgInviteStationButton": "MainDlgInviteStationButton",
    "Gma3UI::UiStationGrid": "UiStationGrid",
    "Gma3UI::ShaperEncoderControl": "ShaperEncoderControl",
    "Gma3UI::PhaserEncoderControl": "PhaserEncoderControl",
    "Gma3UI::PhaserUI::StepSheet": "PhaserStepSheet",
    "Gma3UI::PhaserBar": "PhaserBar",
    "Gma3UI::PhaserUI::Bar": "PhaserEditorBar",
    "Gma3UI::PhaserUI::LayoutGrid": "PhaserLayoutGrid",
    "Gma3UI::PhaserUI::TimeLineGrid": "UIPhaserTimeLineGrid",
    "Gma3UI::PhaserUI::TimeLine": "UIPhaserTimeLine",
    "Gma3UI::PhaserUI::Center": "PhaserUICenter",
    "Gma3UI::GraphEditor": "GraphEditor",
    "Gma3UI::PhaserUI::PathEditor": "PhaserPathEditor",
    "Gma3UI::PhaserUI::SpeedEditor": "PhaserSpeedEditor",
    "Gma3UI::PhaserUI::PhaseEditor": "PhaserPhaseEditor",
    "Gma3UI::PhaserUI::WidthEditor": "PhaserWidthEditor",
    "Gma3UI::EditorBase": "EditorBase",
    "Gma3UI::AppearanceTitleBar": "AppearanceTitleBar",
    "Gma3UI::NormedTitleBar": "NormedTitleBar",
    "Gma3UI::DialogTrackpad": "DialogTrackpad",
    "Gma3UI::TrackpadPanTiltControl": "TrackpadPanTiltControl",
    "Gma3UI::TrackpadMouseControl": "TrackpadMouseControl",
    "Gma3UI::MouseButton": "MouseButton",
    "Gma3UI::InfoNotesText": "InfoNotesText",
    "Gma3UI::InfoNotesLevel": "InfoNotesLevel",
    "Gma3UI::InfoNotesLabel": "InfoNotesLabel",
    "Gma3UI::InfoNotesWrapper": "InfoNotesWrapper",
    "Gma3UI::InfoNotesGridScroller": "InfoNotesGridScroller",
    "Gma3UI::ReferencesContainer": "ReferencesContainer",
    "Gma3UI::ReferencesGrid": "ReferencesGrid",
    "Gma3UI::SettingsBox": "SettingsBox",
    "Gma3UI::TouchTarget": "TouchTarget",
    "Gma3UI::TouchConfigurator": "TouchConfigurator",
    "Gma3UI::TouchMonitor": "TouchMonitor",
    "Gma3UI::DialogPrivacyPolicy": "DialogPrivacyPolicy",
    "Gma3UI::DialogTrademarks": "DialogTrademarks",
    "Gma3UI::DialogReleaseNotes": "DialogReleaseNotes",
    "Gma3UI::DialogHelp": "DialogHelp",
    "Gma3UI::HelpPopup": "HelpPopup",
    "Gma3UI::LayoutBar": "LayoutBar",
    "Gma3UI::LayoutCanvas": "LayoutCanvas",
    "Gma3UI::LayoutView": "LayoutView",
    "Gma3UI::RecipeWindow": "RecipeWindow",
    "Gma3UI::SpecialWindow": "SpecialWindow",
    "Gma3UI::CloneFilterButton": "CloneFilterButton",
    "Gma3UI::CloneAtFilterSelector": "CloneAtFilterSelector",
    "Gma3UI::CloningDialog": "CloningDialog",
    "Gma3UI::CloneFilterGrid": "CloneFilterGrid",
    "Gma3UI::CloneFilterGridData": "CloneFilterGridData",
    "Graphics::CloneGrid": "CloneGrid",
    "Graphics::CloneGridCell": "CloneGridCell",
    "Graphics::CloneGridData": "CloneGridData",
    "Gma3UI::ShaperWindowContent": "ShaperWindowContent",
    "Gma3UI::DatumInput": "DatumInput",
    "Gma3UI::AgendaMonthsGrid": "AgendaMonthsGrid",
    "Gma3UI::AgendaDaysGrid": "AgendaDaysGrid",
    "Gma3UI::WindowAgenda": "WindowAgenda",
    "Gma3UI::ShaperTestView": "ShaperTestView",
    "Gma3UI::CustomMasterLayoutGrid": "CustomMasterLayoutGrid",
    "Gma3UI::WindowTrackpad": "WindowTrackpad",
    "Gma3UI::ColorTestView": "ColorTestView",
    "Gma3UI::ColorPickerContent": "ColorPickerContent",
    "Gma3UI::SpecialWindowContent": "SpecialWindowContent",
    "Gma3UI::BladeView": "BladeView",
    "Gma3UI::WindowInfo": "WindowInfo",
    "Gma3UI::XKeysViewWindow": "XKeysViewWindow",
    "Gma3UI::XKeysViewExecutorBar": "XKeysViewExecutorBar",
    "Gma3UI::XKeysHardwareButton": "XKeysHardwareButton",
    "Gma3UI::XKeysHardwareMiniEncoder": "XKeysHardwareMiniEncoder",
    "Gma3UI::PlaybackViewWindow": "PlaybackViewWindow",
    "Gma3UI::WindowHelpViewer": "WindowHelpViewer",
    "Gma3UI::ClockWindow": "ClockWindow",
    "Gma3UI::DateClock": "DateClock",
    "Gma3UI::TimerClock": "TimerClock",
    "Gma3UI::TimecodeSlotClock": "TimecodeSlotClock",
    "Gma3UI::AnalogClock": "AnalogClock",
    "Gma3UI::DigitalClock": "DigitalClock",
    "Gma3UI::BaseClock": "BaseClock",
    "Gma3UI::PixelSymbol": "PixelSymbol",
    "Gma3UI::SeparatorSymbol": "SeparatorSymbol",
    "Gma3UI::BaseSymbol": "BaseSymbol",
    "Gma3UI::SystemMonitorWindow": "SystemMonitorWindow",
    "Gma3UI::PhaserViewWindow": "PhaserViewWindow",
    "Gma3UI::StepControl": "StepControl",
    "Gma3UI::PosCalibrationView": "PosCalibrationView",
    "Gma3UI::PosCalibGridData": "PosCalibGridData",
    "Gma3UI::SelectionViewWindow": "SelectionViewWindow",
    "Gma3UI::SoundBeatView": "SoundBeatView",
    "Gma3UI::SoundWaveView": "SoundWaveView",
    "Gma3UI::SoundLevelView": "SoundLevelView",
    "Gma3UI::SoundBandView": "SoundBandView",
    "Gma3UI::SyncTestView": "SyncTestView",
    "Gma3UI::NetworkTestView": "NetworkTestView",
    "Gma3UI::ChannelTestView": "ChannelTestView",
    "Gma3UI::FaderTestView": "FaderTestView",
    "Gma3UI::PerformanceView": "PerformanceView",
    "Gma3UI::StatusWindow": "StatusWindow",
    "Gma3UI::SignalView": "SignalView",
    "Gma3UI::ShowCreatorTypeControl": "ShowCreatorTypeControl",
    "Gma3UI::ShowCreatorSubpoolSelectorList": "ShowCreatorSubpoolSelectorList",
    "Gma3UI::ShowCreatorPoolGrid": "ShowCreatorPoolGrid",
    "Gma3UI::ShowCreatorFTPresetsMainDialog": "ShowCreatorFTPresetsMainDialog",
    "Gma3UI::ShowCreatorMainDialogBase": "ShowCreatorMainDialogBase",
    "Gma3UI::OSMidiSelect": "OSMidiSelect",
    "Gma3UI::OSMidiGrid": "OSMidiGrid",
    "Gma3UI::TimezoneInput": "TimezoneInput",
    "Gma3UI::TimezoneGrid": "TimezoneGrid",
    "Gma3UI::DBObjectTab": "DBObjectTab",
    "Gma3UI::TreeView::ObjFrame": "ObjTreeViewFrame",
    "Gma3UI::TreeView::PSRFrame": "PSRTreeViewFrame",
    "Gma3UI::TreeView::NameButton": "TreeNameButton",
    "Gma3UI::TreeView::SelectButton": "SelectButton",
    "Gma3UI::TreeView::ExpandButton": "TreeExpandButton",
    "Gma3UI::TreeView::Row": "TreeViewRow",
    "Gma3UI::TreeView::RowContainer": "TreeViewRows",
    "Gma3UI::TreeView::Frame": "TreeViewFrame",
    "Gma3UI::WindowTypeGrid": "WindowTypeGrid",
    "Gma3UI::WindowTypeGridCell": "WindowTypeGridCell",
    "Gma3UI::SelectedGridCell": "SelectedGridCell",
    "Gma3UI::SelectedGrid": "SelectedGrid",
    "Gma3UI::OopsGrid": "OopsGrid",
    "Gma3UI::FTInfoGridData": "FTInfoGridData",
    "Gma3UI::FixtureTypeGridCell": "FixtureTypeGridCell",
    "Gma3UI::FixtureTypeGrid": "FixtureTypeGrid",
    "Gma3UI::CueInputGridCell": "CueInputGridCell",
    "Gma3UI::CueInputGrid": "CueInputGrid",
    "Gma3UI::LayoutEditorGrid": "LayoutEditorGrid",
    "Gma3UI::AgendaGrid": "AgendaGrid",
    "Gma3UI::ProgrammerGridCell": "ProgrammerGridCell",
    "Gma3UI::ProgrammerGrid": "ProgrammerGrid",
    "Gma3UI::ProgUpdateGrid": "ProgUpdateGrid",
    "Gma3UI::MeshLineEdit": "MeshLineEdit",
    "Gma3UI::MeshMaterialGrid": "MeshMaterialGrid",
    "Gma3UI::NormedGrid": "NormedGrid",
    "Gma3UI::GelGridCell": "GelGridCell",
    "Gma3UI::GelGrid": "GelGrid",
    "Gma3UI::ContentView": "ContentView",
    "Gma3UI::ContentWindow": "ContentWindow",
    "Gma3UI::SequenceWindow": "SequenceWindow",
    "Gma3UI::SequenceCmdRunButton": "SequenceCmdRunButton",
    "Gma3UI::SequenceGridCell": "SequenceGridCell",
    "Gma3UI::SequenceGrid": "SequenceGrid",
    "Gma3UI::OutputConfigGridCell": "OutputConfigGridCell",
    "Gma3UI::OutputConfigGrid": "OutputConfigGrid",
    "Gma3UI::TagGridCell": "TagGridCell",
    "Gma3UI::ContentSheetGridCell": "ContentSheetGridCell",
    "Gma3UI::ContentSheetGridScroller": "ContentSheetGridScroller",
    "Gma3UI::ContentSheet": "ContentSheet",
    "Gma3UI::ContentCheckBox": "ContentCheckBox",
    "Gma3UI::GridPatchContentFilterEditor": "GridPatchContentFilterEditor",
    "Gma3UI::GridContentFilterEditor": "GridContentFilterEditor",
    "Gma3UI::FixtureSheet": "FixtureSheet",
    "Gma3UI::FixtureSheetGridCell": "FixtureSheetGridCell",
    "Gma3UI::TrackSheetGridCell": "TrackSheetGridCell",
    "Gma3UI::PhaserGridCell": "PhaserGridCell",
    "Gma3UI::DmxSheetGridCell": "DmxSheetGridCell",
    "Gma3UI::DmxSheet": "DMXSheet",
    "Gma3UI::GenericSheet": "GenericSheet",
    "Gma3UI::Gma3DBObjectGridCell": "DBObjectGridCell",
    "Gma3UI::PatchFixtureGrid": "PatchFixtureGrid",
    "Gma3UI::DBObjectGrid": "DBObjectGrid",
    "Gma3UI::ProgressButton": "ProgressButton",
    "Gma3UI::MessageCenterWindow": "MessageCenterWindow",
    "Gma3UI::MessageCenterInfoButton": "MessageCenterInfoButton",
    "Gma3UI::MessageCenterButton": "MessageCenterButton",
    "Gma3UI::UiMessageCenter": "UiMessageCenter",
    "Gma3UI::DeskLightsFader": "DeskLightsFader",
    "Gma3UI::GrandMasterFader": "GrandMasterFader",
    "Gma3UI::ShaperPovFader": "ShaperPovFader",
    "Gma3UI::ShaperEditorFader": "ShaperEditorFader",
    "Gma3UI::ShaperEditorFaderGrid": "ShaperEditorFaderGrid",
    "Gma3UI::ColorPickerFader": "ColorPickerFader",
    "Gma3UI::ColorInterfaceFader": "ColorInterfaceFader",
    "Gma3UI::UserEncoderPageSelector": "UserEncoderPageSelector",
    "Gma3UI::EncoderBankRadioButton": "EncoderBankRadioButton",
    "Gma3UI::EncoderBankSelector": "EncoderBankSelector",
    "Gma3UI::AttributeRadioButton": "AttributeRadioButton",
    "Gma3UI::AttributeRadioButtonList": "AttributeRadioButtonList",
    "Gma3UI::FeatureRadioButtonList": "FeatureRadioButtonList",
    "Gma3UI::ChildRadioButtonList": "ChildRadioButtonList",
    "Gma3UI::RadioItemButtonWithIndicator": "RadioItemButtonWithIndicator",
    "Gma3UI::MainDlgCommandControl": "MainDlgCommandControl",
    "Gma3UI::MainDlgDErrorReport": "MainDlgDErrorReport",
    "Gma3UI::MainDlgFixtureSetup": "MainDlgFixtureSetup",
    "Gma3UI::PatchToOverlay": "PatchToOverlay",
    "Gma3UI::ColorMeasurementOverlay": "ColorMeasurementOverlay",
    "Gma3UI::ObjectView": "ObjectView",
    "Gma3UI::RunningPlaybacksPoolLayoutGrid": "RunningPlaybacksPoolLayoutGrid",
    "Gma3UI::RunningPlaybacksWindow": "RunningPlaybacksWindow",
    "Gma3UI::SequenceEditBar": "SequenceEditBar",
    "Gma3UI::StageViewBar": "StageViewBar",
    "Gma3UI::ViewBar": "ViewBar",
    "Gma3UI::ViewBarButton": "ViewBarButton",
    "Gma3UI::EnableMasterFaderButton": "EnableMasterFaderButton",
    "Gma3UI::OffMenuOverlay": "OffMenuOverlay",
    "Gma3UI::PoolScreen": "PoolScreen",
    "Gma3UI::PoolOverlay": "PoolOverlay",
    "Gma3UI::AllPoolFiller": "AllPoolFiller",
    "Gma3UI::PoolFiller": "PoolFiller",
    "Gma3UI::TimecodePoolTitleButton": "TimecodePoolTitleButton",
    "Gma3UI::PluginPoolTitleButton": "PluginPoolTitleButton",
    "Gma3UI::MacroPoolTitleButton": "MacroPoolTitleButton",
    "Gma3UI::FilterPoolTitleButton": "FilterPoolTitleButton",
    "Gma3UI::SequencePoolTitleButton": "SequencePoolTitleButton",
    "Gma3UI::TimerPoolButton": "TimerPoolButton",
    "Gma3UI::TimePoolLayoutGrid": "TimePoolLayoutGrid",
    "Gma3UI::TimerPoolTitleButton": "TimerPoolTitleButton",
    "Gma3UI::TimecodeSlotPoolTitleButton": "TimecodeSlotPoolTitleButton",
    "Gma3UI::TimecodeSlotPoolButton": "TimecodeSlotPoolButton",
    "Gma3UI::TimecodeSlotLayoutGrid": "TimecodeSlotLayoutGrid",
    "Gma3UI::SmartViewPoolButton": "SmartViewPoolButton",
    "Gma3UI::SmartViewPoolLayoutGrid": "SmartViewPoolLayoutGrid",
    "Gma3UI::SoundPoolTitleButton": "SoundPoolTitleButton",
    "Gma3UI::SoundPoolButton": "SoundPoolButton",
    "Gma3UI::SoundPoolLayoutGrid": "SoundPoolLayoutGrid",
    "Gma3UI::EncoderBarPoolButton": "EncoderBarPoolButton",
    "Gma3UI::EncoderBarPoolLayoutGrid": "EncoderBarPoolLayoutGrid",
    "Gma3UI::UserPoolButton": "UserPoolButton",
    "Gma3UI::UserPoolLayoutGrid": "UserPoolLayoutGrid",
    "Gma3UI::UniversePoolButton": "UniversePoolButton",
    "Gma3UI::UniversePoolLayoutGrid": "UniversePoolLayoutGrid",
    "Gma3UI::GeneratorBitmapPoolLayoutGrid": "GeneratorBitmapPoolLayoutGrid",
    "Gma3UI::GeneratorRandomPoolLayoutGrid": "GeneratorRandomPoolLayoutGrid",
    "Gma3UI::GeneratorPoolButton": "GeneratorPoolButton",
    "Gma3UI::LayoutPoolLayoutGrid": "LayoutPoolLayoutGrid",
    "Gma3UI::TimecodePoolButton": "TimecodePoolButton",
    "Gma3UI::TimecodePoolLayoutGrid": "TimecodePoolLayoutGrid",
    "Gma3UI::MeshPoolButton": "MeshPoolButton",
    "Gma3UI::MeshPoolLayoutGrid": "MeshPoolLayoutGrid",
    "Gma3UI::MatricksPoolButton": "MatricksPoolButton",
    "Gma3UI::MatricksPoolLayoutGrid": "MatricksPoolLayoutGrid",
    "Gma3UI::MaterialPoolButton": "MaterialPoolButton",
    "Gma3UI::MaterialPoolLayoutGrid": "MaterialPoolLayoutGrid",
    "Gma3UI::RenderQualityPoolButton": "RenderQualityPoolButton",
    "Gma3UI::RenderQualityPoolLayoutGrid": "RenderQualityPoolLayoutGrid",
    "Gma3UI::CameraPoolButton": "CameraPoolButton",
    "Gma3UI::CameraPoolLayoutGrid": "CameraPoolLayoutGrid",
    "Gma3UI::GelPoolTitleButton": "GelPoolTitleButton",
    "Gma3UI::GelPoolButton": "GelPoolButton",
    "Gma3UI::GelPoolLayoutGrid": "GelPoolLayoutGrid",
    "Gma3UI::ScribblePoolButton": "ScribblePoolButton",
    "Gma3UI::ScribblePoolLayoutGrid": "ScribblePoolLayoutGrid",
    "Gma3UI::AppearancePoolButton": "AppearancePoolButton",
    "Gma3UI::AppearancePoolLayoutGrid": "AppearancePoolLayoutGrid",
    "Gma3UI::TagPoolButton": "TagPoolButton",
    "Gma3UI::TagPoolLayoutGrid": "TagPoolLayoutGrid",
    "Gma3UI::SymbolPoolLayoutGrid": "SymbolPoolLayoutGrid",
    "Gma3UI::GoboPoolButton": "GoboPoolButton",
    "Gma3UI::GoboPoolLayoutGrid": "GoboPoolLayoutGrid",
    "Gma3UI::VideoPoolTitleButton": "VideoPoolTitleButton",
    "Gma3UI::VideoPoolButton": "VideoPoolButton",
    "Gma3UI::VideoPoolLayoutGrid": "VideoPoolLayoutGrid",
    "Gma3UI::ImagePoolButton": "ImagePoolButton",
    "Gma3UI::ImagePoolLayoutGrid": "ImagePoolLayoutGrid",
    "Gma3UI::ConfigurationPoolButton": "ConfigurationPoolButton",
    "Gma3UI::ConfigurationPoolLayoutGrid": "ConfigurationPoolLayoutGrid",
    "Gma3UI::DataPoolButton": "DataPoolButton",
    "Gma3UI::DataPoolLayoutGrid": "DataPoolLayoutGrid",
    "Gma3UI::MenuPoolButton": "MenuPoolButton",
    "Gma3UI::MenuPoolLayoutGrid": "MenuPoolLayoutGrid",
    "Gma3UI::PluginPoolButton": "PluginPoolButton",
    "Gma3UI::PluginPoolLayoutGrid": "PluginPoolLayoutGrid",
    "Gma3UI::FilterPoolButton": "FilterPoolButton",
    "Gma3UI::FilterPoolLayoutGrid": "FilterPoolLayoutGrid",
    "Gma3UI::WorldPoolButton": "WorldPoolButton",
    "Gma3UI::WorldPoolLayoutGrid": "WorldPoolLayoutGrid",
    "Gma3UI::ViewPoolButton": "ViewPoolButton",
    "Gma3UI::ViewPoolLayoutGrid": "ViewPoolLayoutGrid",
    "Gma3UI::SequencePoolButton": "SequencePoolButton",
    "Gma3UI::SequencePoolLayoutGrid": "SequencePoolLayoutGrid",
    "Gma3UI::PresetPoolButton": "PresetPoolButton",
    "Gma3UI::PresetPoolLayoutGrid": "PresetPoolLayoutGrid",
    "Gma3UI::PagePoolButton": "PagePoolButton",
    "Gma3UI::PagePoolLayoutGrid": "PagePoolLayoutGrid",
    "Gma3UI::QuickeyPoolButton": "QuickeyPoolButton",
    "Gma3UI::QuickeyPoolLayoutGrid": "QuickeyPoolLayoutGrid",
    "Gma3UI::MacroPoolButton": "MacroPoolButton",
    "Gma3UI::MacroPoolLayoutGrid": "MacroPoolLayoutGrid",
    "Gma3UI::GroupPoolButton": "GroupPoolButton",
    "Gma3UI::GroupPoolLayoutGrid": "GroupPoolLayoutGrid",
    "Gma3UI::PoolWindow": "PoolWindow",
    "Gma3UI::AllPoolWindow": "AllPoolWindow",
    "Gma3UI::AllPoolLayoutGrid": "AllPoolLayoutGrid",
    "Gma3UI::PoolLayoutGrid": "PoolLayoutGrid",
    "Gma3UI::PresetPoolTitleButton": "PresetPoolTitleButton",
    "Gma3UI::AllPoolTitleContextButton": "AllPoolTitleContextButton",
    "Gma3UI::AllPoolTitleButton": "AllPoolTitleButton",
    "Gma3UI::PoolTitleContextButton": "PoolTitleContextButton",
    "Gma3UI::PoolTitleButton": "PoolTitleButton",
    "Gma3UI::AllPoolButton": "AllPoolButton",
    "Gma3UI::PoolButton": "PoolButton",
    "Gma3UI::TagsEditContent": "TagsEditContent",
    "Gma3UI::AppearanceEditContent": "AppearanceEditContent",
    "Gma3UI::ScribbleEditContent": "ScribbleEditContent",
    "Gma3UI::TimerEditor": "TimerEditor",
    "Gma3UI::LayoutEditor": "LayoutEditor",
    "Gma3UI::LayoutElementEditorOverlay": "LayoutElementEditorOverlay",
    "Gma3UI::InsertFixturesWizard": "InsertFixturesWizard",
    "Gma3UI::RenderQualityEditor": "RenderQualityEditor",
    "Gma3UI::XlrPortInput": "XlrPortInput",
    "Gma3UI::KeyboardShortcutEditor": "KeyboardShortcutEditor",
    "Gma3UI::FixtureEditor": "FixtureEditor",
    "Gma3UI::StageEditor": "StageEditor",
    "Gma3UI::ColorPickHSRect": "ColorPickHSRect",
    "Gma3UI::ColorPickXYZ": "ColorPickXYZ",
    "Gma3UI::ColorPickHSCircle": "ColorPickHSCircle",
    "Gma3UI::ColorPickBase": "ColorPickBase",
    "Gma3UI::GenericSettingsEditor": "GenericSettingsEditor",
    "Gma3UI::PositionCalibration": "PositionCalibration",
    "Gma3UI::AppearanceEditor": "AppearanceEditor",
    "Gma3UI::ScribbleEditor": "ScribbleEditor",
    "Gma3UI::UiDmxPatch": "UIDMXPatch",
    "Gma3UI::CameraEditor": "CameraEditor",
    "Gma3UI::GeneratorBitmapEditor": "GeneratorBitmapEditor",
    "Gma3UI::SpecialExecConfigInput": "SpecialExecConfigInput",
    "Gma3UI::ExecConfigSwipe": "ExecConfigSwipe",
    "Gma3UI::ExecConfigInput": "ExecConfigInput",
    "Gma3UI::AllExecEditor": "AllExecEditor",
    "Gma3UI::MainDlgDmxModeEditor": "MainDlgDmxModeEditor",
    "Gma3UI::MainDlgFixtureTypeEditor": "MainDlgFixtureTypeEditor",
    "Gma3UI::SpecialWindowContext": "SpecialWindowContext",
    "Gma3UI::MeshSettings": "MeshSettings",
    "Gma3UI::Settings3dContext": "Settings3dContext",
    "Gma3UI::KeybSCInput": "KeybSCInput",
    "Gma3UI::MacrolineTextInput": "MacrolineTextInput",
    "Gma3UI::MacrolinePreview": "MacrolinePreview",
    "Gma3UI::MacrolineEdit": "MacrolineEdit",
    "Gma3UI::CueNumberInput": "CueNumberInput",
    "Gma3UI::GenericContext": "GenericContext",
    "Gma3UI::GenericEditorOverlay": "GenericEditorOverlay",
    "Gma3UI::GenericEditor": "GenericEditor",
    "Gma3UI::GenericAssignmentInput": "GenericAssignmentInput",
    "Gma3UI::AssignmentUITab": "AssignmentUITab",
    "Gma3UI::GenericAssignmentSelector": "GenericAssignmentSelector",
    "Gma3UI::TagButtonList": "TagButtonList",
    "Gma3UI::TagButton": "TagButton",
    "Gma3UI::RevertButton": "RevertButton",
    "Gma3UI::BladeViewButton": "BladeViewButton",
    "Gma3UI::SelectionIndicatorButton": "SelectionIndicatorButton",
    "Gma3UI::DriveStatusButton": "DriveStatusButton",
    "Gma3UI::DisplayButton": "DisplayButton",
    "Gma3UI::EncoderLinkButton": "EncoderLinkButton",
    "Gma3UI::BlinkingFadeButton": "BlinkingFadeButton",
    "Gma3UI::AgendaDayButton": "AgendaDayButton",
    "Gma3UI::PopupItemButtonExt": "PopupItemButtonExt",
    "Gma3UI::ValueFadeControl": "ValueFadeControl",
    "Gma3UI::MatricksContainer": "MatricksContainer",
    "Gma3UI::MatricksIndicatorButton": "MatricksIndicatorButton",
    "Gma3UI::MatricksToggleButton": "MatricksToggleButton",
    "Gma3UI::MatricksRadioButton": "MatricksRadioButton",
    "Gma3UI::ValueRadioControl": "ValueRadioControl",
    "Gma3UI::TimerPauseButton": "TimerPauseButton",
    "Gma3UI::TimerStopButton": "TimerStopButton",
    "Gma3UI::TimerPlayButton": "TimerPlayButton",
    "Gma3UI::TimerButton": "TimerButton",
    "Gma3UI::TimecodeSlotPauseButton": "TimecodeSlotPauseButton",
    "Gma3UI::TimecodeSlotStopButton": "TimecodeSlotStopButton",
    "Gma3UI::TimecodeSlotPlayButton": "TimecodeSlotPlayButton",
    "Gma3UI::TimecodeSlotButton": "TimecodeSlotButton",
    "Gma3UI::OSCActivityButton": "OSCActivityButton",
    "Gma3UI::ExecConfigColButton": "ExecConfigColButton",
    "Gma3UI::ExecConfigRowButton": "ExecConfigRowButton",
    "Gma3UI::CommandlineHistoryTextView": "CommandlineHistoryTextView",
    "Gma3UI::NoteTextEdit": "NoteTextEdit",
    "Gma3UI::ZoomFactorPopup": "ZoomFactorPopup",
    "Gma3UI::ImagePopup": "ImagePopup",
    "Gma3UI::ImageImport": "ImageImport",
    "Gma3UI::FixtureTypeImport": "FixtureTypeImport",
    "Gma3UI::GenericImport": "GenericImport",
    "Gma3UI::FixturetypeItemList": "FixturetypeItemList",
    "Gma3UI::FixtureTypeItemButton": "FixtureTypeItemButton",
    "Gma3UI::AtFilterPreview": "AtFilterPreview",
    "Gma3UI::AtFilterDialog": "AtFilterDialog",
    "Gma3UI::PlaybackControls": "PlaybackControls",
    "Gma3UI::PlaybackControlModularContent": "PlaybackControlModularContent",
    "Gma3UI::PlaybackControlContent": "PlaybackControlContent",
    "Gma3UI::PlaybackViewExecutorBar": "PlaybackViewExecutorBar",
    "Gma3UI::PlaybackHardwareFader": "PlaybackHardwareFader",
    "Gma3UI::PlaybackHardwareButton": "PlaybackHardwareButton",
    "Gma3UI::PlaybackHardwareMiniEncoder": "PlaybackHardwareMiniEncoder",
    "Gma3UI::HardwareButton": "HardwareButton",
    "Gma3UI::HardwareMiniEncoder": "HardwareMiniEncoder",
    "Gma3UI::HardwareFader": "HardwareFader",
    "Gma3UI::NetworkSpeedTestOverlay": "NetworkSpeedTestOverlay",
    "Gma3UI::NetworkSpeedTestGrid": "NetworkSpeedTestGrid",
    "Gma3UI::NetworkSpeedTestGridCell": "NetworkSpeedTestGridCell",
    "Gma3UI::NetworkSpeedTestGridData": "NetworkSpeedTestGridData",
    "Gma3UI::CloneOverlay": "CloneOverlay",
    "Gma3UI::EncoderOverlay": "EncoderOverlay",
    "Gma3UI::ThemeMergeToolBar": "ThemeMergeToolBar",
    "Gma3UI::ThemeMergeDialog": "ThemeMergeDialog",
    "Gma3UI::BackupMenu": "BackupMenu",
    "Gma3UI::MainDlgUpdateMenu": "MainDlgUpdateMenu",
    "Gma3UI::AudioPreview": "AudioPreview",
    "Gma3UI::AppearancePreview": "AppearancePreview",
    "Gma3UI::EditorSubCategoryButton": "EditorSubCategoryButton",
    "Gma3UI::EditorCategoryButton": "EditorCategoryButton",
    "Gma3UI::EditorSwipeButton": "EditorSwipeButton",
    "Gma3UI::EditorPropertyButton": "EditorPropertyButton",
    "Gma3UI::EditorNoteButton": "EditorNoteButton",
    "Gma3UI::EditorTagButton": "EditorTagButton",
    "Gma3UI::EditorAppearanceButton": "EditorAppearanceButton",
    "Gma3UI::EditorScribbleButton": "EditorScribbleButton",
    "Gma3UI::EditorNameButton": "EditorNameButton",
    "Gma3UI::EditorPropertyButtons": "EditorPropertyButtons",
    "Gma3UI::MainDialogDest": "MainDialogDest",
    "Gma3UI::MainDlgLoginButton": "MainDlgLoginButton",
    "Gma3UI::MainDlgGridSelectDown": "MainDlgGridSelectDown",
    "Gma3UI::MainDlgGridSelectUp": "MainDlgGridSelectUp",
    "Gma3UI::MainDlgMergeToggleButton": "MainDlgMergeToggleButton",
    "Gma3UI::MainDlgNewLineToggleButton": "MainDlgNewLineToggleButton",
    "Gma3UI::MainDlgGridToggleButton": "MainDlgGridToggleButton",
    "Gma3UI::MainDlgExportEditorButton": "MainDlgExportEditorButton",
    "Gma3UI::MainDlgExportButton": "MainDlgExportButton",
    "Gma3UI::MainDlgImportEditorButton": "MainDlgImportEditorButton",
    "Gma3UI::MainDlgImportButton": "MainDlgImportButton",
    "Gma3UI::MainDlgSelectButton": "MainDlgSelectButton",
    "Gma3UI::MainDlgEditButton": "MainDlgEditButton",
    "Gma3UI::MainDlgUndoButton": "MainDlgUndoButton",
    "Gma3UI::MainDlgPasteButton": "MainDlgPasteButton",
    "Gma3UI::MainDlgCopyButton": "MainDlgCopyButton",
    "Gma3UI::MainDlgCutButton": "MainDlgCutButton",
    "Gma3UI::MainDlgDelButton": "MainDlgDelButton",
    "Gma3UI::MainDlgBlindButton": "MainDlgBlindButton",
    "Gma3UI::MainDlgInsertButton": "MainDlgInsertButton",
    "Gma3UI::MainDlgButtonBase": "MainDlgButtonBase",
    "Gma3UI::CmdDlgFunctionButtonsLeft": "CmdDlgFunctionButtonsLeft",
    "Gma3UI::CmdDlgFunctionButtonsRight": "CmdDlgFunctionButtonsRight",
    "Gma3UI::CmdDlgFunctionButtonsBase": "CmdDlgFunctionButtonsBase",
    "Gma3UI::MainDialogFunctionButtons": "MainDialogFunctionButtons",
    "Gma3UI::MainDialogSubMenu": "MainDialogSubMenu",
    "Gma3UI::MainDialogSubMenuScrollBox": "MainDialogSubMenuScrollBox",
    "Gma3UI::MainDialogSubMenuContent": "MainDialogSubMenuContent",
    "Gma3UI::MainDialogPlaceHolder": "MainDialogPlaceHolder",
    "Gma3UI::MainDialogContent": "MainDialogContent",
    "Gma3UI::MainDialogArrowTabs": "MainDialogArrowTabs",
    "Gma3UI::MainDialogSubTabs": "MainDialogSubTabs",
    "Gma3UI::MainDialogMainTabs": "MainDialogMainTabs",
    "Gma3UI::MainDialogTabsBase": "MainDialogTabsBase",
    "Gma3UI::MainDialogSecondaryMenu": "MainDialogSecondaryMenu",
    "Gma3UI::MainDialogPrimaryMenu": "MainDialogPrimaryMenu",
    "Gma3UI::MainDialogMenuBase": "MainDialogMenuBase",
    "Gma3UI::MainDialogDummy": "MainDialogDummy",
    "Gma3UI::MainDialog": "MainDialog",
    "Gma3UI::CommandLineOutput": "CommandLineOutput",
    "Gma3UI::CommandLineWindow": "CommandLineWindow",
    "Gma3UI::Window": "Window",
    "Gma3UI::UiScreen": "UiScreen",
    "Gma3UI::ShaperEditBar": "ShaperEditBar",
    "Gma3UI::DmxTesterBar": "DmxTesterBar",
    "Gma3UI::ColorEditBar": "ColorEditBar",
    "Gma3UI::PresetBar": "PresetBar",
    "Gma3UI::ExecutorBarXKeys": "ExecutorBarXKeys",
    "Gma3UI::ExecutorBar": "ExecutorBar",
    "Gma3UI::SpecialExecSection": "SpecialExecSection",
    "Gma3UI::ExecutorSectionXKeys": "ExecutorSectionXKeys",
    "Gma3UI::ExecutorSection": "ExecutorSection",
    "Gma3UI::AllExecContent": "AllExecContent",
    "Gma3UI::ExecTitleButton": "ExecTitleButton",
    "Gma3UI::SpecialExecTitleButton": "SpecialExecTitleButton",
    "Gma3UI::AllExecTitleButton": "AllExecTitleButton",
    "Gma3UI::LastSelectedExecDisplay": "LastSelectedExecDisplay",
    "Gma3UI::SpecialExecutorDisplay": "SpecialExecutorDisplay",
    "Gma3UI::ExecutorDisplay": "ExecutorDisplay",
    "Gma3UI::AllExecDisplay": "AllExecDisplay",
    "Gma3UI::ScribbleInput": "ScribbleInput",
    "Gma3UI::AppearanceInput": "AppearanceInput",
    "Gma3UI::GelColorPropertyInput": "GelColorPropertyInput",
    "Gma3UI::ColorPropertyInput": "ColorPropertyInput",
    "Gma3UI::Gma3EncoderBar": "Gma3EncoderBar",
    "Gma3UI::Gma3EncoderControl": "Gma3EncoderControl",
    "Gma3UI::NumInputEdit": "NumInputEdit",
    "Gma3UI::KeybSCEdit": "KeybSCEdit",
    "Gma3UI::AttributeToggleButton": "AttributeToggleButton",
    "Gma3UI::AtFilterControl": "AtFilterControl",
    "Gma3UI::PresetEncoderControl": "PresetEncoderControl",
    "Gma3UI::CommandlineHistory": "CommandLineHistory",
    "Gma3UI::CmdlineEdit": "CmdlineEdit",
    "Gma3UI::Gma3Pult": "Pult"
  }
}