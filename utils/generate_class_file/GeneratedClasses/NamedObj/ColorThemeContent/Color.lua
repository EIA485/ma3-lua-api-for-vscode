---@meta

---@class Color: ColorThemeContent Describes a color in RGBA format
---@field Name string
---@field ColorDefRef ColorDef
---@field RGBA UColor
---@field Val32 integer
local Color = {
    RGBA="FFFFFFFF",
    Val32="0"
}
---@return "Color"
function Color:GetClass() end
---@return "Object"
function Color:GetChildClass() end
---@return ColorGroup
function Color:Parent() end
---@overload fun(name: "IgnoreNetwork"|"StructureLocked"|"SystemLocked"|"Lock"|"Index"|"Count"|"No", role: nil): integer
---@overload fun(name: "Name"|"Note", role: nil): string
---@overload fun(name: "UserExpanded", role: nil): integer
---@overload fun(name: "FaderEnabled"|"Owned", role: nil): boolean
---@overload fun(name: "Hidden", role: nil): integer
---@overload fun(name: "DependencyExport", role: nil): string
---@overload fun(name: "MemoryFootprint"|"AutoGenerated"|"Unmatched", role: nil): integer
---@overload fun(name: "Name", role: nil): string
---@overload fun(name: "ColorDefRef", role: nil): ColorDef
---@overload fun(name: "RGBA", role: nil): UColor
---@overload fun(name: "Val32", role: nil): integer
---@overload fun(name: "IgnoreNetwork"|"StructureLocked"|"SystemLocked"|"Lock"|"Index"|"Count"|"No"|"Name"|"Note"|"UserExpanded"|"FaderEnabled"|"Owned"|"Hidden"|"DependencyExport"|"MemoryFootprint"|"AutoGenerated"|"Unmatched"|"Name"|"ColorDefRef"|"RGBA"|"Val32", role: Enums.Roles): string
---@overload fun(name: integer, role: nil): Object
function Color:Get(name, role) end
