---@meta

---@class MatricksIndicatorButton: IndicatorControl
---@field OverridesIndicator Texture
---@field OverridesIndicatorBackColor Color
local MatricksIndicatorButton = {
    OverridesIndicator="rect_indicator",
    OverridesIndicatorBackColor="Button.Background"
}
---@return "MatricksIndicatorButton"
function MatricksIndicatorButton:GetClass() end
---@return "UIObject"
function MatricksIndicatorButton:GetChildClass() end
---@overload fun(name: "IgnoreNetwork"|"StructureLocked"|"SystemLocked"|"Lock"|"Index"|"Count"|"No", role: nil): integer
---@overload fun(name: "Name"|"Note", role: nil): string
---@overload fun(name: "UserExpanded", role: nil): integer
---@overload fun(name: "FaderEnabled"|"Owned", role: nil): boolean
---@overload fun(name: "Hidden", role: nil): integer
---@overload fun(name: "DependencyExport", role: nil): string
---@overload fun(name: "MemoryFootprint", role: nil): integer
---@overload fun(name: "X"|"Y"|"W"|"H", role: nil): Graphics.SizeDescriptor
---@overload fun(name: "AbsRect"|"AbsClientRect", role: nil): {left: number, right: number, top: number, bottom: number}
---@overload fun(name: "Texture", role: nil): Texture
---@overload fun(name: "Font"|"LowDpiFont", role: nil): Font
---@overload fun(name: "Text"|"ToolTip"|"HelpTopic", role: nil): string
---@overload fun(name: "BackColor"|"TextColor"|"TextShadowColor"|"MixInBackColor"|"HighlightedColor", role: nil): Color
---@overload fun(name: "TextVertical"|"TextAutoAdjust"|"TextUniform"|"FrameWidth", role: nil): integer
---@overload fun(name: "Padding", role: nil): {left: integer, right: integer, top: integer, bottom: integer}
---@overload fun(name: "Focus", role: nil): FocusPriority
---@overload fun(name: "UserRights", role: nil): UserRights
---@overload fun(name: "Visible"|"CanCoExistWithModal"|"UserVisible"|"Enabled"|"Interactive"|"Transparent"|"BlockClickThru"|"UserInteracted"|"HasHover"|"Separator"|"HasPressedAnimation"|"ContentDriven"|"ContentWidth"|"ContentHeight"|"ForceContentMin"|"WantsNumericRedirect", role: nil): integer
---@overload fun(name: "CloseAction", role: nil): GestureResult
---@overload fun(name: "AutoCloseValue"|"UiGroupId", role: nil): integer
---@overload fun(name: "LabelLinkHandle", role: nil): UIObject
---@overload fun(name: "IgnoreBackdropPadding"|"MixInBackColorFromParent"|"FocusSearchPolicy"|"IgnoreRequestedSize"|"ForceEncoderBar"|"SuppressOverlayAutoClose"|"IsClosing"|"TextShadow", role: nil): integer
---@overload fun(name: "MinSize"|"MaxSize", role: nil): Graphics.SizeDimension
---@overload fun(name: "Anchors", role: nil): {left: integer, right: integer, top: integer, bottom: integer}
---@overload fun(name: "SignalValue"|"SignalValueHold", role: nil): string
---@overload fun(name: "AlignmentH", role: nil): AlignmentH
---@overload fun(name: "AlignmentV", role: nil): AlignmentV
---@overload fun(name: "TextAlignmentH", role: nil): AlignmentH
---@overload fun(name: "TextAlignmentV", role: nil): AlignmentV
---@overload fun(name: "Margin", role: nil): {left: integer, right: integer, top: integer, bottom: integer}
---@overload fun(name: "PluginComponent", role: nil): Component
---@overload fun(name: "HasFocus"|"HideFocusFrame", role: nil): boolean
---@overload fun(name: "AppearanceSourceClassName", role: nil): string
---@overload fun(name: "VisibleOnlyInAlpha"|"VisibleOnlyInBeta"|"VisibleOnlyInRelease"|"ClickNearest"|"VisibleInAlpha"|"VisibleInBeta"|"VisibleInRelease", role: nil): integer
---@overload fun(name: "Clicked", role: nil): fun(str: string, Button: MouseButtonTypes, X: integer, Y: integer)
---@overload fun(name: "ClickedLeft"|"ClickedRight", role: nil): fun(str: string, X: integer, Y: integer)
---@overload fun(name: "DoubleClicked", role: nil): fun(str: string, Button: MouseButtonTypes, X: integer, Y: integer)
---@overload fun(name: "MouseEnter"|"MouseLeave"|"MouseOverHold", role: nil): fun(str: string, X: integer, Y: integer)
---@overload fun(name: "MouseUp", role: nil): fun(str: string, Button: MouseButtonTypes, X: integer, Y: integer)
---@overload fun(name: "MouseUpLeft"|"MouseUpRight", role: nil): fun(str: string, X: integer, Y: integer)
---@overload fun(name: "MouseDown", role: nil): fun(str: string, Button: MouseButtonTypes, X: integer, Y: integer)
---@overload fun(name: "MouseDownLeft"|"MouseDownRight", role: nil): fun(str: string, X: integer, Y: integer)
---@overload fun(name: "MouseDownHold", role: nil): fun(str: string, Button: MouseButtonTypes, X: integer, Y: integer)
---@overload fun(name: "KeyDown"|"KeyUp", role: nil): fun(str: string, keyCode: VirtualKeyCode, bool1: boolean, bool2: boolean, bool3: boolean)
---@overload fun(name: "CharInput", role: nil): fun(str: string, utf32Char: integer)
---@overload fun(name: "TouchStart"|"TouchUpdate"|"TouchEnd", role: nil): fun(str: string, pointID: integer, X: integer, Y: integer)
---@overload fun(name: "OnLoad", role: nil): fun(str: string, obj: Object)
---@overload fun(name: "OnVisible", role: nil): fun(str: string, bool: boolean)
---@overload fun(name: "DescriptionChanged", role: nil): fun(str: string)
---@overload fun(name: "FocusGet"|"FocusLost", role: nil): fun(str: string, obj1: Object, obj2: Object)
---@overload fun(name: "ForceIntensity", role: nil): integer
---@overload fun(name: "Icon", role: nil): Texture
---@overload fun(name: "IconColor"|"IconHoverColor", role: nil): Color
---@overload fun(name: "IconScale", role: nil): number
---@overload fun(name: "IconAlignmentH", role: nil): AlignmentH
---@overload fun(name: "IconAlignmentV", role: nil): AlignmentV
---@overload fun(name: "IconOffsetH"|"IconOffsetV"|"TextOffsetH"|"TextOffsetV", role: nil): Graphics.SizeDescriptor
---@overload fun(name: "ActiveBackColor"|"ActiveTextColor"|"ActiveIconColor", role: nil): Color
---@overload fun(name: "HotKey", role: nil): HotKey
---@overload fun(name: "State", role: nil): integer
---@overload fun(name: "ContentAreaMargin", role: nil): {left: integer, right: integer, top: integer, bottom: integer}
---@overload fun(name: "IgnoreIconForTextAlign", role: nil): boolean
---@overload fun(name: "ReferencedTitleButton", role: nil): string
---@overload fun(name: "Target", role: nil): Object
---@overload fun(name: "TargetList", role: nil): Object[]
---@overload fun(name: "Property"|"System", role: nil): string
---@overload fun(name: "ShowLabel"|"ShowValue"|"DataAsIs"|"AutoHide"|"IndirectEdit"|"ValueAutoAdjust"|"DirectProperty"|"DefaultAction"|"CharAction"|"Undo"|"ValueTextShadow"|"IgnoreActiveForEnums", role: nil): boolean
---@overload fun(name: "LabelAreaHeight", role: nil): integer
---@overload fun(name: "LabelAreaMargins"|"ValueAreaMargins", role: nil): {left: integer, right: integer, top: integer, bottom: integer}
---@overload fun(name: "ValueTextColor"|"ValueActiveTextColor", role: nil): Color
---@overload fun(name: "ValueAlignmentH", role: nil): AlignmentH
---@overload fun(name: "ValueAlignmentV", role: nil): AlignmentV
---@overload fun(name: "IconActive"|"IconInactive", role: nil): Texture
---@overload fun(name: "SetIconAsActiveInactive"|"EditNewObject"|"UseGridColor", role: nil): boolean
---@overload fun(name: "ArrayIndex", role: nil): integer
---@overload fun(name: "ValueRole", role: nil): ValueRole
---@overload fun(name: "TriggerIndirectInitLevel", role: nil): ChangeLevel
---@overload fun(name: "OnTargetChanged", role: nil): fun(str: string, int: integer)
---@overload fun(name: "NonEmptyIndicatorColor", role: nil): Color
---@overload fun(name: "OverridesIndicator", role: nil): Texture
---@overload fun(name: "OverridesIndicatorBackColor", role: nil): Color
---@overload fun(name: "IgnoreNetwork"|"StructureLocked"|"SystemLocked"|"Lock"|"Index"|"Count"|"No"|"Name"|"Note"|"UserExpanded"|"FaderEnabled"|"Owned"|"Hidden"|"DependencyExport"|"MemoryFootprint"|"X"|"Y"|"W"|"H"|"AbsRect"|"AbsClientRect"|"Texture"|"Font"|"LowDpiFont"|"Text"|"ToolTip"|"HelpTopic"|"BackColor"|"TextColor"|"TextShadowColor"|"MixInBackColor"|"HighlightedColor"|"TextVertical"|"TextAutoAdjust"|"TextUniform"|"FrameWidth"|"Padding"|"Focus"|"UserRights"|"Visible"|"CanCoExistWithModal"|"UserVisible"|"Enabled"|"Interactive"|"Transparent"|"BlockClickThru"|"UserInteracted"|"HasHover"|"Separator"|"HasPressedAnimation"|"ContentDriven"|"ContentWidth"|"ContentHeight"|"ForceContentMin"|"WantsNumericRedirect"|"CloseAction"|"AutoCloseValue"|"UiGroupId"|"LabelLinkHandle"|"IgnoreBackdropPadding"|"MixInBackColorFromParent"|"FocusSearchPolicy"|"IgnoreRequestedSize"|"ForceEncoderBar"|"SuppressOverlayAutoClose"|"IsClosing"|"TextShadow"|"MinSize"|"MaxSize"|"Anchors"|"SignalValue"|"SignalValueHold"|"AlignmentH"|"AlignmentV"|"TextAlignmentH"|"TextAlignmentV"|"Margin"|"PluginComponent"|"HasFocus"|"HideFocusFrame"|"AppearanceSourceClassName"|"VisibleOnlyInAlpha"|"VisibleOnlyInBeta"|"VisibleOnlyInRelease"|"ClickNearest"|"VisibleInAlpha"|"VisibleInBeta"|"VisibleInRelease"|"Clicked"|"ClickedLeft"|"ClickedRight"|"DoubleClicked"|"MouseEnter"|"MouseLeave"|"MouseOverHold"|"MouseUp"|"MouseUpLeft"|"MouseUpRight"|"MouseDown"|"MouseDownLeft"|"MouseDownRight"|"MouseDownHold"|"KeyDown"|"KeyUp"|"CharInput"|"TouchStart"|"TouchUpdate"|"TouchEnd"|"OnLoad"|"OnVisible"|"DescriptionChanged"|"FocusGet"|"FocusLost"|"ForceIntensity"|"Icon"|"IconColor"|"IconHoverColor"|"IconScale"|"IconAlignmentH"|"IconAlignmentV"|"IconOffsetH"|"IconOffsetV"|"TextOffsetH"|"TextOffsetV"|"ActiveBackColor"|"ActiveTextColor"|"ActiveIconColor"|"HotKey"|"State"|"ContentAreaMargin"|"IgnoreIconForTextAlign"|"ReferencedTitleButton"|"Target"|"TargetList"|"Property"|"System"|"ShowLabel"|"ShowValue"|"DataAsIs"|"AutoHide"|"IndirectEdit"|"ValueAutoAdjust"|"DirectProperty"|"DefaultAction"|"CharAction"|"Undo"|"ValueTextShadow"|"IgnoreActiveForEnums"|"LabelAreaHeight"|"LabelAreaMargins"|"ValueAreaMargins"|"ValueTextColor"|"ValueActiveTextColor"|"ValueAlignmentH"|"ValueAlignmentV"|"IconActive"|"IconInactive"|"SetIconAsActiveInactive"|"EditNewObject"|"UseGridColor"|"ArrayIndex"|"ValueRole"|"TriggerIndirectInitLevel"|"OnTargetChanged"|"NonEmptyIndicatorColor"|"OverridesIndicator"|"OverridesIndicatorBackColor", role: Enums.Roles): string
---@overload fun(name: integer, role: nil): UIObject
function MatricksIndicatorButton:Get(name, role) end
